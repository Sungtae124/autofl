[
    {
        "class_name": "org.jsoup.nodes.Attributes",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attributes.java",
        "signature": "StringBuilder accum",
        "snippet": "StringBuilder accum = new StringBuilder();\nhtml(accum, (new Document(\"\")).outputSettings()); // output settings a bit funky, but this html() seldom used\nreturn accum.toString();",
        "begin_line": 131,
        "end_line": 133,
        "comment": "    \n     Get the HTML representation of these attributes.\n     @return HTML\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attributes",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attributes.java",
        "signature": "StringBuilder p_accum_68_line_129",
        "snippet": "StringBuilder p_accum_68_line_129 = accum;\norg.jsoup.nodes.Document.OutputSettings p_out_69_line_129 = out;",
        "begin_line": 154,
        "end_line": 155,
        "comment": "    \n     Get the HTML representation of these attributes.\n     @return HTML\n     "
    },
    {
        "class_name": "org.jsoup.helper.Validate",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/helper/Validate.java",
        "signature": "int PROBE_START_LINE_15",
        "snippet": "int PROBE_START_LINE_15 = 16;\nObject p_obj_35_line_15 = obj;",
        "begin_line": 15,
        "end_line": 16,
        "comment": "    \n     * Validates that the obect is not null\n     * @param obj object to test\n     "
    },
    {
        "class_name": "org.jsoup.helper.Validate",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/helper/Validate.java",
        "signature": "boolean validate1_expr1_line_15",
        "snippet": "boolean validate1_expr1_line_15 = p_obj_35_line_15 == null;\nint PROBE_END_LINE_15 = 16;",
        "begin_line": 17,
        "end_line": 18,
        "comment": "    \n     * Validates that the obect is not null\n     * @param obj object to test\n     "
    },
    {
        "class_name": "org.jsoup.helper.Validate",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/helper/Validate.java",
        "signature": "boolean validate1_expr4_line_72",
        "snippet": "boolean validate1_expr4_line_72 = p_string_44_line_72 == null;\nboolean validate1_expr5_line_72 = false;",
        "begin_line": 82,
        "end_line": 83,
        "comment": "    \n     * Validates that the string is not empty\n     * @param string the string to test\n     "
    },
    {
        "class_name": "org.jsoup.select.Collector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Collector.java",
        "signature": "Elements elements",
        "snippet": "Elements elements = new Elements();\nint PROBE_START_LINE_25 = 25;",
        "begin_line": 24,
        "end_line": 25,
        "comment": "    \n     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n     @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n     "
    },
    {
        "class_name": "org.jsoup.select.Collector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Collector.java",
        "signature": "int PROBE_END_LINE_26",
        "snippet": "int PROBE_END_LINE_26 = 26;\nreturn v_elements_424_line_26;",
        "begin_line": 33,
        "end_line": 34,
        "comment": "    \n     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n     @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n     "
    },
    {
        "class_name": "org.jsoup.select.Collector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Collector.java",
        "signature": "int PROBE_START_LINE_34",
        "snippet": "int PROBE_START_LINE_34 = 34;\norg.jsoup.select.Elements p_elements_425_line_34 = elements;",
        "begin_line": 42,
        "end_line": 43,
        "comment": "    \n     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n     @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n     "
    },
    {
        "class_name": "org.jsoup.select.Collector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Collector.java",
        "signature": "int PROBE_END_LINE_34",
        "snippet": "int PROBE_END_LINE_34 = 34;\nthis.elements = p_elements_425_line_34;",
        "begin_line": 44,
        "end_line": 45,
        "comment": "    \n     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n     @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n     "
    },
    {
        "class_name": "org.jsoup.select.Collector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Collector.java",
        "signature": "int PROBE_END_LINE_35",
        "snippet": "int PROBE_END_LINE_35 = 35;\nthis.eval = p_eval_426_line_35;",
        "begin_line": 48,
        "end_line": 49,
        "comment": "    \n     Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.\n     @param eval Evaluator to test elements against\n     @param root root of tree to descend\n     @return list of matches; empty if none\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "private int pos",
        "snippet": "private int pos = 0;\n\nprivate static final Character ESC = '\\\\'; // escape char for chomp balanced.\n\n/**\nCreate a new TokenQueue.\n@param data string of data to back queue.\n*/\npublic TokenQueue(String data) {\nint PROBE_START_LINE_21 = 21;",
        "begin_line": 12,
        "end_line": 21,
        "comment": "\n * A character queue with parsing helpers.\n *\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "String p_data_393_line_21",
        "snippet": "String p_data_393_line_21 = data;\nint PROBE_END_LINE_21 = 21;",
        "begin_line": 22,
        "end_line": 23,
        "comment": "    \n     Create a new TokenQueue.\n     @param data string of data to back queue.\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_START_LINE_73",
        "snippet": "int PROBE_START_LINE_73 = 76;\nboolean token_queue1_expr12_line_73 = --count >= 0;",
        "begin_line": 98,
        "end_line": 99,
        "comment": "    \n     * Tests if the next characters on the queue match the sequence. Case insensitive.\n     * @param seq String to check queue for.\n     * @return true if the next characters match.\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_END_LINE_73",
        "snippet": "int PROBE_END_LINE_73 = 76;\nwhile (token_queue1_expr12_line_73) {\nint PROBE_START_LINE_74 = 75;",
        "begin_line": 100,
        "end_line": 102,
        "comment": "    \n     * Tests if the next characters on the queue match the sequence. Case insensitive.\n     * @param seq String to check queue for.\n     * @return true if the next characters match.\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "String p_seq_397_line_74",
        "snippet": "String p_seq_397_line_74 = seq;\nint v_count_398_line_74 = count;",
        "begin_line": 103,
        "end_line": 104,
        "comment": "    \n     * Tests if the next characters on the queue match the sequence. Case insensitive.\n     * @param seq String to check queue for.\n     * @return true if the next characters match.\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "String f_queue_394_line_74",
        "snippet": "String f_queue_394_line_74 = queue;\nint f_pos_391_line_74 = pos;",
        "begin_line": 107,
        "end_line": 108,
        "comment": "    \n     * Tests if the next characters on the queue match the sequence. Case insensitive.\n     * @param seq String to check queue for.\n     * @return true if the next characters match.\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "char token_queue1_expr16_line_74",
        "snippet": "char token_queue1_expr16_line_74 = Character.toLowerCase(token_queue1_expr17_line_74);\nboolean token_queue1_expr13_line_74 = token_queue1_expr14_line_74 != token_queue1_expr16_line_74;",
        "begin_line": 111,
        "end_line": 112,
        "comment": "    \n     * Tests if the next characters on the queue match the sequence. Case insensitive.\n     * @param seq String to check queue for.\n     * @return true if the next characters match.\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_START_LINE_76",
        "snippet": "int PROBE_START_LINE_76 = 76;\ntoken_queue1_expr12_line_73 = --count >= 0;",
        "begin_line": 116,
        "end_line": 117,
        "comment": "    \n     * Tests if the next characters on the queue match the sequence. Case insensitive.\n     * @param seq String to check queue for.\n     * @return true if the next characters match.\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_START_LINE_96",
        "snippet": "int PROBE_START_LINE_96 = 99;\nString[] p_seq_400_line_96 = seq;",
        "begin_line": 139,
        "end_line": 140,
        "comment": "    \n     Tests if the next characters match any of the sequences. Case insensitive.\n     @param seq\n     @return\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_END_LINE_97",
        "snippet": "int PROBE_END_LINE_97 = 98;\nif (token_queue1_expr21_line_97)\nreturn true;",
        "begin_line": 146,
        "end_line": 148,
        "comment": "    \n     Tests if the next characters match any of the sequences. Case insensitive.\n     @param seq\n     @return\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_START_LINE_116",
        "snippet": "int PROBE_START_LINE_116 = 116;\nint token_queue1_expr32_line_116 = remainingLength();",
        "begin_line": 178,
        "end_line": 179,
        "comment": "    \n     Tests if the next characters match any of the sequences. Case insensitive.\n     @param seq\n     @return\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "boolean token_queue1_expr31_line_116",
        "snippet": "boolean token_queue1_expr31_line_116 = token_queue1_expr32_line_116 >= 2;\nboolean token_queue1_expr33_line_116 = true;",
        "begin_line": 180,
        "end_line": 181,
        "comment": "    \n     Tests if the next characters match any of the sequences. Case insensitive.\n     @param seq\n     @return\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int token_queue1_expr37_line_116",
        "snippet": "int token_queue1_expr37_line_116 = pos + 1;\nchar token_queue1_expr36_line_116 = queue.charAt(token_queue1_expr37_line_116);",
        "begin_line": 191,
        "end_line": 192,
        "comment": "    \n     Tests if the next characters match any of the sequences. Case insensitive.\n     @param seq\n     @return\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_START_LINE_147",
        "snippet": "int PROBE_START_LINE_147 = 147;\nboolean token_queue1_expr49_line_147 = isEmpty();",
        "begin_line": 250,
        "end_line": 251,
        "comment": "    \n     Test if the queue matches a word character (letter or digit).\n     @return if matches a word character\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_END_LINE_192",
        "snippet": "int PROBE_END_LINE_192 = 192;\nString consumed = token_queue1_expr60_line_192;",
        "begin_line": 341,
        "end_line": 342,
        "comment": "    \n     * Pulls a string off the queue, up to but exclusive of the match sequence, or to the queue running out.\n     * @param seq String to end on (and not include in return, but leave on queue). <b>Case sensitive.</b>\n     * @return The matched data consumed from queue.\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokenQueue",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/TokenQueue.java",
        "signature": "int PROBE_START_LINE_193",
        "snippet": "int PROBE_START_LINE_193 = 193;\nString v_consumed_409_line_193 = consumed;",
        "begin_line": 343,
        "end_line": 344,
        "comment": "    \n     * Pulls a string off the queue, up to but exclusive of the match sequence, or to the queue running out.\n     * @param seq String to end on (and not include in return, but leave on queue). <b>Case sensitive.</b>\n     * @return The matched data consumed from queue.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "String f_tag_name_355_line_17",
        "snippet": "String f_tag_name_355_line_17 = f_default_ancestor_354_line_17.tagName;\nint PROBE_END_LINE_17 = 17;",
        "begin_line": 22,
        "end_line": 23,
        "comment": "\n HTML Tag specifications. This is a very simplistic model without the full expressiveness as the DTD,\n but it should capture most of what we need to know to intelligently parse a doc.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "private boolean knownTag",
        "snippet": "private boolean knownTag = false; // if pre-defined or auto-created\nprivate boolean isBlock = true; // block or inline\nprivate boolean canContainBlock = true; // Can this tag hold block level tags?\nprivate boolean canContainInline = true; // only pcdata if not\nprivate boolean optionalClosing = false; // If tag is open, and another seen, close previous tag\nprivate boolean empty = false; // can hold nothing; e.g. img\nprivate boolean selfClosing = false; // can self close (<foo />). used for unknown tags that self close, without forcing them as empty.\nprivate boolean preserveWhitespace = false; // for pre, textarea, script etc\nprivate List<Tag> ancestors; // elements must be a descendant of one of these ancestors\nint PROBE_START_LINE_30 = 30;",
        "begin_line": 28,
        "end_line": 37,
        "comment": "\n HTML Tag specifications. This is a very simplistic model without the full expressiveness as the DTD,\n but it should capture most of what we need to know to intelligently parse a doc.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_31",
        "snippet": "int PROBE_END_LINE_31 = 31;\n\nprivate List<Tag> ignoreEndTags = tag1_expr14_line_31; // ignore these end tags\nprivate boolean directDescendant; // if true, must directly descend from one of the ancestors\nprivate boolean limitChildren; // if true, only contain children that've registered parents\n\nprivate Tag(String tagName) {\nint PROBE_START_LINE_36 = 36;",
        "begin_line": 48,
        "end_line": 55,
        "comment": "\n HTML Tag specifications. This is a very simplistic model without the full expressiveness as the DTD,\n but it should capture most of what we need to know to intelligently parse a doc.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "String p_tag_name_366_line_36",
        "snippet": "String p_tag_name_366_line_36 = tagName;\nString tag1_expr16_line_36 = p_tag_name_366_line_36.toLowerCase();",
        "begin_line": 56,
        "end_line": 57,
        "comment": "\n HTML Tag specifications. This is a very simplistic model without the full expressiveness as the DTD,\n but it should capture most of what we need to know to intelligently parse a doc.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_36",
        "snippet": "int PROBE_END_LINE_36 = 36;\nthis.tagName = tag1_expr16_line_36;",
        "begin_line": 58,
        "end_line": 59,
        "comment": "\n HTML Tag specifications. This is a very simplistic model without the full expressiveness as the DTD,\n but it should capture most of what we need to know to intelligently parse a doc.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_40",
        "snippet": "int PROBE_START_LINE_40 = 40;\nString f_tag_name_355_line_40 = tagName;",
        "begin_line": 63,
        "end_line": 64,
        "comment": "\n HTML Tag specifications. This is a very simplistic model without the full expressiveness as the DTD,\n but it should capture most of what we need to know to intelligently parse a doc.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_40",
        "snippet": "int PROBE_END_LINE_40 = 40;\nreturn f_tag_name_355_line_40;",
        "begin_line": 65,
        "end_line": 66,
        "comment": "\n HTML Tag specifications. This is a very simplistic model without the full expressiveness as the DTD,\n but it should capture most of what we need to know to intelligently parse a doc.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_51",
        "snippet": "int PROBE_START_LINE_51 = 51;\nString p_tag_name_367_line_51 = tagName;",
        "begin_line": 77,
        "end_line": 78,
        "comment": "    \n     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     <p>\n     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_51",
        "snippet": "int PROBE_END_LINE_51 = 51;\nValidate.notNull(p_tag_name_367_line_51);",
        "begin_line": 79,
        "end_line": 80,
        "comment": "    \n     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     <p>\n     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "String tag1_expr19_line_52",
        "snippet": "String tag1_expr19_line_52 = p_tag_name_367_line_52.trim();\nString tag1_expr18_line_52 = tag1_expr19_line_52.toLowerCase();",
        "begin_line": 83,
        "end_line": 84,
        "comment": "    \n     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     <p>\n     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_52",
        "snippet": "int PROBE_END_LINE_52 = 52;\ntagName = tag1_expr18_line_52;",
        "begin_line": 85,
        "end_line": 86,
        "comment": "    \n     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     <p>\n     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_53",
        "snippet": "int PROBE_END_LINE_53 = 53;\nValidate.notEmpty(p_tag_name_367_line_53);",
        "begin_line": 89,
        "end_line": 90,
        "comment": "    \n     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     <p>\n     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_55",
        "snippet": "int PROBE_END_LINE_55 = 66;\nsynchronized (f_tags_353_line_55) {\nint PROBE_START_LINE_56 = 56;",
        "begin_line": 94,
        "end_line": 96,
        "comment": "    \n     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     <p>\n     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_57",
        "snippet": "int PROBE_START_LINE_57 = 64;\norg.jsoup.parser.Tag v_tag_368_line_57 = tag;",
        "begin_line": 102,
        "end_line": 103,
        "comment": "    \n     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     <p>\n     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_59",
        "snippet": "int PROBE_END_LINE_59 = 59;\n// not defined: create default; go anywhere, do anything! (incl be inside a <p>)\ntag = new Tag(p_tag_name_367_line_59);",
        "begin_line": 109,
        "end_line": 111,
        "comment": "    \n     Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     <p>\n     Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_61",
        "snippet": "int PROBE_START_LINE_61 = 61;\norg.jsoup.parser.Tag v_tag_368_line_61 = tag;",
        "begin_line": 118,
        "end_line": 119,
        "comment": "\t\t\t\t not defined: create default; go anywhere, do anything! (incl be inside a <p>)"
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_65",
        "snippet": "int PROBE_START_LINE_65 = 65;\norg.jsoup.parser.Tag v_tag_368_line_65 = tag;",
        "begin_line": 125,
        "end_line": 126,
        "comment": "\t\t\t\t not defined: create default; go anywhere, do anything! (incl be inside a <p>)"
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean f_is_block_357_line_80",
        "snippet": "boolean f_is_block_357_line_80 = p_child_369_line_80.isBlock;\nboolean tag1_expr33_line_80 = !f_is_block_357_line_80;",
        "begin_line": 158,
        "end_line": 159,
        "comment": "    \n     Test if this tag, the prospective parent, can accept the proposed child.\n     @param child potential child tag.\n     @return true if this can contain child.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr36_line_83",
        "snippet": "boolean tag1_expr36_line_83 = tag1_expr37_line_83 && tag1_expr38_line_83;\nint PROBE_END_LINE_83 = 84;",
        "begin_line": 177,
        "end_line": 178,
        "comment": "    \n     Test if this tag, the prospective parent, can accept the proposed child.\n     @param child potential child tag.\n     @return true if this can contain child.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_86",
        "snippet": "int PROBE_START_LINE_86 = 87;\nboolean tag1_expr41_line_86 = this.empty;",
        "begin_line": 182,
        "end_line": 183,
        "comment": "    \n     Test if this tag, the prospective parent, can accept the proposed child.\n     @param child potential child tag.\n     @return true if this can contain child.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_90",
        "snippet": "int PROBE_START_LINE_90 = 91;\nboolean tag1_expr45_line_90 = this.requiresSpecificParent();",
        "begin_line": 193,
        "end_line": 194,
        "comment": "    \n     Test if this tag, the prospective parent, can accept the proposed child.\n     @param child potential child tag.\n     @return true if this can contain child.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr47_line_90",
        "snippet": "boolean tag1_expr47_line_90 = true;\nif (tag1_expr45_line_90) {\norg.jsoup.parser.Tag tag1_expr48_line_90 = this.getImplicitParent();",
        "begin_line": 195,
        "end_line": 197,
        "comment": "    \n     Test if this tag, the prospective parent, can accept the proposed child.\n     @param child potential child tag.\n     @return true if this can contain child.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_94",
        "snippet": "int PROBE_END_LINE_94 = 100;\n// confirm limited children\nif (f_limit_children_370_line_94) {\nfor (Tag childParent : child.ancestors) {\nif (childParent.equals(this))\nreturn true;",
        "begin_line": 209,
        "end_line": 214,
        "comment": "\t\t don't allow children to contain their parent (directly)"
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr51_line_103",
        "snippet": "boolean tag1_expr51_line_103 = f_excludes_364_line_103.isEmpty();\nboolean tag1_expr50_line_103 = !tag1_expr51_line_103;",
        "begin_line": 221,
        "end_line": 222,
        "comment": "\t\t confirm limited children"
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_103",
        "snippet": "int PROBE_END_LINE_103 = 108;\n// exclude children\nif (tag1_expr50_line_103) {\nfor (Tag excluded: excludes) {\nif (child.equals(excluded))\nreturn false;",
        "begin_line": 223,
        "end_line": 228,
        "comment": "\t\t confirm limited children"
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_118",
        "snippet": "int PROBE_END_LINE_118 = 118;\nreturn f_is_block_357_line_118;",
        "begin_line": 242,
        "end_line": 243,
        "comment": "    \n     Gets if this is a block tag.\n     @return if block tag\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_126",
        "snippet": "int PROBE_START_LINE_126 = 126;\nboolean f_can_contain_block_358_line_126 = canContainBlock;",
        "begin_line": 251,
        "end_line": 252,
        "comment": "    \n     Gets if this tag can contain block tags.\n     @return if tag can contain block tags\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_126",
        "snippet": "int PROBE_END_LINE_126 = 126;\nreturn f_can_contain_block_358_line_126;",
        "begin_line": 253,
        "end_line": 254,
        "comment": "    \n     Gets if this tag can contain block tags.\n     @return if tag can contain block tags\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_142",
        "snippet": "int PROBE_START_LINE_142 = 142;\nboolean f_can_contain_inline_359_line_142 = canContainInline;",
        "begin_line": 270,
        "end_line": 271,
        "comment": "    \n     Gets if this tag is a data only tag.\n     @return if this tag is a data only tag\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr54_line_142",
        "snippet": "boolean tag1_expr54_line_142 = !f_can_contain_inline_359_line_142;\nboolean tag1_expr55_line_142 = true;",
        "begin_line": 272,
        "end_line": 273,
        "comment": "    \n     Gets if this tag is a data only tag.\n     @return if this tag is a data only tag\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr56_line_142",
        "snippet": "boolean tag1_expr56_line_142 = isEmpty();\ntag1_expr55_line_142 = !tag1_expr56_line_142;",
        "begin_line": 275,
        "end_line": 276,
        "comment": "    \n     Gets if this tag is a data only tag.\n     @return if this tag is a data only tag\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr53_line_142",
        "snippet": "boolean tag1_expr53_line_142 = tag1_expr54_line_142 && tag1_expr55_line_142;\nint PROBE_END_LINE_142 = 142;",
        "begin_line": 278,
        "end_line": 279,
        "comment": "    \n     Gets if this tag is a data only tag.\n     @return if this tag is a data only tag\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_150",
        "snippet": "int PROBE_START_LINE_150 = 150;\nboolean f_empty_361_line_150 = empty;",
        "begin_line": 288,
        "end_line": 289,
        "comment": "    \n     Get if this is an empty tag\n     @return if this is an emtpy tag\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_150",
        "snippet": "int PROBE_END_LINE_150 = 150;\nreturn f_empty_361_line_150;",
        "begin_line": 290,
        "end_line": 291,
        "comment": "    \n     Get if this is an empty tag\n     @return if this is an emtpy tag\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_158",
        "snippet": "int PROBE_START_LINE_158 = 158;\nboolean f_empty_361_line_158 = empty;",
        "begin_line": 299,
        "end_line": 300,
        "comment": "    \n     * Get if this tag is self closing.\n     * @return if this tag should be output as self closing.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean f_self_closing_362_line_158",
        "snippet": "boolean f_self_closing_362_line_158 = false;\nif (!f_empty_361_line_158) {\nf_self_closing_362_line_158 = selfClosing;",
        "begin_line": 301,
        "end_line": 303,
        "comment": "    \n     * Get if this tag is self closing.\n     * @return if this tag should be output as self closing.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr57_line_158",
        "snippet": "boolean tag1_expr57_line_158 = f_empty_361_line_158 || f_self_closing_362_line_158;\nint PROBE_END_LINE_158 = 158;",
        "begin_line": 305,
        "end_line": 306,
        "comment": "    \n     * Get if this tag is self closing.\n     * @return if this tag should be output as self closing.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_178",
        "snippet": "int PROBE_START_LINE_178 = 178;\nList<org.jsoup.parser.Tag> f_ancestors_371_line_178 = ancestors;",
        "begin_line": 327,
        "end_line": 328,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr62_line_178",
        "snippet": "boolean tag1_expr62_line_178 = f_ancestors_371_line_178.isEmpty();\nboolean tag1_expr61_line_178 = !tag1_expr62_line_178;",
        "begin_line": 329,
        "end_line": 330,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr59_line_178",
        "snippet": "boolean tag1_expr59_line_178 = (tag1_expr61_line_178);\norg.jsoup.parser.Tag tag1_expr60_line_178 = null;",
        "begin_line": 331,
        "end_line": 332,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_178",
        "snippet": "int PROBE_END_LINE_178 = 178;\nreturn tag1_expr58_line_178;",
        "begin_line": 337,
        "end_line": 338,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_182",
        "snippet": "int PROBE_START_LINE_182 = 182;\nboolean f_direct_descendant_372_line_182 = directDescendant;",
        "begin_line": 342,
        "end_line": 343,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_190",
        "snippet": "int PROBE_START_LINE_190 = 191;\norg.jsoup.parser.Tag p_child_374_line_190 = child;",
        "begin_line": 353,
        "end_line": 354,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr64_line_190",
        "snippet": "boolean tag1_expr64_line_190 = f_ancestors_371_line_190.isEmpty();\nint PROBE_END_LINE_190 = 191;",
        "begin_line": 356,
        "end_line": 357,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_194",
        "snippet": "int PROBE_START_LINE_194 = 195;\norg.jsoup.parser.Tag p_child_374_line_194 = child;",
        "begin_line": 362,
        "end_line": 363,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr67_line_194",
        "snippet": "boolean tag1_expr67_line_194 = this.equals(tag1_expr68_line_194);\nint PROBE_END_LINE_194 = 195;",
        "begin_line": 367,
        "end_line": 368,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_210",
        "snippet": "int PROBE_START_LINE_210 = 210;\nObject p_o_377_line_210 = o;",
        "begin_line": 386,
        "end_line": 387,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr71_line_210",
        "snippet": "boolean tag1_expr71_line_210 = this == p_o_377_line_210;\nint PROBE_END_LINE_210 = 210;",
        "begin_line": 388,
        "end_line": 389,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_211",
        "snippet": "int PROBE_START_LINE_211 = 211;\nObject p_o_377_line_211 = o;",
        "begin_line": 391,
        "end_line": 392,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr74_line_211",
        "snippet": "boolean tag1_expr74_line_211 = p_o_377_line_211 == null;\nboolean tag1_expr75_line_211 = false;",
        "begin_line": 393,
        "end_line": 394,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr73_line_211",
        "snippet": "boolean tag1_expr73_line_211 = tag1_expr74_line_211 || tag1_expr75_line_211;\nint PROBE_END_LINE_211 = 211;",
        "begin_line": 400,
        "end_line": 401,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_213",
        "snippet": "int PROBE_START_LINE_213 = 213;\nObject p_o_377_line_213 = o;",
        "begin_line": 404,
        "end_line": 405,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_213",
        "snippet": "int PROBE_END_LINE_213 = 213;\nTag tag = (Tag) p_o_377_line_213;",
        "begin_line": 406,
        "end_line": 407,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_215",
        "snippet": "int PROBE_START_LINE_215 = 215;\nString f_tag_name_355_line_215 = tagName;",
        "begin_line": 409,
        "end_line": 410,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr83_line_215",
        "snippet": "boolean tag1_expr83_line_215 = false;\nif (tag1_expr81_line_215) {\norg.jsoup.parser.Tag v_tag_378_line_215 = tag;",
        "begin_line": 413,
        "end_line": 415,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr80_line_215",
        "snippet": "boolean tag1_expr80_line_215 = tag1_expr81_line_215 ? tag1_expr82_line_215 : tag1_expr83_line_215;\nint PROBE_END_LINE_215 = 215;",
        "begin_line": 421,
        "end_line": 422,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean tag1_expr87_line_222",
        "snippet": "boolean tag1_expr87_line_222 = f_tag_name_355_line_222 != null;\nint tag1_expr88_line_222 = 0;",
        "begin_line": 432,
        "end_line": 433,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int result",
        "snippet": "int result = tag1_expr86_line_222;\nint PROBE_START_LINE_223 = 223;",
        "begin_line": 439,
        "end_line": 440,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "boolean f_is_block_357_line_223",
        "snippet": "boolean f_is_block_357_line_223 = isBlock;\nint tag1_expr93_line_223 = f_is_block_357_line_223 ? 1 : 0;",
        "begin_line": 443,
        "end_line": 444,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr92_line_223",
        "snippet": "int tag1_expr92_line_223 = (tag1_expr93_line_223);\nint tag1_expr90_line_223 = tag1_expr91_line_223 + tag1_expr92_line_223;",
        "begin_line": 445,
        "end_line": 446,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_224",
        "snippet": "int PROBE_START_LINE_224 = 224;\nint v_result_379_line_224 = result;",
        "begin_line": 449,
        "end_line": 450,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr97_line_224",
        "snippet": "int tag1_expr97_line_224 = 31 * v_result_379_line_224;\nboolean f_can_contain_block_358_line_224 = canContainBlock;",
        "begin_line": 451,
        "end_line": 452,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr99_line_224",
        "snippet": "int tag1_expr99_line_224 = f_can_contain_block_358_line_224 ? 1 : 0;\nint tag1_expr98_line_224 = (tag1_expr99_line_224);",
        "begin_line": 453,
        "end_line": 454,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr103_line_225",
        "snippet": "int tag1_expr103_line_225 = 31 * v_result_379_line_225;\nboolean f_can_contain_inline_359_line_225 = canContainInline;",
        "begin_line": 460,
        "end_line": 461,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr105_line_225",
        "snippet": "int tag1_expr105_line_225 = f_can_contain_inline_359_line_225 ? 1 : 0;\nint tag1_expr104_line_225 = (tag1_expr105_line_225);",
        "begin_line": 462,
        "end_line": 463,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr102_line_225",
        "snippet": "int tag1_expr102_line_225 = tag1_expr103_line_225 + tag1_expr104_line_225;\nint PROBE_END_LINE_225 = 225;",
        "begin_line": 464,
        "end_line": 465,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr109_line_226",
        "snippet": "int tag1_expr109_line_226 = 31 * v_result_379_line_226;\nboolean f_optional_closing_360_line_226 = optionalClosing;",
        "begin_line": 469,
        "end_line": 470,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr108_line_226",
        "snippet": "int tag1_expr108_line_226 = tag1_expr109_line_226 + tag1_expr110_line_226;\nint PROBE_END_LINE_226 = 226;",
        "begin_line": 473,
        "end_line": 474,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_227",
        "snippet": "int PROBE_START_LINE_227 = 227;\nint v_result_379_line_227 = result;",
        "begin_line": 476,
        "end_line": 477,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr115_line_227",
        "snippet": "int tag1_expr115_line_227 = 31 * v_result_379_line_227;\nboolean f_empty_361_line_227 = empty;",
        "begin_line": 478,
        "end_line": 479,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int tag1_expr117_line_227",
        "snippet": "int tag1_expr117_line_227 = f_empty_361_line_227 ? 1 : 0;\nint tag1_expr116_line_227 = (tag1_expr117_line_227);",
        "begin_line": 480,
        "end_line": 481,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_228",
        "snippet": "int PROBE_START_LINE_228 = 228;\nint v_result_379_line_228 = result;",
        "begin_line": 485,
        "end_line": 486,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_228",
        "snippet": "int PROBE_END_LINE_228 = 228;\nreturn v_result_379_line_228;",
        "begin_line": 487,
        "end_line": 488,
        "comment": "    \n     Get if this tag should preserve whitespace within child text nodes.\n     @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_243",
        "snippet": "int PROBE_START_LINE_243 = 243;\norg.jsoup.parser.Tag tag1_expr122_line_243 = createBlock(\"HTML\");",
        "begin_line": 502,
        "end_line": 503,
        "comment": "         TODO[must]: incorporate html 5 as appropriate"
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_17",
        "snippet": "int PROBE_START_LINE_17 = 17;\n\nprivate static final org.jsoup.parser.Tag parser1_expr1_line_17 = Tag.valueOf(\"html\");",
        "begin_line": 21,
        "end_line": 23,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_17",
        "snippet": "int PROBE_END_LINE_17 = 17;\n\nprivate static final Tag htmlTag = parser1_expr1_line_17;",
        "begin_line": 25,
        "end_line": 27,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_18",
        "snippet": "int PROBE_START_LINE_18 = 18;\n\nprivate static final org.jsoup.parser.Tag parser1_expr3_line_18 = Tag.valueOf(\"head\");",
        "begin_line": 28,
        "end_line": 30,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_18",
        "snippet": "int PROBE_END_LINE_18 = 18;\n\nprivate static final Tag headTag = parser1_expr3_line_18;",
        "begin_line": 32,
        "end_line": 34,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_19",
        "snippet": "int PROBE_START_LINE_19 = 19;\n\nprivate static final org.jsoup.parser.Tag parser1_expr5_line_19 = Tag.valueOf(\"body\");",
        "begin_line": 35,
        "end_line": 37,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_19",
        "snippet": "int PROBE_END_LINE_19 = 19;\n\nprivate static final Tag bodyTag = parser1_expr5_line_19;",
        "begin_line": 39,
        "end_line": 41,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_20",
        "snippet": "int PROBE_START_LINE_20 = 20;\n\nprivate static final org.jsoup.parser.Tag parser1_expr7_line_20 = Tag.valueOf(\"title\");",
        "begin_line": 42,
        "end_line": 44,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_21",
        "snippet": "int PROBE_END_LINE_21 = 21;\n\nprivate static final Tag textareaTag = parser1_expr9_line_21;",
        "begin_line": 53,
        "end_line": 55,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_37",
        "snippet": "int PROBE_START_LINE_37 = 43;\nboolean p_is_body_fragment_317_line_37 = isBodyFragment;",
        "begin_line": 83,
        "end_line": 84,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_42",
        "snippet": "int PROBE_END_LINE_42 = 42;\nf_stack_318_line_42.add(f_doc_321_line_42);",
        "begin_line": 97,
        "end_line": 98,
        "comment": "\n Parses HTML into a {@link Document}. Generally best to use one of the  more convenient parse methods in {@link org.jsoup.Jsoup}.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "Parser parser",
        "snippet": "Parser parser = new Parser(bodyHtml, baseUri, true);\nparser.relaxed = true;",
        "begin_line": 140,
        "end_line": 141,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_82",
        "snippet": "int PROBE_START_LINE_82 = 96;\norg.jsoup.parser.TokenQueue f_tq_319_line_82 = tq;",
        "begin_line": 146,
        "end_line": 147,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "boolean parser1_expr23_line_82",
        "snippet": "boolean parser1_expr23_line_82 = f_tq_319_line_82.isEmpty();\nboolean parser1_expr22_line_82 = !parser1_expr23_line_82;",
        "begin_line": 148,
        "end_line": 149,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "boolean parser1_expr24_line_83",
        "snippet": "boolean parser1_expr24_line_83 = f_tq_319_line_83.matchesStartTag();\nint PROBE_END_LINE_83 = 95;",
        "begin_line": 154,
        "end_line": 155,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_96",
        "snippet": "int PROBE_END_LINE_96 = 96;\n}\nint PROBE_START_LINE_97 = 97;",
        "begin_line": 173,
        "end_line": 175,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "String data",
        "snippet": "String data = tq.chompTo(\"->\");\n\nif (data.endsWith(\"-\")) // i.e. was -->\ndata = data.substring(0, data.length()-1);",
        "begin_line": 184,
        "end_line": 187,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "Comment comment",
        "snippet": "Comment comment = new Comment(data, baseUri);\nlast().appendChild(comment);",
        "begin_line": 188,
        "end_line": 189,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "String tagName",
        "snippet": "String tagName = tq.consumeTagName();\ntq.chompTo(\">\");",
        "begin_line": 204,
        "end_line": 205,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "boolean parser1_expr36_line_139",
        "snippet": "boolean parser1_expr36_line_139 = f_tq_319_line_139.matchesAny(\"<\", \"/>\", \">\");\nboolean parser1_expr35_line_139 = !parser1_expr36_line_139;",
        "begin_line": 236,
        "end_line": 237,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "boolean parser1_expr40_line_139",
        "snippet": "boolean parser1_expr40_line_139 = true;\nif (parser1_expr35_line_139) {\nboolean parser1_expr41_line_139 = tq.isEmpty();",
        "begin_line": 238,
        "end_line": 240,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "boolean parser1_expr34_line_139",
        "snippet": "boolean parser1_expr34_line_139 = parser1_expr35_line_139 && parser1_expr40_line_139;\nint PROBE_END_LINE_139 = 143;",
        "begin_line": 243,
        "end_line": 244,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_140",
        "snippet": "int PROBE_START_LINE_140 = 140;\nAttribute parser1_expr42_line_140 = parseAttribute();",
        "begin_line": 246,
        "end_line": 247,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_140",
        "snippet": "int PROBE_END_LINE_140 = 140;\nAttribute attribute = parser1_expr42_line_140;",
        "begin_line": 248,
        "end_line": 249,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_141",
        "snippet": "int PROBE_START_LINE_141 = 142;\norg.jsoup.nodes.Attribute v_attribute_331_line_141 = attribute;",
        "begin_line": 250,
        "end_line": 251,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "boolean parser1_expr43_line_141",
        "snippet": "boolean parser1_expr43_line_141 = v_attribute_331_line_141 != null;\nint PROBE_END_LINE_141 = 142;",
        "begin_line": 252,
        "end_line": 253,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_142",
        "snippet": "int PROBE_END_LINE_142 = 142;\nv_attributes_330_line_142.put(v_attribute_331_line_142);",
        "begin_line": 258,
        "end_line": 259,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_143",
        "snippet": "int PROBE_START_LINE_143 = 143;\nf_tq_319_line_139 = tq;",
        "begin_line": 261,
        "end_line": 262,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "boolean parser1_expr41_line_139",
        "snippet": "boolean parser1_expr41_line_139 = tq.isEmpty();\nparser1_expr40_line_139 = !parser1_expr41_line_139;",
        "begin_line": 267,
        "end_line": 268,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_143",
        "snippet": "int PROBE_END_LINE_143 = 143;\n}\n\nint PROBE_START_LINE_145 = 145;",
        "begin_line": 271,
        "end_line": 274,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "String v_tag_name_329_line_145",
        "snippet": "String v_tag_name_329_line_145 = tagName;\nTag parser1_expr45_line_145 = Tag.valueOf(v_tag_name_329_line_145);",
        "begin_line": 275,
        "end_line": 276,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_START_LINE_146",
        "snippet": "int PROBE_START_LINE_146 = 146;\norg.jsoup.parser.Tag v_tag_332_line_146 = tag;",
        "begin_line": 279,
        "end_line": 280,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_146",
        "snippet": "int PROBE_END_LINE_146 = 146;\nElement child = new Element(v_tag_332_line_146, f_base_uri_320_line_146, v_attributes_330_line_146);",
        "begin_line": 283,
        "end_line": 284,
        "comment": "    \n     Parse a fragment of HTML into the {@code body} of a Document, with relaxed parsing enabled. Relaxed, in this\n     context, means that implicit tags are not automatically created when missing.\n     @param bodyHtml fragment of HTML\n     @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     @return Document, with empty head, and HTML parsed into body\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_31",
        "snippet": "int PROBE_START_LINE_31 = 31;\nString p_base_uri_260_line_31 = baseUri;",
        "begin_line": 31,
        "end_line": 32,
        "comment": "    \n     Create a new Node.\n     @param baseUri base URI\n     @param attributes attributes (not null, but may be empty)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_31",
        "snippet": "int PROBE_END_LINE_31 = 31;\nValidate.notNull(p_base_uri_260_line_31);",
        "begin_line": 33,
        "end_line": 34,
        "comment": "    \n     Create a new Node.\n     @param baseUri base URI\n     @param attributes attributes (not null, but may be empty)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_32",
        "snippet": "int PROBE_START_LINE_32 = 32;\norg.jsoup.nodes.Attributes p_attributes_261_line_32 = attributes;",
        "begin_line": 35,
        "end_line": 36,
        "comment": "    \n     Create a new Node.\n     @param baseUri base URI\n     @param attributes attributes (not null, but may be empty)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_32",
        "snippet": "int PROBE_END_LINE_32 = 32;\nValidate.notNull(p_attributes_261_line_32);",
        "begin_line": 37,
        "end_line": 38,
        "comment": "    \n     Create a new Node.\n     @param baseUri base URI\n     @param attributes attributes (not null, but may be empty)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "URL abs",
        "snippet": "URL abs = new URL(base, relUrl);\nreturn abs.toExternalForm();",
        "begin_line": 185,
        "end_line": 186,
        "comment": "                     the base is unsuitable, but the attribute may be abs on its own, so try that"
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_195",
        "snippet": "int PROBE_END_LINE_195 = 195;\nreturn node1_expr9_line_195;",
        "begin_line": 216,
        "end_line": 217,
        "comment": "    \n     Get this node's children. Presented as an unmodifiable list: new children can not be added, but the child nodes\n     themselves can be manipulated.\n     @return list of children. If no children, returns an empty list.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_217",
        "snippet": "int PROBE_START_LINE_217 = 220;\norg.jsoup.nodes.Node f_parent_node_115_line_217 = parentNode;",
        "begin_line": 243,
        "end_line": 244,
        "comment": "    \n     * Gets the Document associated with this Node. \n     * @return the Document associated with this Node, or null if there is no such Document.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "boolean node1_expr13_line_217",
        "snippet": "boolean node1_expr13_line_217 = f_parent_node_115_line_217 == null;\nint PROBE_END_LINE_217 = 220;",
        "begin_line": 245,
        "end_line": 246,
        "comment": "    \n     * Gets the Document associated with this Node. \n     * @return the Document associated with this Node, or null if there is no such Document.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_227",
        "snippet": "int PROBE_END_LINE_227 = 227;\nValidate.notNull(f_parent_node_115_line_227);",
        "begin_line": 260,
        "end_line": 261,
        "comment": "    \n     * Remove (delete) this node from the DOM tree. If this node has children, they are also removed.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_228",
        "snippet": "int PROBE_START_LINE_228 = 228;\norg.jsoup.nodes.Node f_parent_node_115_line_228 = parentNode;",
        "begin_line": 262,
        "end_line": 263,
        "comment": "    \n     * Remove (delete) this node from the DOM tree. If this node has children, they are also removed.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_228",
        "snippet": "int PROBE_END_LINE_228 = 228;\nf_parent_node_115_line_228.removeChild(this);",
        "begin_line": 264,
        "end_line": 265,
        "comment": "    \n     * Remove (delete) this node from the DOM tree. If this node has children, they are also removed.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_244",
        "snippet": "int PROBE_END_LINE_244 = 244;\nthis.parentNode = p_parent_node_273_line_244;",
        "begin_line": 287,
        "end_line": 288,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "Integer index",
        "snippet": "Integer index = out.siblingIndex();\nchildNodes.set(index, in);",
        "begin_line": 297,
        "end_line": 298,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_262",
        "snippet": "int PROBE_START_LINE_262 = 262;\norg.jsoup.nodes.Node p_out_276_line_262 = out;",
        "begin_line": 311,
        "end_line": 312,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int node1_expr23_line_262",
        "snippet": "int node1_expr23_line_262 = p_out_276_line_262.siblingIndex();\nint PROBE_END_LINE_262 = 262;",
        "begin_line": 313,
        "end_line": 314,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int index",
        "snippet": "int index = node1_expr23_line_262;\nint PROBE_START_LINE_263 = 263;",
        "begin_line": 315,
        "end_line": 316,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int v_index_277_line_263",
        "snippet": "int v_index_277_line_263 = index;\nint PROBE_END_LINE_263 = 263;",
        "begin_line": 318,
        "end_line": 319,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_273",
        "snippet": "int PROBE_END_LINE_273 = 273;\nv_child_279_line_273.setSiblingIndex(node1_expr29_line_273);",
        "begin_line": 345,
        "end_line": 346,
        "comment": "\t\tmost used. short circuit addChildren(int), which hits reindex children and array copy"
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "boolean node1_expr31_line_288",
        "snippet": "boolean node1_expr31_line_288 = f_parent_node_115_line_288 != null;\nint PROBE_END_LINE_288 = 289;",
        "begin_line": 364,
        "end_line": 365,
        "comment": "\t\tmost used. short circuit addChildren(int), which hits reindex children and array copy"
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_312",
        "snippet": "int PROBE_START_LINE_312 = 313;\norg.jsoup.nodes.Node f_parent_node_115_line_312 = parentNode;",
        "begin_line": 393,
        "end_line": 394,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "boolean node1_expr36_line_312",
        "snippet": "boolean node1_expr36_line_312 = f_parent_node_115_line_312 == null;\nint PROBE_END_LINE_312 = 313;",
        "begin_line": 395,
        "end_line": 396,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "List<Node> f_child_nodes_85_line_315",
        "snippet": "List<Node> f_child_nodes_85_line_315 = f_parent_node_115_line_315.childNodes;\nint PROBE_END_LINE_315 = 315;",
        "begin_line": 402,
        "end_line": 403,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "List<Node> siblings",
        "snippet": "List<Node> siblings = f_child_nodes_85_line_315;\nint PROBE_START_LINE_316 = 316;",
        "begin_line": 404,
        "end_line": 405,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "Integer node1_expr37_line_316",
        "snippet": "Integer node1_expr37_line_316 = siblingIndex();\nint PROBE_END_LINE_316 = 316;",
        "begin_line": 406,
        "end_line": 407,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "Integer index",
        "snippet": "Integer index = node1_expr37_line_316;\nint PROBE_START_LINE_317 = 317;",
        "begin_line": 408,
        "end_line": 409,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "Integer v_index_285_line_317",
        "snippet": "Integer v_index_285_line_317 = index;\nint PROBE_END_LINE_317 = 317;",
        "begin_line": 410,
        "end_line": 411,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_318",
        "snippet": "int PROBE_START_LINE_318 = 321;\nList<org.jsoup.nodes.Node> v_siblings_284_line_318 = siblings;",
        "begin_line": 413,
        "end_line": 414,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Node.java",
        "signature": "int node1_expr40_line_318",
        "snippet": "int node1_expr40_line_318 = v_siblings_284_line_318.size();\nInteger v_index_285_line_318 = index;",
        "begin_line": 415,
        "end_line": 416,
        "comment": "    \n     Get this node's next sibling.\n     @return next sibling, or null if this is the last sibling\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "int PROBE_START_LINE_22",
        "snippet": "int PROBE_START_LINE_22 = 22;\nString p_key_47_line_22 = key;",
        "begin_line": 22,
        "end_line": 23,
        "comment": "    \n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key\n     * @param value attribute value\n     * @see #createFromEncoded\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "int PROBE_END_LINE_22",
        "snippet": "int PROBE_END_LINE_22 = 22;\nValidate.notEmpty(p_key_47_line_22);",
        "begin_line": 24,
        "end_line": 25,
        "comment": "    \n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key\n     * @param value attribute value\n     * @see #createFromEncoded\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "int PROBE_START_LINE_23",
        "snippet": "int PROBE_START_LINE_23 = 23;\nString p_value_48_line_23 = value;",
        "begin_line": 26,
        "end_line": 27,
        "comment": "    \n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key\n     * @param value attribute value\n     * @see #createFromEncoded\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "String attribute1_expr5_line_24",
        "snippet": "String attribute1_expr5_line_24 = p_key_47_line_24.trim();\nString attribute1_expr4_line_24 = attribute1_expr5_line_24.toLowerCase();",
        "begin_line": 32,
        "end_line": 33,
        "comment": "    \n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key\n     * @param value attribute value\n     * @see #createFromEncoded\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "StringBuilder attribute1_expr9_line_73",
        "snippet": "StringBuilder attribute1_expr9_line_73 = attribute1_expr11_line_73.append(Entities.escape(value, out));\nint PROBE_END_LINE_73 = 77;",
        "begin_line": 94,
        "end_line": 95,
        "comment": "    \n     Get the HTML representation of this attribute; e.g. {@code href=\"index.html\"}.\n     @return HTML\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "String attribute1_expr14_line_95",
        "snippet": "String attribute1_expr14_line_95 = Entities.unescape(p_encoded_value_56_line_95);\nint PROBE_END_LINE_95 = 95;",
        "begin_line": 117,
        "end_line": 118,
        "comment": "    \n     * Create a new Attribute from an unencoded key and a HMTL attribute encoded value.\n     * @param unencodedKey assumes the key is not encoded, as can be only run of simple \\w chars.\n     * @param encodedValue HTML attribute encoded value\n     * @return attribute\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "String value",
        "snippet": "String value = attribute1_expr14_line_95;\nint PROBE_START_LINE_96 = 96;",
        "begin_line": 119,
        "end_line": 120,
        "comment": "    \n     * Create a new Attribute from an unencoded key and a HMTL attribute encoded value.\n     * @param unencodedKey assumes the key is not encoded, as can be only run of simple \\w chars.\n     * @param encodedValue HTML attribute encoded value\n     * @return attribute\n     "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "int PROBE_START_LINE_65",
        "snippet": "int PROBE_START_LINE_65 = 65;\nString p_query_485_line_65 = query;",
        "begin_line": 65,
        "end_line": 66,
        "comment": "\n CSS-like element selector, that finds elements matching a query.\n\n <h2>Selector syntax</h2>\n A selector is a chain of simple selectors, seperated by combinators. Selectors are case insensitive (including against\n elements, attributes, and attribute values).\n <p/>\n The universal selector (*) is implicit when no element selector is supplied (i.e. {@code *.header} and {@code .header}\n is equivalent).\n\n <table>\n  <tr><th>Pattern</th><th>Matches</th><th>Example</th></tr>\n  <tr><td><code>*</code></td><td>any element</td><td><code>*</code></td></tr>\n  <tr><td><code>tag</code></td><td>elements with the given tag name</td><td><code>div</code></td></tr>\n  <tr><td><code>ns|E</code></td><td>elements of type E in the namespace <i>ns</i></td><td><code>fb|name</code> finds <code>&lt;fb:name></code> elements</td></tr>\n  <tr><td><code>#id</code></td><td>elements with attribute ID of \"id\"</td><td><code>div#wrap</code>, <code>#logo</code></td></tr>\n  <tr><td><code>.class</code></td><td>elements with a class name of \"class\"</td><td><code>div.left</code>, <code>.result</code></td></tr>\n  <tr><td><code>[attr]</code></td><td>elements with an attribute named \"attr\" (with any value)</td><td><code>a[href]</code>, <code>[title]</code></td></tr>\n  <tr><td><code>[^attrPrefix]</code></td><td>elements with an attribute name starting with \"attrPrefix\". Use to find elements with HTML5 datasets</td><td><code>[^data-]</code>, <code>div[^data-]</code></td></tr>\n  <tr><td><code>[attr=val]</code></td><td>elements with an attribute named \"attr\", and value equal to \"val\"</td><td><code>img[width=500]</code>, <code>a[rel=nofollow]</code></td></tr>\n  <tr><td><code>[attr^=valPrefix]</code></td><td>elements with an attribute named \"attr\", and value starting with \"valPrefix\"</td><td><code>a[href^=http:]</code></code></td></tr>\n  <tr><td><code>[attr$=valSuffix]</code></td><td>elements with an attribute named \"attr\", and value ending with \"valSuffix\"</td><td><code>img[src$=.png]</code></td></tr>\n  <tr><td><code>[attr*=valContaining]</code></td><td>elements with an attribute named \"attr\", and value containing \"valContaining\"</td><td><code>a[href*=/search/]</code></td></tr>\n  <tr><td><code>[attr~=<em>regex</em>]</code></td><td>elements with an attribute named \"attr\", and value matching the regular expression</td><td><code>img[src~=(?i)\\\\.(png|jpe?g)]</code></td></tr>\n  <tr><td></td><td>The above may be combined in any order</td><td><code>div.header[title]</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Combinators</h3></td></tr>\n  <tr><td><code>E F</code></td><td>an F element descended from an E element</td><td><code>div a</code>, <code>.logo h1</code></td></tr>\n  <tr><td><code>E > F</code></td><td>an F direct child of E</td><td><code>ol > li</code></td></tr>\n  <tr><td><code>E + F</code></td><td>an F element immediately preceded by sibling E</td><td><code>li + li</code>, <code>div.head + div</code></td></tr>\n  <tr><td><code>E ~ F</code></td><td>an F element preceded by sibling E</td><td><code>h1 ~ p</code></td></tr>\n  <tr><td><code>E, F, G</code></td><td>all matching elements E, F, or G</td><td><code>a[href], div, h3</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Pseudo selectors</h3></td></tr>\n  <tr><td><code>:lt(<em>n</em>)</code></td><td>elements whose sibling index is less than <em>n</em></td><td><code>td:lt(3)</code> finds the first 2 cells of each row</td></tr>\n  <tr><td><code>:gt(<em>n</em>)</code></td><td>elements whose sibling index is greater than <em>n</em></td><td><code>td:gt(1)</code> finds cells after skipping the first two</td></tr>\n  <tr><td><code>:eq(<em>n</em>)</code></td><td>elements whose sibling index is equal to <em>n</em></td><td><code>td:eq(0)</code> finds the first cell of each row</td></tr>\n  <tr><td><code>:has(<em>selector</em>)</code></td><td>elements that contains at least one element matching the <em>selector</em></td><td><code>div:has(p)</code> finds divs that contain p elements </td></tr>\n  <tr><td><code>:contains(<em>text</em>)</code></td><td>elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants.</td><td><code>p:contains(jsoup)</code> finds p elements containing the text \"jsoup\".</td></tr>\n  <tr><td><code>:matches(<em>regex</em>)</code></td><td>elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants.</td><td><code>td:matches(\\\\d+)</code> finds table cells containing digits. <code>div:matches((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td><code>:containsOwn(<em>text</em>)</code></td><td>elements that directly contains the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants.</td><td><code>p:containsOwn(jsoup)</code> finds p elements with own text \"jsoup\".</td></tr>\n  <tr><td><code>:matchesOwn(<em>regex</em>)</code></td><td>elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants.</td><td><code>td:matchesOwn(\\\\d+)</code> finds table cells directly containing digits. <code>div:matchesOwn((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td></td><td>The above may be combined in any order and with other selectors</td><td><code>.light:contains(name):eq(0)</code></td></tr>\n  </table>\n\n @see Element#select(String)\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "int PROBE_END_LINE_65",
        "snippet": "int PROBE_END_LINE_65 = 65;\nValidate.notNull(p_query_485_line_65);",
        "begin_line": 67,
        "end_line": 68,
        "comment": "\n CSS-like element selector, that finds elements matching a query.\n\n <h2>Selector syntax</h2>\n A selector is a chain of simple selectors, seperated by combinators. Selectors are case insensitive (including against\n elements, attributes, and attribute values).\n <p/>\n The universal selector (*) is implicit when no element selector is supplied (i.e. {@code *.header} and {@code .header}\n is equivalent).\n\n <table>\n  <tr><th>Pattern</th><th>Matches</th><th>Example</th></tr>\n  <tr><td><code>*</code></td><td>any element</td><td><code>*</code></td></tr>\n  <tr><td><code>tag</code></td><td>elements with the given tag name</td><td><code>div</code></td></tr>\n  <tr><td><code>ns|E</code></td><td>elements of type E in the namespace <i>ns</i></td><td><code>fb|name</code> finds <code>&lt;fb:name></code> elements</td></tr>\n  <tr><td><code>#id</code></td><td>elements with attribute ID of \"id\"</td><td><code>div#wrap</code>, <code>#logo</code></td></tr>\n  <tr><td><code>.class</code></td><td>elements with a class name of \"class\"</td><td><code>div.left</code>, <code>.result</code></td></tr>\n  <tr><td><code>[attr]</code></td><td>elements with an attribute named \"attr\" (with any value)</td><td><code>a[href]</code>, <code>[title]</code></td></tr>\n  <tr><td><code>[^attrPrefix]</code></td><td>elements with an attribute name starting with \"attrPrefix\". Use to find elements with HTML5 datasets</td><td><code>[^data-]</code>, <code>div[^data-]</code></td></tr>\n  <tr><td><code>[attr=val]</code></td><td>elements with an attribute named \"attr\", and value equal to \"val\"</td><td><code>img[width=500]</code>, <code>a[rel=nofollow]</code></td></tr>\n  <tr><td><code>[attr^=valPrefix]</code></td><td>elements with an attribute named \"attr\", and value starting with \"valPrefix\"</td><td><code>a[href^=http:]</code></code></td></tr>\n  <tr><td><code>[attr$=valSuffix]</code></td><td>elements with an attribute named \"attr\", and value ending with \"valSuffix\"</td><td><code>img[src$=.png]</code></td></tr>\n  <tr><td><code>[attr*=valContaining]</code></td><td>elements with an attribute named \"attr\", and value containing \"valContaining\"</td><td><code>a[href*=/search/]</code></td></tr>\n  <tr><td><code>[attr~=<em>regex</em>]</code></td><td>elements with an attribute named \"attr\", and value matching the regular expression</td><td><code>img[src~=(?i)\\\\.(png|jpe?g)]</code></td></tr>\n  <tr><td></td><td>The above may be combined in any order</td><td><code>div.header[title]</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Combinators</h3></td></tr>\n  <tr><td><code>E F</code></td><td>an F element descended from an E element</td><td><code>div a</code>, <code>.logo h1</code></td></tr>\n  <tr><td><code>E > F</code></td><td>an F direct child of E</td><td><code>ol > li</code></td></tr>\n  <tr><td><code>E + F</code></td><td>an F element immediately preceded by sibling E</td><td><code>li + li</code>, <code>div.head + div</code></td></tr>\n  <tr><td><code>E ~ F</code></td><td>an F element preceded by sibling E</td><td><code>h1 ~ p</code></td></tr>\n  <tr><td><code>E, F, G</code></td><td>all matching elements E, F, or G</td><td><code>a[href], div, h3</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Pseudo selectors</h3></td></tr>\n  <tr><td><code>:lt(<em>n</em>)</code></td><td>elements whose sibling index is less than <em>n</em></td><td><code>td:lt(3)</code> finds the first 2 cells of each row</td></tr>\n  <tr><td><code>:gt(<em>n</em>)</code></td><td>elements whose sibling index is greater than <em>n</em></td><td><code>td:gt(1)</code> finds cells after skipping the first two</td></tr>\n  <tr><td><code>:eq(<em>n</em>)</code></td><td>elements whose sibling index is equal to <em>n</em></td><td><code>td:eq(0)</code> finds the first cell of each row</td></tr>\n  <tr><td><code>:has(<em>selector</em>)</code></td><td>elements that contains at least one element matching the <em>selector</em></td><td><code>div:has(p)</code> finds divs that contain p elements </td></tr>\n  <tr><td><code>:contains(<em>text</em>)</code></td><td>elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants.</td><td><code>p:contains(jsoup)</code> finds p elements containing the text \"jsoup\".</td></tr>\n  <tr><td><code>:matches(<em>regex</em>)</code></td><td>elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants.</td><td><code>td:matches(\\\\d+)</code> finds table cells containing digits. <code>div:matches((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td><code>:containsOwn(<em>text</em>)</code></td><td>elements that directly contains the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants.</td><td><code>p:containsOwn(jsoup)</code> finds p elements with own text \"jsoup\".</td></tr>\n  <tr><td><code>:matchesOwn(<em>regex</em>)</code></td><td>elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants.</td><td><code>td:matchesOwn(\\\\d+)</code> finds table cells directly containing digits. <code>div:matchesOwn((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td></td><td>The above may be combined in any order and with other selectors</td><td><code>.light:contains(name):eq(0)</code></td></tr>\n  </table>\n\n @see Element#select(String)\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "int PROBE_START_LINE_66",
        "snippet": "int PROBE_START_LINE_66 = 66;\nString p_query_485_line_66 = query;",
        "begin_line": 69,
        "end_line": 70,
        "comment": "\n CSS-like element selector, that finds elements matching a query.\n\n <h2>Selector syntax</h2>\n A selector is a chain of simple selectors, seperated by combinators. Selectors are case insensitive (including against\n elements, attributes, and attribute values).\n <p/>\n The universal selector (*) is implicit when no element selector is supplied (i.e. {@code *.header} and {@code .header}\n is equivalent).\n\n <table>\n  <tr><th>Pattern</th><th>Matches</th><th>Example</th></tr>\n  <tr><td><code>*</code></td><td>any element</td><td><code>*</code></td></tr>\n  <tr><td><code>tag</code></td><td>elements with the given tag name</td><td><code>div</code></td></tr>\n  <tr><td><code>ns|E</code></td><td>elements of type E in the namespace <i>ns</i></td><td><code>fb|name</code> finds <code>&lt;fb:name></code> elements</td></tr>\n  <tr><td><code>#id</code></td><td>elements with attribute ID of \"id\"</td><td><code>div#wrap</code>, <code>#logo</code></td></tr>\n  <tr><td><code>.class</code></td><td>elements with a class name of \"class\"</td><td><code>div.left</code>, <code>.result</code></td></tr>\n  <tr><td><code>[attr]</code></td><td>elements with an attribute named \"attr\" (with any value)</td><td><code>a[href]</code>, <code>[title]</code></td></tr>\n  <tr><td><code>[^attrPrefix]</code></td><td>elements with an attribute name starting with \"attrPrefix\". Use to find elements with HTML5 datasets</td><td><code>[^data-]</code>, <code>div[^data-]</code></td></tr>\n  <tr><td><code>[attr=val]</code></td><td>elements with an attribute named \"attr\", and value equal to \"val\"</td><td><code>img[width=500]</code>, <code>a[rel=nofollow]</code></td></tr>\n  <tr><td><code>[attr^=valPrefix]</code></td><td>elements with an attribute named \"attr\", and value starting with \"valPrefix\"</td><td><code>a[href^=http:]</code></code></td></tr>\n  <tr><td><code>[attr$=valSuffix]</code></td><td>elements with an attribute named \"attr\", and value ending with \"valSuffix\"</td><td><code>img[src$=.png]</code></td></tr>\n  <tr><td><code>[attr*=valContaining]</code></td><td>elements with an attribute named \"attr\", and value containing \"valContaining\"</td><td><code>a[href*=/search/]</code></td></tr>\n  <tr><td><code>[attr~=<em>regex</em>]</code></td><td>elements with an attribute named \"attr\", and value matching the regular expression</td><td><code>img[src~=(?i)\\\\.(png|jpe?g)]</code></td></tr>\n  <tr><td></td><td>The above may be combined in any order</td><td><code>div.header[title]</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Combinators</h3></td></tr>\n  <tr><td><code>E F</code></td><td>an F element descended from an E element</td><td><code>div a</code>, <code>.logo h1</code></td></tr>\n  <tr><td><code>E > F</code></td><td>an F direct child of E</td><td><code>ol > li</code></td></tr>\n  <tr><td><code>E + F</code></td><td>an F element immediately preceded by sibling E</td><td><code>li + li</code>, <code>div.head + div</code></td></tr>\n  <tr><td><code>E ~ F</code></td><td>an F element preceded by sibling E</td><td><code>h1 ~ p</code></td></tr>\n  <tr><td><code>E, F, G</code></td><td>all matching elements E, F, or G</td><td><code>a[href], div, h3</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Pseudo selectors</h3></td></tr>\n  <tr><td><code>:lt(<em>n</em>)</code></td><td>elements whose sibling index is less than <em>n</em></td><td><code>td:lt(3)</code> finds the first 2 cells of each row</td></tr>\n  <tr><td><code>:gt(<em>n</em>)</code></td><td>elements whose sibling index is greater than <em>n</em></td><td><code>td:gt(1)</code> finds cells after skipping the first two</td></tr>\n  <tr><td><code>:eq(<em>n</em>)</code></td><td>elements whose sibling index is equal to <em>n</em></td><td><code>td:eq(0)</code> finds the first cell of each row</td></tr>\n  <tr><td><code>:has(<em>selector</em>)</code></td><td>elements that contains at least one element matching the <em>selector</em></td><td><code>div:has(p)</code> finds divs that contain p elements </td></tr>\n  <tr><td><code>:contains(<em>text</em>)</code></td><td>elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants.</td><td><code>p:contains(jsoup)</code> finds p elements containing the text \"jsoup\".</td></tr>\n  <tr><td><code>:matches(<em>regex</em>)</code></td><td>elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants.</td><td><code>td:matches(\\\\d+)</code> finds table cells containing digits. <code>div:matches((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td><code>:containsOwn(<em>text</em>)</code></td><td>elements that directly contains the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants.</td><td><code>p:containsOwn(jsoup)</code> finds p elements with own text \"jsoup\".</td></tr>\n  <tr><td><code>:matchesOwn(<em>regex</em>)</code></td><td>elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants.</td><td><code>td:matchesOwn(\\\\d+)</code> finds table cells directly containing digits. <code>div:matchesOwn((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td></td><td>The above may be combined in any order and with other selectors</td><td><code>.light:contains(name):eq(0)</code></td></tr>\n  </table>\n\n @see Element#select(String)\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "String selector1_expr3_line_66",
        "snippet": "String selector1_expr3_line_66 = p_query_485_line_66.trim();\nint PROBE_END_LINE_66 = 66;",
        "begin_line": 71,
        "end_line": 72,
        "comment": "\n CSS-like element selector, that finds elements matching a query.\n\n <h2>Selector syntax</h2>\n A selector is a chain of simple selectors, seperated by combinators. Selectors are case insensitive (including against\n elements, attributes, and attribute values).\n <p/>\n The universal selector (*) is implicit when no element selector is supplied (i.e. {@code *.header} and {@code .header}\n is equivalent).\n\n <table>\n  <tr><th>Pattern</th><th>Matches</th><th>Example</th></tr>\n  <tr><td><code>*</code></td><td>any element</td><td><code>*</code></td></tr>\n  <tr><td><code>tag</code></td><td>elements with the given tag name</td><td><code>div</code></td></tr>\n  <tr><td><code>ns|E</code></td><td>elements of type E in the namespace <i>ns</i></td><td><code>fb|name</code> finds <code>&lt;fb:name></code> elements</td></tr>\n  <tr><td><code>#id</code></td><td>elements with attribute ID of \"id\"</td><td><code>div#wrap</code>, <code>#logo</code></td></tr>\n  <tr><td><code>.class</code></td><td>elements with a class name of \"class\"</td><td><code>div.left</code>, <code>.result</code></td></tr>\n  <tr><td><code>[attr]</code></td><td>elements with an attribute named \"attr\" (with any value)</td><td><code>a[href]</code>, <code>[title]</code></td></tr>\n  <tr><td><code>[^attrPrefix]</code></td><td>elements with an attribute name starting with \"attrPrefix\". Use to find elements with HTML5 datasets</td><td><code>[^data-]</code>, <code>div[^data-]</code></td></tr>\n  <tr><td><code>[attr=val]</code></td><td>elements with an attribute named \"attr\", and value equal to \"val\"</td><td><code>img[width=500]</code>, <code>a[rel=nofollow]</code></td></tr>\n  <tr><td><code>[attr^=valPrefix]</code></td><td>elements with an attribute named \"attr\", and value starting with \"valPrefix\"</td><td><code>a[href^=http:]</code></code></td></tr>\n  <tr><td><code>[attr$=valSuffix]</code></td><td>elements with an attribute named \"attr\", and value ending with \"valSuffix\"</td><td><code>img[src$=.png]</code></td></tr>\n  <tr><td><code>[attr*=valContaining]</code></td><td>elements with an attribute named \"attr\", and value containing \"valContaining\"</td><td><code>a[href*=/search/]</code></td></tr>\n  <tr><td><code>[attr~=<em>regex</em>]</code></td><td>elements with an attribute named \"attr\", and value matching the regular expression</td><td><code>img[src~=(?i)\\\\.(png|jpe?g)]</code></td></tr>\n  <tr><td></td><td>The above may be combined in any order</td><td><code>div.header[title]</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Combinators</h3></td></tr>\n  <tr><td><code>E F</code></td><td>an F element descended from an E element</td><td><code>div a</code>, <code>.logo h1</code></td></tr>\n  <tr><td><code>E > F</code></td><td>an F direct child of E</td><td><code>ol > li</code></td></tr>\n  <tr><td><code>E + F</code></td><td>an F element immediately preceded by sibling E</td><td><code>li + li</code>, <code>div.head + div</code></td></tr>\n  <tr><td><code>E ~ F</code></td><td>an F element preceded by sibling E</td><td><code>h1 ~ p</code></td></tr>\n  <tr><td><code>E, F, G</code></td><td>all matching elements E, F, or G</td><td><code>a[href], div, h3</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Pseudo selectors</h3></td></tr>\n  <tr><td><code>:lt(<em>n</em>)</code></td><td>elements whose sibling index is less than <em>n</em></td><td><code>td:lt(3)</code> finds the first 2 cells of each row</td></tr>\n  <tr><td><code>:gt(<em>n</em>)</code></td><td>elements whose sibling index is greater than <em>n</em></td><td><code>td:gt(1)</code> finds cells after skipping the first two</td></tr>\n  <tr><td><code>:eq(<em>n</em>)</code></td><td>elements whose sibling index is equal to <em>n</em></td><td><code>td:eq(0)</code> finds the first cell of each row</td></tr>\n  <tr><td><code>:has(<em>selector</em>)</code></td><td>elements that contains at least one element matching the <em>selector</em></td><td><code>div:has(p)</code> finds divs that contain p elements </td></tr>\n  <tr><td><code>:contains(<em>text</em>)</code></td><td>elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants.</td><td><code>p:contains(jsoup)</code> finds p elements containing the text \"jsoup\".</td></tr>\n  <tr><td><code>:matches(<em>regex</em>)</code></td><td>elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants.</td><td><code>td:matches(\\\\d+)</code> finds table cells containing digits. <code>div:matches((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td><code>:containsOwn(<em>text</em>)</code></td><td>elements that directly contains the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants.</td><td><code>p:containsOwn(jsoup)</code> finds p elements with own text \"jsoup\".</td></tr>\n  <tr><td><code>:matchesOwn(<em>regex</em>)</code></td><td>elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants.</td><td><code>td:matchesOwn(\\\\d+)</code> finds table cells directly containing digits. <code>div:matchesOwn((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td></td><td>The above may be combined in any order and with other selectors</td><td><code>.light:contains(name):eq(0)</code></td></tr>\n  </table>\n\n @see Element#select(String)\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "int PROBE_START_LINE_67",
        "snippet": "int PROBE_START_LINE_67 = 67;\nString p_query_485_line_67 = query;",
        "begin_line": 74,
        "end_line": 75,
        "comment": "\n CSS-like element selector, that finds elements matching a query.\n\n <h2>Selector syntax</h2>\n A selector is a chain of simple selectors, seperated by combinators. Selectors are case insensitive (including against\n elements, attributes, and attribute values).\n <p/>\n The universal selector (*) is implicit when no element selector is supplied (i.e. {@code *.header} and {@code .header}\n is equivalent).\n\n <table>\n  <tr><th>Pattern</th><th>Matches</th><th>Example</th></tr>\n  <tr><td><code>*</code></td><td>any element</td><td><code>*</code></td></tr>\n  <tr><td><code>tag</code></td><td>elements with the given tag name</td><td><code>div</code></td></tr>\n  <tr><td><code>ns|E</code></td><td>elements of type E in the namespace <i>ns</i></td><td><code>fb|name</code> finds <code>&lt;fb:name></code> elements</td></tr>\n  <tr><td><code>#id</code></td><td>elements with attribute ID of \"id\"</td><td><code>div#wrap</code>, <code>#logo</code></td></tr>\n  <tr><td><code>.class</code></td><td>elements with a class name of \"class\"</td><td><code>div.left</code>, <code>.result</code></td></tr>\n  <tr><td><code>[attr]</code></td><td>elements with an attribute named \"attr\" (with any value)</td><td><code>a[href]</code>, <code>[title]</code></td></tr>\n  <tr><td><code>[^attrPrefix]</code></td><td>elements with an attribute name starting with \"attrPrefix\". Use to find elements with HTML5 datasets</td><td><code>[^data-]</code>, <code>div[^data-]</code></td></tr>\n  <tr><td><code>[attr=val]</code></td><td>elements with an attribute named \"attr\", and value equal to \"val\"</td><td><code>img[width=500]</code>, <code>a[rel=nofollow]</code></td></tr>\n  <tr><td><code>[attr^=valPrefix]</code></td><td>elements with an attribute named \"attr\", and value starting with \"valPrefix\"</td><td><code>a[href^=http:]</code></code></td></tr>\n  <tr><td><code>[attr$=valSuffix]</code></td><td>elements with an attribute named \"attr\", and value ending with \"valSuffix\"</td><td><code>img[src$=.png]</code></td></tr>\n  <tr><td><code>[attr*=valContaining]</code></td><td>elements with an attribute named \"attr\", and value containing \"valContaining\"</td><td><code>a[href*=/search/]</code></td></tr>\n  <tr><td><code>[attr~=<em>regex</em>]</code></td><td>elements with an attribute named \"attr\", and value matching the regular expression</td><td><code>img[src~=(?i)\\\\.(png|jpe?g)]</code></td></tr>\n  <tr><td></td><td>The above may be combined in any order</td><td><code>div.header[title]</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Combinators</h3></td></tr>\n  <tr><td><code>E F</code></td><td>an F element descended from an E element</td><td><code>div a</code>, <code>.logo h1</code></td></tr>\n  <tr><td><code>E > F</code></td><td>an F direct child of E</td><td><code>ol > li</code></td></tr>\n  <tr><td><code>E + F</code></td><td>an F element immediately preceded by sibling E</td><td><code>li + li</code>, <code>div.head + div</code></td></tr>\n  <tr><td><code>E ~ F</code></td><td>an F element preceded by sibling E</td><td><code>h1 ~ p</code></td></tr>\n  <tr><td><code>E, F, G</code></td><td>all matching elements E, F, or G</td><td><code>a[href], div, h3</code></td></tr>\n  <tr><td><td colspan=\"3\"><h3>Pseudo selectors</h3></td></tr>\n  <tr><td><code>:lt(<em>n</em>)</code></td><td>elements whose sibling index is less than <em>n</em></td><td><code>td:lt(3)</code> finds the first 2 cells of each row</td></tr>\n  <tr><td><code>:gt(<em>n</em>)</code></td><td>elements whose sibling index is greater than <em>n</em></td><td><code>td:gt(1)</code> finds cells after skipping the first two</td></tr>\n  <tr><td><code>:eq(<em>n</em>)</code></td><td>elements whose sibling index is equal to <em>n</em></td><td><code>td:eq(0)</code> finds the first cell of each row</td></tr>\n  <tr><td><code>:has(<em>selector</em>)</code></td><td>elements that contains at least one element matching the <em>selector</em></td><td><code>div:has(p)</code> finds divs that contain p elements </td></tr>\n  <tr><td><code>:contains(<em>text</em>)</code></td><td>elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants.</td><td><code>p:contains(jsoup)</code> finds p elements containing the text \"jsoup\".</td></tr>\n  <tr><td><code>:matches(<em>regex</em>)</code></td><td>elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants.</td><td><code>td:matches(\\\\d+)</code> finds table cells containing digits. <code>div:matches((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td><code>:containsOwn(<em>text</em>)</code></td><td>elements that directly contains the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants.</td><td><code>p:containsOwn(jsoup)</code> finds p elements with own text \"jsoup\".</td></tr>\n  <tr><td><code>:matchesOwn(<em>regex</em>)</code></td><td>elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants.</td><td><code>td:matchesOwn(\\\\d+)</code> finds table cells directly containing digits. <code>div:matchesOwn((?i)login)</code> finds divs containing the text, case insensitively.</td></tr>\n  <tr><td></td><td>The above may be combined in any order and with other selectors</td><td><code>.light:contains(name):eq(0)</code></td></tr>\n  </table>\n\n @see Element#select(String)\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "int PROBE_START_LINE_83",
        "snippet": "int PROBE_START_LINE_83 = 83;\nString p_query_491_line_83 = query;",
        "begin_line": 105,
        "end_line": 106,
        "comment": "    \n     Find elements matching selector.\n     @param query CSS selector\n     @param root root element to descend into\n     @return matching elements, empty if not\n     "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "int PROBE_END_LINE_83",
        "snippet": "int PROBE_END_LINE_83 = 83;\nreturn selector1_expr12_line_83;",
        "begin_line": 110,
        "end_line": 111,
        "comment": "    \n     Find elements matching selector.\n     @param query CSS selector\n     @param root root element to descend into\n     @return matching elements, empty if not\n     "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "boolean selector1_expr19_line_113",
        "snippet": "boolean selector1_expr19_line_113 = f_tq_490_line_113.isEmpty();\nboolean selector1_expr18_line_113 = !selector1_expr19_line_113;",
        "begin_line": 154,
        "end_line": 155,
        "comment": "    \n     Find elements matching selector.\n     @param query CSS selector\n     @param roots root elements to descend into\n     @return matching elements, empty if not\n     "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "int PROBE_END_LINE_113",
        "snippet": "int PROBE_END_LINE_113 = 130;\nwhile (selector1_expr18_line_113) {\n// hierarchy and extras\nboolean seenWhite = tq.consumeWhitespace();",
        "begin_line": 156,
        "end_line": 159,
        "comment": "    \n     Find elements matching selector.\n     @param query CSS selector\n     @param roots root elements to descend into\n     @return matching elements, empty if not\n     "
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "int PROBE_START_LINE_156",
        "snippet": "int PROBE_START_LINE_156 = 182;\norg.jsoup.parser.TokenQueue f_tq_490_line_156 = tq;",
        "begin_line": 213,
        "end_line": 214,
        "comment": "             hierarchy and extras"
    },
    {
        "class_name": "org.jsoup.select.Selector",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/Selector.java",
        "signature": "boolean selector1_expr23_line_156",
        "snippet": "boolean selector1_expr23_line_156 = f_tq_490_line_156.matchChomp(\".\");\nint PROBE_END_LINE_156 = 182;",
        "begin_line": 215,
        "end_line": 216,
        "comment": "             hierarchy and extras"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "private OutputSettings outputSettings",
        "snippet": "private OutputSettings outputSettings = new OutputSettings();\n\n/**\nCreate a new, empty Document.\n@param baseUri base URI of document\n@see org.jsoup.Jsoup#parse\n@see #createShell\n*/\npublic Document(String baseUri) {\nsuper(Tag.valueOf(\"#root\"), baseUri);",
        "begin_line": 17,
        "end_line": 26,
        "comment": "\n A HTML Document.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_START_LINE_50",
        "snippet": "int PROBE_START_LINE_50 = 50;\norg.jsoup.nodes.Element document1_expr5_line_50 = findFirstElementByTagName(\"head\", this);",
        "begin_line": 50,
        "end_line": 51,
        "comment": "    \n     Accessor to the document's {@code head} element.\n     @return {@code head}\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_START_LINE_101",
        "snippet": "int PROBE_START_LINE_101 = 102;\norg.jsoup.nodes.Element v_html_el_81_line_101 = htmlEl;",
        "begin_line": 110,
        "end_line": 111,
        "comment": "    \n     Normalise the document. This happens after the parse phase so generally does not need to be called.\n     Moves any text content that is not in the body element into the body.\n     @return this document after normalisation\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "boolean document1_expr14_line_101",
        "snippet": "boolean document1_expr14_line_101 = v_html_el_81_line_101 == null;\nint PROBE_END_LINE_101 = 102;",
        "begin_line": 112,
        "end_line": 113,
        "comment": "    \n     Normalise the document. This happens after the parse phase so generally does not need to be called.\n     Moves any text content that is not in the body element into the body.\n     @return this document after normalisation\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_START_LINE_103",
        "snippet": "int PROBE_START_LINE_103 = 104;\norg.jsoup.nodes.Element document1_expr16_line_103 = head();",
        "begin_line": 116,
        "end_line": 117,
        "comment": "    \n     Normalise the document. This happens after the parse phase so generally does not need to be called.\n     Moves any text content that is not in the body element into the body.\n     @return this document after normalisation\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_START_LINE_105",
        "snippet": "int PROBE_START_LINE_105 = 106;\norg.jsoup.nodes.Element document1_expr18_line_105 = body();",
        "begin_line": 122,
        "end_line": 123,
        "comment": "    \n     Normalise the document. This happens after the parse phase so generally does not need to be called.\n     Moves any text content that is not in the body element into the body.\n     @return this document after normalisation\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "boolean document1_expr17_line_105",
        "snippet": "boolean document1_expr17_line_105 = document1_expr18_line_105 == null;\nint PROBE_END_LINE_105 = 106;",
        "begin_line": 124,
        "end_line": 125,
        "comment": "    \n     Normalise the document. This happens after the parse phase so generally does not need to be called.\n     Moves any text content that is not in the body element into the body.\n     @return this document after normalisation\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_START_LINE_110",
        "snippet": "int PROBE_START_LINE_110 = 110;\norg.jsoup.nodes.Element document1_expr20_line_110 = head();",
        "begin_line": 129,
        "end_line": 130,
        "comment": "    \n     Normalise the document. This happens after the parse phase so generally does not need to be called.\n     Moves any text content that is not in the body element into the body.\n     @return this document after normalisation\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_END_LINE_110",
        "snippet": "int PROBE_END_LINE_110 = 110;\n// pull text nodes out of root, html, and head els, and push into body. non-text nodes are already taken care\n// of. do in inverse order to maintain text order.\nnormaliseTextNodes(document1_expr20_line_110);",
        "begin_line": 131,
        "end_line": 134,
        "comment": "    \n     Normalise the document. This happens after the parse phase so generally does not need to be called.\n     Moves any text content that is not in the body element into the body.\n     @return this document after normalisation\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_END_LINE_111",
        "snippet": "int PROBE_END_LINE_111 = 111;\nnormaliseTextNodes(v_html_el_81_line_111);",
        "begin_line": 137,
        "end_line": 138,
        "comment": "         of. do in inverse order to maintain text order."
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_START_LINE_114",
        "snippet": "int PROBE_START_LINE_114 = 114;\norg.jsoup.nodes.Element v_html_el_81_line_114 = htmlEl;",
        "begin_line": 141,
        "end_line": 142,
        "comment": "         of. do in inverse order to maintain text order."
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_END_LINE_114",
        "snippet": "int PROBE_END_LINE_114 = 114;\nnormaliseStructure(\"head\", v_html_el_81_line_114);",
        "begin_line": 143,
        "end_line": 144,
        "comment": "         of. do in inverse order to maintain text order."
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "List<Node> toMove",
        "snippet": "List<Node> toMove = new ArrayList<Node>();\nint PROBE_START_LINE_123 = 129;",
        "begin_line": 155,
        "end_line": 156,
        "comment": "     does not recurse."
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_END_LINE_123",
        "snippet": "int PROBE_END_LINE_123 = 129;\nfor (Node node: f_child_nodes_85_line_123) {\nint PROBE_START_LINE_124 = 128;",
        "begin_line": 159,
        "end_line": 161,
        "comment": "     does not recurse."
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "boolean document1_expr30_line_124",
        "snippet": "boolean document1_expr30_line_124 = v_node_84_line_124 instanceof TextNode;\nint PROBE_END_LINE_124 = 128;",
        "begin_line": 163,
        "end_line": 164,
        "comment": "     does not recurse."
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "TextNode tn",
        "snippet": "TextNode tn = (TextNode) node;\nif (!tn.isBlank())\ntoMove.add(tn);",
        "begin_line": 166,
        "end_line": 168,
        "comment": "     does not recurse."
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "Node dupe",
        "snippet": "Node dupe = elements.get(i);\nfor (Node node : dupe.childNodes)\ntoMove.add(node);",
        "begin_line": 200,
        "end_line": 202,
        "comment": "     merge multiple <head> or <body> contents into one, delete the remainder, and ensure they are owned by <html>"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_END_LINE_156",
        "snippet": "int PROBE_END_LINE_156 = 158;\n// ensure parented by <html>\nif (document1_expr38_line_156) {\nhtmlEl.appendChild(master); // includes remove()\n}\n}\n\n// fast method to get first by tag name, used for html, head, body finders\nprivate Element findFirstElementByTagName(String tag, Node node) {\nint PROBE_START_LINE_163 = 171;",
        "begin_line": 215,
        "end_line": 224,
        "comment": "     merge multiple <head> or <body> contents into one, delete the remainder, and ensure they are owned by <html>"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_END_LINE_200",
        "snippet": "int PROBE_END_LINE_200 = 200;\n\nprivate Entities.EscapeMode escapeMode = f_base_97_line_200;",
        "begin_line": 291,
        "end_line": 293,
        "comment": "    \n     * A Document's output settings control the form of the text() and html() methods.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Element",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Element.java",
        "signature": "int PROBE_START_LINE_39",
        "snippet": "int PROBE_START_LINE_39 = 39;\norg.jsoup.parser.Tag p_tag_107_line_39 = tag;",
        "begin_line": 40,
        "end_line": 41,
        "comment": "    \n     * Create a new, standalone Element. (Standalone in that is has no parent.)\n     * \n     * @param tag tag of this element\n     * @param baseUri the base URI\n     * @param attributes initial attributes\n     * @see #appendChild(Node)\n     * @see #appendElement(String)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Element",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Element.java",
        "signature": "String element1_expr6_line_57",
        "snippet": "String element1_expr6_line_57 = f_tag_110_line_57.getName();\nint PROBE_END_LINE_57 = 57;",
        "begin_line": 66,
        "end_line": 67,
        "comment": "    \n     * Create a new Element from a tag and a base URI.\n     * \n     * @param tag element tag\n     * @param baseUri the base URI of this element. It is acceptable for the base URI to be an empty\n     *            string, but not null.\n     * @see Tag#valueOf(String)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Element",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Element.java",
        "signature": "List<Element> elements",
        "snippet": "List<Element> elements = new ArrayList<Element>();\nfor (Node node : childNodes) {\nif (node instanceof Element)\nelements.add((Element) node);",
        "begin_line": 198,
        "end_line": 201,
        "comment": "         create on the fly rather than maintaining two lists. if gets slow, memoize, and mark dirty on change"
    },
    {
        "class_name": "org.jsoup.nodes.Element",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Element.java",
        "signature": "Set<String> classes",
        "snippet": "Set<String> classes = classNames();\nif (classes.contains(className))\nclasses.remove(className);",
        "begin_line": 983,
        "end_line": 985,
        "comment": "    \n     Toggle a class name on this element's {@code class} attribute: if present, remove it; otherwise add it.\n     @param className class name to toggle\n     @return this element\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Element",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Element.java",
        "signature": "boolean element1_expr29_line_970",
        "snippet": "boolean element1_expr29_line_970 = element1_expr30_line_970 != null;\nboolean element1_expr31_line_970 = true;",
        "begin_line": 1027,
        "end_line": 1028,
        "comment": "    \n     * Set the value of a form element (input, textarea, etc).\n     * @param value value to set\n     * @return this element (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Element",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Element.java",
        "signature": "boolean element1_expr27_line_970",
        "snippet": "boolean element1_expr27_line_970 = element1_expr28_line_970 && element1_expr34_line_970;\nelement1_expr26_line_970 = (element1_expr27_line_970);",
        "begin_line": 1040,
        "end_line": 1041,
        "comment": "    \n     * Set the value of a form element (input, textarea, etc).\n     * @param value value to set\n     * @return this element (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_START_LINE_26",
        "snippet": "int PROBE_START_LINE_26 = 26;\nMap<Character, String> p_map_186_line_26 = map;",
        "begin_line": 26,
        "end_line": 27,
        "comment": "         Complete HTML entities. "
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_START_LINE_38",
        "snippet": "int PROBE_START_LINE_38 = 38;\n\nprivate static final java.util.regex.Pattern entities1_expr2_line_38 = Pattern\n.compile(\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\");",
        "begin_line": 44,
        "end_line": 47,
        "comment": "         Complete HTML entities. "
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_END_LINE_38",
        "snippet": "int PROBE_END_LINE_38 = 38;\n\nprivate static final Pattern unescapePattern = entities1_expr2_line_38;",
        "begin_line": 49,
        "end_line": 51,
        "comment": "         Complete HTML entities. "
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_END_LINE_52",
        "snippet": "int PROBE_END_LINE_52 = 55;\nif (entities1_expr15_line_52)\naccum.append(c.charValue());",
        "begin_line": 96,
        "end_line": 98,
        "comment": "         Complete HTML entities. "
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Entities.java",
        "signature": "String entities1_expr18_line_58",
        "snippet": "String entities1_expr18_line_58 = v_accum_194_line_58.toString();\nint PROBE_END_LINE_58 = 58;",
        "begin_line": 106,
        "end_line": 107,
        "comment": "         Complete HTML entities. "
    },
    {
        "class_name": "org.jsoup.helper.StringUtil",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/helper/StringUtil.java",
        "signature": "int PROBE_START_LINE_51",
        "snippet": "int PROBE_START_LINE_51 = 52;\nint p_width_30_line_51 = width;",
        "begin_line": 51,
        "end_line": 52,
        "comment": "    \n     * Returns space padding\n     * @param width amount of padding desired\n     * @return string of spaces * width\n     "
    },
    {
        "class_name": "org.jsoup.helper.StringUtil",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/helper/StringUtil.java",
        "signature": "boolean string_util1_expr2_line_51",
        "snippet": "boolean string_util1_expr2_line_51 = p_width_30_line_51 < 0;\nint PROBE_END_LINE_51 = 52;",
        "begin_line": 53,
        "end_line": 54,
        "comment": "    \n     * Returns space padding\n     * @param width amount of padding desired\n     * @return string of spaces * width\n     "
    },
    {
        "class_name": "org.jsoup.Jsoup",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/Jsoup.java",
        "signature": "int PROBE_START_LINE_44",
        "snippet": "int PROBE_START_LINE_44 = 44;\nString p_html_3_line_44 = html;",
        "begin_line": 44,
        "end_line": 45,
        "comment": "    \n     Parse HTML into a Document. As no base URI is specified, absolute URL detection relies on the HTML including a\n     {@code <base href>} tag.\n\n     @param html HTML to parse\n     @return sane HTML\n\n     @see #parse(String, String)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Evaluator",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/nodes/Evaluator.java",
        "signature": "int PROBE_START_LINE_26",
        "snippet": "int PROBE_START_LINE_26 = 26;\nString p_tag_name_213_line_26 = tagName;",
        "begin_line": 26,
        "end_line": 27,
        "comment": "    \n     * Test if the element meets the evaluator's requirements.\n     "
    },
    {
        "class_name": "org.jsoup.select.NodeTraversor",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/NodeTraversor.java",
        "signature": "int PROBE_START_LINE_12",
        "snippet": "int PROBE_START_LINE_12 = 12;\norg.jsoup.select.NodeVisitor p_visitor_479_line_12 = visitor;",
        "begin_line": 13,
        "end_line": 14,
        "comment": "\n * Breadth first node traversor.\n "
    },
    {
        "class_name": "org.jsoup.select.NodeTraversor",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/NodeTraversor.java",
        "signature": "int PROBE_END_LINE_12",
        "snippet": "int PROBE_END_LINE_12 = 12;\nthis.visitor = p_visitor_479_line_12;",
        "begin_line": 15,
        "end_line": 16,
        "comment": "\n * Breadth first node traversor.\n "
    },
    {
        "class_name": "org.jsoup.select.NodeTraversor",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/NodeTraversor.java",
        "signature": "int PROBE_START_LINE_16",
        "snippet": "int PROBE_START_LINE_16 = 16;\nNode p_root_481_line_16 = root;",
        "begin_line": 20,
        "end_line": 21,
        "comment": "\n * Breadth first node traversor.\n "
    },
    {
        "class_name": "org.jsoup.select.NodeTraversor",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/NodeTraversor.java",
        "signature": "int PROBE_END_LINE_16",
        "snippet": "int PROBE_END_LINE_16 = 16;\nNode node = p_root_481_line_16;",
        "begin_line": 22,
        "end_line": 23,
        "comment": "\n * Breadth first node traversor.\n "
    },
    {
        "class_name": "org.jsoup.select.NodeTraversor",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/NodeTraversor.java",
        "signature": "int depth",
        "snippet": "int depth = 0;\n\nint PROBE_START_LINE_19 = 35;",
        "begin_line": 24,
        "end_line": 26,
        "comment": "\n * Breadth first node traversor.\n "
    },
    {
        "class_name": "org.jsoup.select.NodeTraversor",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/NodeTraversor.java",
        "signature": "boolean node_traversor1_expr3_line_19",
        "snippet": "boolean node_traversor1_expr3_line_19 = v_node_482_line_19 != null;\nint PROBE_END_LINE_19 = 35;",
        "begin_line": 28,
        "end_line": 29,
        "comment": "\n * Breadth first node traversor.\n "
    },
    {
        "class_name": "org.jsoup.select.NodeTraversor",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-8/result/src/org/jsoup/select/NodeTraversor.java",
        "signature": "int PROBE_START_LINE_20",
        "snippet": "int PROBE_START_LINE_20 = 20;\norg.jsoup.select.NodeVisitor f_visitor_480_line_20 = visitor;",
        "begin_line": 31,
        "end_line": 32,
        "comment": "\n * Breadth first node traversor.\n "
    }
]