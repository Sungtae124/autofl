[
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_90",
        "snippet": "int PROBE_START_LINE_90 = 105;\norg.jsoup.safety.Whitelist whitelist1_expr31_line_90 = new Whitelist().addTags(\"a\", \"b\", \"blockquote\", \"br\",\n\"cite\", \"code\", \"dd\", \"dl\", \"dt\", \"em\", \"i\", \"li\", \"ol\", \"p\", \"pre\", \"q\", \"small\", \"strike\", \"strong\",\n\"sub\", \"sup\", \"u\", \"ul\");",
        "begin_line": 90,
        "end_line": 93,
        "comment": "    \n     This whitelist allows a fuller range of text nodes: <code>a, b, blockquote, br, cite, code, dd, dl, dt, em, i, li,\n     ol, p, pre, q, small, strike, strong, sub, sup, u, ul</code>, and appropriate attributes.\n     <p/>\n     Links (<code>a</code> elements) can point to <code>http, https, ftp, mailto</code>, and have an enforced\n     <code>rel=nofollow</code> attribute.\n     <p/>\n     Does not allow images.\n\n     @return whitelist\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_185",
        "snippet": "int PROBE_START_LINE_185 = 185;\nString[] p_tags_844_line_185 = tags;",
        "begin_line": 188,
        "end_line": 189,
        "comment": "    \n     Add a list of allowed elements to a whitelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n     @param tags tag names to allow\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_END_LINE_185",
        "snippet": "int PROBE_END_LINE_185 = 185;\nValidate.notNull(p_tags_844_line_185);",
        "begin_line": 190,
        "end_line": 191,
        "comment": "    \n     Add a list of allowed elements to a whitelist. (If a tag is not allowed, it will be removed from the HTML.)\n\n     @param tags tag names to allow\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_208",
        "snippet": "int PROBE_START_LINE_208 = 208;\nString p_tag_846_line_208 = tag;",
        "begin_line": 225,
        "end_line": 226,
        "comment": "    \n     Add a list of allowed attributes to a tag. (If an attribute is not allowed on an element, it will be removed.)\n     <p/>\n     E.g.: <code>addAttributes(\"a\", \"href\", \"class\")</code> allows <code>href</code> and <code>class</code> attributes\n     on <code>a</code> tags.\n     <p/>\n     To make an attribute valid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g.\n     <code>addAttributes(\":all\", \"class\")</code>.\n\n     @param tag  The tag the attributes are for. The tag will be added to the allowed tag list if necessary.\n     @param keys List of valid attributes for the tag\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "TagName whitelist1_expr71_line_212",
        "snippet": "TagName whitelist1_expr71_line_212 = TagName.valueOf(p_tag_846_line_212);\nint PROBE_END_LINE_212 = 212;",
        "begin_line": 242,
        "end_line": 243,
        "comment": "    \n     Add a list of allowed attributes to a tag. (If an attribute is not allowed on an element, it will be removed.)\n     <p/>\n     E.g.: <code>addAttributes(\"a\", \"href\", \"class\")</code> allows <code>href</code> and <code>class</code> attributes\n     on <code>a</code> tags.\n     <p/>\n     To make an attribute valid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g.\n     <code>addAttributes(\":all\", \"class\")</code>.\n\n     @param tag  The tag the attributes are for. The tag will be added to the allowed tag list if necessary.\n     @param keys List of valid attributes for the tag\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "TagName tagName",
        "snippet": "TagName tagName = whitelist1_expr71_line_212;\nint PROBE_START_LINE_213 = 214;",
        "begin_line": 244,
        "end_line": 245,
        "comment": "    \n     Add a list of allowed attributes to a tag. (If an attribute is not allowed on an element, it will be removed.)\n     <p/>\n     E.g.: <code>addAttributes(\"a\", \"href\", \"class\")</code> allows <code>href</code> and <code>class</code> attributes\n     on <code>a</code> tags.\n     <p/>\n     To make an attribute valid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g.\n     <code>addAttributes(\":all\", \"class\")</code>.\n\n     @param tag  The tag the attributes are for. The tag will be added to the allowed tag list if necessary.\n     @param keys List of valid attributes for the tag\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "boolean whitelist1_expr73_line_213",
        "snippet": "boolean whitelist1_expr73_line_213 = f_tag_names_839_line_213.contains(v_tag_name_848_line_213);\nboolean whitelist1_expr72_line_213 = !whitelist1_expr73_line_213;",
        "begin_line": 248,
        "end_line": 249,
        "comment": "    \n     Add a list of allowed attributes to a tag. (If an attribute is not allowed on an element, it will be removed.)\n     <p/>\n     E.g.: <code>addAttributes(\"a\", \"href\", \"class\")</code> allows <code>href</code> and <code>class</code> attributes\n     on <code>a</code> tags.\n     <p/>\n     To make an attribute valid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g.\n     <code>addAttributes(\":all\", \"class\")</code>.\n\n     @param tag  The tag the attributes are for. The tag will be added to the allowed tag list if necessary.\n     @param keys List of valid attributes for the tag\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_END_LINE_213",
        "snippet": "int PROBE_END_LINE_213 = 214;\nif (whitelist1_expr72_line_213)\ntagNames.add(tagName);",
        "begin_line": 250,
        "end_line": 252,
        "comment": "    \n     Add a list of allowed attributes to a tag. (If an attribute is not allowed on an element, it will be removed.)\n     <p/>\n     E.g.: <code>addAttributes(\"a\", \"href\", \"class\")</code> allows <code>href</code> and <code>class</code> attributes\n     on <code>a</code> tags.\n     <p/>\n     To make an attribute valid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g.\n     <code>addAttributes(\":all\", \"class\")</code>.\n\n     @param tag  The tag the attributes are for. The tag will be added to the allowed tag list if necessary.\n     @param keys List of valid attributes for the tag\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "String[] p_keys_847_line_216",
        "snippet": "String[] p_keys_847_line_216 = keys;\nint PROBE_END_LINE_216 = 219;",
        "begin_line": 255,
        "end_line": 256,
        "comment": "    \n     Add a list of allowed attributes to a tag. (If an attribute is not allowed on an element, it will be removed.)\n     <p/>\n     E.g.: <code>addAttributes(\"a\", \"href\", \"class\")</code> allows <code>href</code> and <code>class</code> attributes\n     on <code>a</code> tags.\n     <p/>\n     To make an attribute valid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g.\n     <code>addAttributes(\":all\", \"class\")</code>.\n\n     @param tag  The tag the attributes are for. The tag will be added to the allowed tag list if necessary.\n     @param keys List of valid attributes for the tag\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_217",
        "snippet": "int PROBE_START_LINE_217 = 217;\nString v_key_850_line_217 = key;",
        "begin_line": 258,
        "end_line": 259,
        "comment": "    \n     Add a list of allowed attributes to a tag. (If an attribute is not allowed on an element, it will be removed.)\n     <p/>\n     E.g.: <code>addAttributes(\"a\", \"href\", \"class\")</code> allows <code>href</code> and <code>class</code> attributes\n     on <code>a</code> tags.\n     <p/>\n     To make an attribute valid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g.\n     <code>addAttributes(\":all\", \"class\")</code>.\n\n     @param tag  The tag the attributes are for. The tag will be added to the allowed tag list if necessary.\n     @param keys List of valid attributes for the tag\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_242",
        "snippet": "int PROBE_START_LINE_242 = 242;\nString p_tag_851_line_242 = tag;",
        "begin_line": 302,
        "end_line": 303,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_END_LINE_242",
        "snippet": "int PROBE_END_LINE_242 = 242;\nValidate.notEmpty(p_tag_851_line_242);",
        "begin_line": 304,
        "end_line": 305,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_243",
        "snippet": "int PROBE_START_LINE_243 = 243;\nString p_key_852_line_243 = key;",
        "begin_line": 306,
        "end_line": 307,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_END_LINE_243",
        "snippet": "int PROBE_END_LINE_243 = 243;\nValidate.notEmpty(p_key_852_line_243);",
        "begin_line": 308,
        "end_line": 309,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_244",
        "snippet": "int PROBE_START_LINE_244 = 244;\nString p_value_853_line_244 = value;",
        "begin_line": 310,
        "end_line": 311,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_END_LINE_244",
        "snippet": "int PROBE_END_LINE_244 = 244;\nValidate.notEmpty(p_value_853_line_244);",
        "begin_line": 312,
        "end_line": 313,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_246",
        "snippet": "int PROBE_START_LINE_246 = 246;\nString p_tag_851_line_246 = tag;",
        "begin_line": 315,
        "end_line": 316,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "TagName whitelist1_expr84_line_246",
        "snippet": "TagName whitelist1_expr84_line_246 = TagName.valueOf(p_tag_851_line_246);\nint PROBE_END_LINE_246 = 246;",
        "begin_line": 317,
        "end_line": 318,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "TagName tagName",
        "snippet": "TagName tagName = whitelist1_expr84_line_246;\nint PROBE_START_LINE_247 = 248;",
        "begin_line": 319,
        "end_line": 320,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "boolean whitelist1_expr86_line_247",
        "snippet": "boolean whitelist1_expr86_line_247 = f_tag_names_839_line_247.contains(v_tag_name_854_line_247);\nboolean whitelist1_expr85_line_247 = !whitelist1_expr86_line_247;",
        "begin_line": 323,
        "end_line": 324,
        "comment": "    \n     Add an enforced attribute to a tag. An enforced attribute will always be added to the element. If the element\n     already has the attribute set, it will be overridden.\n     <p/>\n     E.g.: <code>addEnforcedAttribute(\"a\", \"rel\", \"nofollow\")</code> will make all <code>a</code> tags output as\n     <code>&lt;a href=\"...\" rel=\"nofollow\"></code>\n\n     @param tag   The tag the enforced attribute is for. The tag will be added to the allowed tag list if necessary.\n     @param key   The attribute key\n     @param value The enforced attribute value\n     @return this (for chaining)\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_294",
        "snippet": "int PROBE_START_LINE_294 = 294;\nString p_key_860_line_294 = key;",
        "begin_line": 399,
        "end_line": 400,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_295",
        "snippet": "int PROBE_START_LINE_295 = 295;\nString[] p_protocols_861_line_295 = protocols;",
        "begin_line": 403,
        "end_line": 404,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_297",
        "snippet": "int PROBE_START_LINE_297 = 297;\nString p_tag_859_line_297 = tag;",
        "begin_line": 408,
        "end_line": 409,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "TagName whitelist1_expr97_line_297",
        "snippet": "TagName whitelist1_expr97_line_297 = TagName.valueOf(p_tag_859_line_297);\nint PROBE_END_LINE_297 = 297;",
        "begin_line": 410,
        "end_line": 411,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "TagName tagName",
        "snippet": "TagName tagName = whitelist1_expr97_line_297;\nint PROBE_START_LINE_298 = 298;",
        "begin_line": 412,
        "end_line": 413,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_302",
        "snippet": "int PROBE_START_LINE_302 = 307;\nMap<org.jsoup.safety.Whitelist.TagName, Map<org.jsoup.safety.Whitelist.AttributeKey, Set<org.jsoup.safety.Whitelist.Protocol>>> whitelist1_expr100_line_302 = this.protocols;",
        "begin_line": 421,
        "end_line": 422,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_306",
        "snippet": "int PROBE_START_LINE_306 = 306;\nMap<org.jsoup.safety.Whitelist.TagName, Map<org.jsoup.safety.Whitelist.AttributeKey, Set<org.jsoup.safety.Whitelist.Protocol>>> whitelist1_expr103_line_306 = this.protocols;",
        "begin_line": 430,
        "end_line": 431,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_END_LINE_306",
        "snippet": "int PROBE_END_LINE_306 = 306;\nwhitelist1_expr103_line_306.put(v_tag_name_862_line_306, v_attr_map_864_line_306);",
        "begin_line": 434,
        "end_line": 435,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "int PROBE_START_LINE_308",
        "snippet": "int PROBE_START_LINE_308 = 313;\nMap<org.jsoup.safety.Whitelist.AttributeKey, Set<org.jsoup.safety.Whitelist.Protocol>> v_attr_map_864_line_308 = attrMap;",
        "begin_line": 437,
        "end_line": 438,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.safety.Whitelist",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Whitelist.java",
        "signature": "boolean whitelist1_expr104_line_308",
        "snippet": "boolean whitelist1_expr104_line_308 = v_attr_map_864_line_308.containsKey(v_attr_key_863_line_308);\nint PROBE_END_LINE_308 = 313;",
        "begin_line": 440,
        "end_line": 441,
        "comment": "    \n     Add allowed URL protocols for an element's URL attribute. This restricts the possible values of the attribute to\n     URLs with the defined protocol.\n     <p/>\n     E.g.: <code>addProtocols(\"a\", \"href\", \"ftp\", \"http\", \"https\")</code>\n\n     @param tag       Tag the URL protocol is for\n     @param key       Attribute key\n     @param protocols List of valid protocols\n     @return this, for chaining\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attributes",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Attributes.java",
        "signature": "int PROBE_START_LINE_55",
        "snippet": "int PROBE_START_LINE_55 = 55;\norg.jsoup.nodes.Attribute p_attribute_86_line_55 = attribute;",
        "begin_line": 58,
        "end_line": 59,
        "comment": "    \n     Set a new attribute, or replace an existing one by key.\n     @param attribute attribute\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attributes",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Attributes.java",
        "signature": "Attributes that",
        "snippet": "Attributes that = (Attributes) o;\n\nif (attributes != null ? !attributes.equals(that.attributes) : that.attributes != null) return false;",
        "begin_line": 189,
        "end_line": 191,
        "comment": "    \n     Get the HTML representation of these attributes.\n     @return HTML\n     "
    },
    {
        "class_name": "org.jsoup.helper.Validate",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/Validate.java",
        "signature": "int PROBE_START_LINE_15",
        "snippet": "int PROBE_START_LINE_15 = 16;\nObject p_obj_55_line_15 = obj;",
        "begin_line": 15,
        "end_line": 16,
        "comment": "    \n     * Validates that the object is not null\n     * @param obj object to test\n     "
    },
    {
        "class_name": "org.jsoup.helper.Validate",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/Validate.java",
        "signature": "boolean validate1_expr1_line_15",
        "snippet": "boolean validate1_expr1_line_15 = p_obj_55_line_15 == null;\nint PROBE_END_LINE_15 = 16;",
        "begin_line": 17,
        "end_line": 18,
        "comment": "    \n     * Validates that the object is not null\n     * @param obj object to test\n     "
    },
    {
        "class_name": "org.jsoup.helper.Validate",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/Validate.java",
        "signature": "boolean validate1_expr3_line_34",
        "snippet": "boolean validate1_expr3_line_34 = !p_val_58_line_34;\nint PROBE_END_LINE_34 = 35;",
        "begin_line": 44,
        "end_line": 45,
        "comment": "    \n     * Validates that the value is true\n     * @param val object to test\n     "
    },
    {
        "class_name": "org.jsoup.helper.DescendableLinkedList",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/DescendableLinkedList.java",
        "signature": "int PROBE_START_LINE_24",
        "snippet": "int PROBE_START_LINE_24 = 24;\nE p_e_39_line_24 = e;",
        "begin_line": 24,
        "end_line": 25,
        "comment": "    \n     * Add a new element to the start of the list.\n     * @param e element to add\n     "
    },
    {
        "class_name": "org.jsoup.helper.DescendableLinkedList",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/DescendableLinkedList.java",
        "signature": "int PROBE_START_LINE_40",
        "snippet": "int PROBE_START_LINE_40 = 40;\nint descendable_linked_list1_expr10_line_40 = size();",
        "begin_line": 54,
        "end_line": 55,
        "comment": "    \n     * Remove and return the last element, if there is one\n     * @return the last element, or null\n     "
    },
    {
        "class_name": "org.jsoup.helper.DescendableLinkedList",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/DescendableLinkedList.java",
        "signature": "boolean descendable_linked_list1_expr8_line_40",
        "snippet": "boolean descendable_linked_list1_expr8_line_40 = descendable_linked_list1_expr10_line_40 == 0;\nE descendable_linked_list1_expr9_line_40 = null;",
        "begin_line": 56,
        "end_line": 57,
        "comment": "    \n     * Remove and return the last element, if there is one\n     * @return the last element, or null\n     "
    },
    {
        "class_name": "org.jsoup.helper.DescendableLinkedList",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/DescendableLinkedList.java",
        "signature": "int PROBE_END_LINE_40",
        "snippet": "int PROBE_END_LINE_40 = 40;\nreturn descendable_linked_list1_expr7_line_40;",
        "begin_line": 64,
        "end_line": 65,
        "comment": "    \n     * Remove and return the last element, if there is one\n     * @return the last element, or null\n     "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_START_LINE_24",
        "snippet": "int PROBE_START_LINE_24 = 24;\nString p_input_814_line_24 = input;",
        "begin_line": 24,
        "end_line": 25,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_END_LINE_24",
        "snippet": "int PROBE_END_LINE_24 = 24;\nValidate.notNull(p_input_814_line_24, \"String input must not be null\");",
        "begin_line": 26,
        "end_line": 27,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_START_LINE_25",
        "snippet": "int PROBE_START_LINE_25 = 25;\nString p_base_uri_815_line_25 = baseUri;",
        "begin_line": 28,
        "end_line": 29,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_END_LINE_25",
        "snippet": "int PROBE_END_LINE_25 = 25;\nValidate.notNull(p_base_uri_815_line_25, \"BaseURI must not be null\");",
        "begin_line": 30,
        "end_line": 31,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_START_LINE_27",
        "snippet": "int PROBE_START_LINE_27 = 27;\nString p_base_uri_815_line_27 = baseUri;",
        "begin_line": 33,
        "end_line": 34,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_END_LINE_28",
        "snippet": "int PROBE_END_LINE_28 = 28;\nreader = new CharacterReader(p_input_814_line_28);",
        "begin_line": 39,
        "end_line": 40,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_START_LINE_29",
        "snippet": "int PROBE_START_LINE_29 = 29;\norg.jsoup.parser.ParseErrorList p_errors_816_line_29 = errors;",
        "begin_line": 41,
        "end_line": 42,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_END_LINE_30",
        "snippet": "int PROBE_END_LINE_30 = 30;\ntokeniser = new Tokeniser(f_reader_817_line_30, p_errors_816_line_30);",
        "begin_line": 48,
        "end_line": 49,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_START_LINE_32",
        "snippet": "int PROBE_START_LINE_32 = 32;\nString p_base_uri_815_line_32 = baseUri;",
        "begin_line": 51,
        "end_line": 52,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.TreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TreeBuilder.java",
        "signature": "int PROBE_END_LINE_32",
        "snippet": "int PROBE_END_LINE_32 = 32;\nthis.baseUri = p_base_uri_815_line_32;",
        "begin_line": 53,
        "end_line": 54,
        "comment": "\n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "boolean selfClosing",
        "snippet": "boolean selfClosing = false;\nAttributes attributes; // start tags get attributes on construction. End tags get attributes on first new attribute (but only for parser convenience, not used).\n\nvoid newAttribute() {\nint PROBE_START_LINE_56 = 57;",
        "begin_line": 52,
        "end_line": 56,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "boolean token1_expr2_line_56",
        "snippet": "boolean token1_expr2_line_56 = f_attributes_360_line_56 == null;\nint PROBE_END_LINE_56 = 57;",
        "begin_line": 58,
        "end_line": 59,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_START_LINE_59",
        "snippet": "int PROBE_START_LINE_59 = 66;\nString f_pending_attribute_name_596_line_59 = pendingAttributeName;",
        "begin_line": 63,
        "end_line": 64,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "boolean token1_expr3_line_59",
        "snippet": "boolean token1_expr3_line_59 = f_pending_attribute_name_596_line_59 != null;\nint PROBE_END_LINE_59 = 66;",
        "begin_line": 65,
        "end_line": 66,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_START_LINE_61",
        "snippet": "int PROBE_START_LINE_61 = 64;\nStringBuilder f_pending_attribute_value_597_line_61 = pendingAttributeValue;",
        "begin_line": 69,
        "end_line": 70,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_START_LINE_64",
        "snippet": "int PROBE_START_LINE_64 = 64;\nString f_pending_attribute_name_596_line_64 = pendingAttributeName;",
        "begin_line": 76,
        "end_line": 77,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "StringBuilder f_pending_attribute_value_597_line_64",
        "snippet": "StringBuilder f_pending_attribute_value_597_line_64 = pendingAttributeValue;\nString token1_expr6_line_64 = f_pending_attribute_value_597_line_64.toString();",
        "begin_line": 78,
        "end_line": 79,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_END_LINE_64",
        "snippet": "int PROBE_END_LINE_64 = 64;\nattribute = new Attribute(f_pending_attribute_name_596_line_64, token1_expr6_line_64);",
        "begin_line": 80,
        "end_line": 81,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_START_LINE_68",
        "snippet": "int PROBE_START_LINE_68 = 69;\nStringBuilder f_pending_attribute_value_597_line_68 = pendingAttributeValue;",
        "begin_line": 90,
        "end_line": 91,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_START_LINE_69",
        "snippet": "int PROBE_START_LINE_69 = 69;\nStringBuilder f_pending_attribute_value_597_line_69 = pendingAttributeValue;",
        "begin_line": 95,
        "end_line": 96,
        "comment": "\n * Parse tokens for the Tokeniser.\n "
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_START_LINE_81",
        "snippet": "int PROBE_START_LINE_81 = 81;\nString f_tag_name_599_line_81 = tagName;",
        "begin_line": 116,
        "end_line": 117,
        "comment": "                 todo: check if attribute name exists; if so, drop and error"
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int token1_expr16_line_81",
        "snippet": "int token1_expr16_line_81 = f_tag_name_599_line_81.length();\nboolean token1_expr15_line_81 = token1_expr16_line_81 == 0;",
        "begin_line": 118,
        "end_line": 119,
        "comment": "                 todo: check if attribute name exists; if so, drop and error"
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "String token1_expr19_line_101",
        "snippet": "String token1_expr19_line_101 = null;\nif (token1_expr18_line_101) {\np_append_601_line_101 = append;",
        "begin_line": 154,
        "end_line": 156,
        "comment": "         these appenders are rarely hit in not null state-- caused by null chars."
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "String token1_expr17_line_101",
        "snippet": "String token1_expr17_line_101 = token1_expr18_line_101 ? p_append_601_line_101 : token1_expr19_line_101;\nint PROBE_END_LINE_101 = 101;",
        "begin_line": 160,
        "end_line": 161,
        "comment": "         these appenders are rarely hit in not null state-- caused by null chars."
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_END_LINE_129",
        "snippet": "int PROBE_END_LINE_129 = 129;\ntype = f_start_tag_607_line_129;",
        "begin_line": 218,
        "end_line": 219,
        "comment": "         these appenders are rarely hit in not null state-- caused by null chars."
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_START_LINE_160",
        "snippet": "int PROBE_START_LINE_160 = 160;\nString p_name_612_line_160 = name;",
        "begin_line": 253,
        "end_line": 254,
        "comment": "         these appenders are rarely hit in not null state-- caused by null chars."
    },
    {
        "class_name": "org.jsoup.parser.Token",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Token.java",
        "signature": "int PROBE_END_LINE_160",
        "snippet": "int PROBE_END_LINE_160 = 160;\nthis.tagName = p_name_612_line_160;",
        "begin_line": 255,
        "end_line": 256,
        "comment": "         these appenders are rarely hit in not null state-- caused by null chars."
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_START_LINE_18",
        "snippet": "int PROBE_START_LINE_18 = 18;\n\nprivate org.jsoup.parser.TokeniserState f_data_344_line_18 = TokeniserState.Data;",
        "begin_line": 19,
        "end_line": 21,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "private StringBuilder charBuffer",
        "snippet": "private StringBuilder charBuffer = new StringBuilder(); // buffers characters to output as one token\nStringBuilder dataBuffer; // buffers data looking for </script>\n\nToken.Tag tagPending; // tag we are building up\nToken.Doctype doctypePending; // doctype building up\nToken.Comment commentPending; // comment building up\nprivate Token.StartTag lastStartTag; // the last start tag emitted, to test appropriate end tag\nprivate boolean selfClosingFlagAcknowledged = true;",
        "begin_line": 28,
        "end_line": 35,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_START_LINE_31",
        "snippet": "int PROBE_START_LINE_31 = 31;\norg.jsoup.parser.CharacterReader p_reader_622_line_31 = reader;",
        "begin_line": 38,
        "end_line": 39,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_END_LINE_31",
        "snippet": "int PROBE_END_LINE_31 = 31;\nthis.reader = p_reader_622_line_31;",
        "begin_line": 40,
        "end_line": 41,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_START_LINE_32",
        "snippet": "int PROBE_START_LINE_32 = 32;\norg.jsoup.parser.ParseErrorList p_errors_623_line_32 = errors;",
        "begin_line": 42,
        "end_line": 43,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_END_LINE_32",
        "snippet": "int PROBE_END_LINE_32 = 32;\nthis.errors = p_errors_623_line_32;",
        "begin_line": 44,
        "end_line": 45,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_START_LINE_36",
        "snippet": "int PROBE_START_LINE_36 = 39;\nboolean f_self_closing_flag_acknowledged_621_line_36 = selfClosingFlagAcknowledged;",
        "begin_line": 49,
        "end_line": 50,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "boolean tokeniser1_expr6_line_36",
        "snippet": "boolean tokeniser1_expr6_line_36 = !f_self_closing_flag_acknowledged_621_line_36;\nint PROBE_END_LINE_36 = 39;",
        "begin_line": 51,
        "end_line": 52,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_START_LINE_41",
        "snippet": "int PROBE_START_LINE_41 = 42;\nboolean f_is_emit_pending_619_line_41 = isEmitPending;",
        "begin_line": 58,
        "end_line": 59,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "boolean tokeniser1_expr10_line_41",
        "snippet": "boolean tokeniser1_expr10_line_41 = !f_is_emit_pending_619_line_41;\nint PROBE_END_LINE_41 = 42;",
        "begin_line": 60,
        "end_line": 61,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_START_LINE_42",
        "snippet": "int PROBE_START_LINE_42 = 42;\norg.jsoup.parser.TokeniserState f_state_618_line_42 = state;",
        "begin_line": 63,
        "end_line": 64,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_END_LINE_42",
        "snippet": "int PROBE_END_LINE_42 = 42;\nf_state_618_line_42.read(this, f_reader_624_line_42);",
        "begin_line": 66,
        "end_line": 67,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_START_LINE_43",
        "snippet": "int PROBE_START_LINE_43 = 43;\nf_is_emit_pending_619_line_41 = isEmitPending;",
        "begin_line": 68,
        "end_line": 69,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_END_LINE_43",
        "snippet": "int PROBE_END_LINE_43 = 43;\n}\n\nint PROBE_START_LINE_45 = 52;",
        "begin_line": 71,
        "end_line": 74,
        "comment": "\n * Readers the input stream into tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_END_LINE_51",
        "snippet": "int PROBE_END_LINE_51 = 51;\nreturn f_emit_pending_626_line_51;",
        "begin_line": 88,
        "end_line": 89,
        "comment": "\t\t if emit is pending, a non-character token was found: return any chars in buffer, and leave token for next read:"
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_START_LINE_56",
        "snippet": "int PROBE_START_LINE_56 = 56;\nboolean f_is_emit_pending_619_line_56 = isEmitPending;",
        "begin_line": 94,
        "end_line": 95,
        "comment": "\t\t if emit is pending, a non-character token was found: return any chars in buffer, and leave token for next read:"
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_END_LINE_56",
        "snippet": "int PROBE_END_LINE_56 = 56;\nValidate.isFalse(f_is_emit_pending_619_line_56, \"There is an unread token pending!\");",
        "begin_line": 96,
        "end_line": 97,
        "comment": "\t\t if emit is pending, a non-character token was found: return any chars in buffer, and leave token for next read:"
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_END_LINE_92",
        "snippet": "int PROBE_END_LINE_92 = 92;\nf_reader_624_line_92.advance();",
        "begin_line": 165,
        "end_line": 166,
        "comment": "         does not set isEmitPending; read checks that"
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int PROBE_END_LINE_93",
        "snippet": "int PROBE_END_LINE_93 = 93;\nthis.state = p_state_634_line_93;",
        "begin_line": 169,
        "end_line": 170,
        "comment": "         does not set isEmitPending; read checks that"
    },
    {
        "class_name": "org.jsoup.parser.Tokeniser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tokeniser.java",
        "signature": "int charval",
        "snippet": "int charval = -1;\ntry {\nint base = isHexMode ? 16 : 10;",
        "begin_line": 196,
        "end_line": 198,
        "comment": "         does not set isEmitPending; read checks that"
    },
    {
        "class_name": "org.jsoup.parser.ParseErrorList",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/ParseErrorList.java",
        "signature": "int PROBE_START_LINE_16",
        "snippet": "int PROBE_START_LINE_16 = 16;\nint p_max_size_541_line_16 = maxSize;",
        "begin_line": 16,
        "end_line": 17,
        "comment": "\n * A container for ParseErrors.\n * \n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.ParseErrorList",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/ParseErrorList.java",
        "signature": "int PROBE_END_LINE_20",
        "snippet": "int PROBE_END_LINE_20 = 20;\nreturn parse_error_list1_expr3_line_20;",
        "begin_line": 27,
        "end_line": 28,
        "comment": "\n * A container for ParseErrors.\n * \n * @author Jonathan Hedley\n "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tag.java",
        "signature": "private boolean isBlock",
        "snippet": "private boolean isBlock = true; // block or inline\nprivate boolean formatAsBlock = true; // should be formatted as a block\nprivate boolean canContainBlock = true; // Can this tag hold block level tags?\nprivate boolean canContainInline = true; // only pcdata if not\nprivate boolean empty = false; // can hold nothing; e.g. img\nprivate boolean selfClosing = false; // can self close (<foo />). used for unknown tags that self close, without forcing them as empty.\nprivate boolean preserveWhitespace = false; // for pre, textarea, script etc\n\nprivate Tag(String tagName) {\nint PROBE_START_LINE_26 = 26;",
        "begin_line": 17,
        "end_line": 26,
        "comment": "\n * HTML Tag capabilities.\n *\n * @author Jonathan Hedley, jonathan@hedley.net\n "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tag.java",
        "signature": "String p_tag_name_573_line_26",
        "snippet": "String p_tag_name_573_line_26 = tagName;\nString tag1_expr10_line_26 = p_tag_name_573_line_26.toLowerCase();",
        "begin_line": 27,
        "end_line": 28,
        "comment": "\n * HTML Tag capabilities.\n *\n * @author Jonathan Hedley, jonathan@hedley.net\n "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_47",
        "snippet": "int PROBE_START_LINE_47 = 47;\nString p_tag_name_575_line_47 = tagName;",
        "begin_line": 54,
        "end_line": 55,
        "comment": "    \n     * Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     * <p/>\n     * Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     *\n     * @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     * @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_END_LINE_47",
        "snippet": "int PROBE_END_LINE_47 = 47;\nValidate.notNull(p_tag_name_575_line_47);",
        "begin_line": 56,
        "end_line": 57,
        "comment": "    \n     * Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     * <p/>\n     * Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     *\n     * @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     * @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tag.java",
        "signature": "int PROBE_START_LINE_48",
        "snippet": "int PROBE_START_LINE_48 = 48;\nString p_tag_name_575_line_48 = tagName;",
        "begin_line": 58,
        "end_line": 59,
        "comment": "    \n     * Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything.\n     * <p/>\n     * Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals().\n     *\n     * @param tagName Name of tag, e.g. \"p\". Case insensitive.\n     * @return The tag, either defined or new generic.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Tag",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Tag.java",
        "signature": "int result",
        "snippet": "int result = tagName.hashCode();\nresult = 31 * result + (isBlock ? 1 : 0);",
        "begin_line": 221,
        "end_line": 222,
        "comment": "    \n     * Get if this tag should preserve whitespace within child text nodes.\n     *\n     * @return if preserve whitepace\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Parser.java",
        "signature": "TreeBuilder treeBuilder",
        "snippet": "TreeBuilder treeBuilder = new HtmlTreeBuilder();\nint PROBE_START_LINE_90 = 90;",
        "begin_line": 89,
        "end_line": 90,
        "comment": "    \n     * Parse HTML into a Document.\n     *\n     * @param html HTML to parse\n     * @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     *\n     * @return parsed Document\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Parser.java",
        "signature": "String p_base_uri_554_line_105",
        "snippet": "String p_base_uri_554_line_105 = baseUri;\norg.jsoup.parser.ParseErrorList parser1_expr6_line_105 = ParseErrorList.noTracking();",
        "begin_line": 117,
        "end_line": 118,
        "comment": "    \n     * Parse a fragment of HTML into a list of nodes. The context element, if supplied, supplies parsing context.\n     *\n     * @param fragmentHtml the fragment of HTML to parse\n     * @param context (optional) the element that this HTML fragment is being parsed for (i.e. for inner HTML). This\n     * provides stack context (for implicit element creation).\n     * @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     *\n     * @return list of nodes parsed from the input HTML. Note that the context element, if supplied, is not modified.\n     "
    },
    {
        "class_name": "org.jsoup.parser.Parser",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/Parser.java",
        "signature": "int PROBE_END_LINE_105",
        "snippet": "int PROBE_END_LINE_105 = 105;\nreturn parser1_expr5_line_105;",
        "begin_line": 121,
        "end_line": 122,
        "comment": "    \n     * Parse a fragment of HTML into a list of nodes. The context element, if supplied, supplies parsing context.\n     *\n     * @param fragmentHtml the fragment of HTML to parse\n     * @param context (optional) the element that this HTML fragment is being parsed for (i.e. for inner HTML). This\n     * provides stack context (for implicit element creation).\n     * @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs.\n     *\n     * @return list of nodes parsed from the input HTML. Note that the context element, if supplied, is not modified.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_32",
        "snippet": "int PROBE_START_LINE_32 = 32;\nString p_base_uri_241_line_32 = baseUri;",
        "begin_line": 32,
        "end_line": 33,
        "comment": "    \n     Create a new Node.\n     @param baseUri base URI\n     @param attributes attributes (not null, but may be empty)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_32",
        "snippet": "int PROBE_END_LINE_32 = 32;\nValidate.notNull(p_base_uri_241_line_32);",
        "begin_line": 34,
        "end_line": 35,
        "comment": "    \n     Create a new Node.\n     @param baseUri base URI\n     @param attributes attributes (not null, but may be empty)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_33",
        "snippet": "int PROBE_START_LINE_33 = 33;\norg.jsoup.nodes.Attributes p_attributes_242_line_33 = attributes;",
        "begin_line": 36,
        "end_line": 37,
        "comment": "    \n     Create a new Node.\n     @param baseUri base URI\n     @param attributes attributes (not null, but may be empty)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_33",
        "snippet": "int PROBE_END_LINE_33 = 33;\nValidate.notNull(p_attributes_242_line_33);",
        "begin_line": 38,
        "end_line": 39,
        "comment": "    \n     Create a new Node.\n     @param baseUri base URI\n     @param attributes attributes (not null, but may be empty)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "int index",
        "snippet": "int index = siblingIndex;\nNode firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;",
        "begin_line": 384,
        "end_line": 385,
        "comment": "    \n     * Removes this node from the DOM, and moves its children up into the node's parent. This has the effect of dropping\n     * the node but keeping its children.\n     * <p/>\n     * For example, with the input html:<br/>\n     * {@code <div>One <span>Two <b>Three</b></span></div>}<br/>\n     * Calling {@code element.unwrap()} on the {@code span} element will result in the html:<br/>\n     * {@code <div>One Two <b>Three</b></div>}<br/>\n     * and the {@code \"Two \"} {@link TextNode} being returned.\n     * @return the first child of this node, after the node has been unwrapped. Null if the node had no children.\n     * @see #remove()\n     * @see #wrap(String)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_383",
        "snippet": "int PROBE_START_LINE_383 = 384;\norg.jsoup.nodes.Node node1_expr14_line_383 = this.parentNode;",
        "begin_line": 411,
        "end_line": 412,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "boolean node1_expr13_line_383",
        "snippet": "boolean node1_expr13_line_383 = node1_expr14_line_383 != null;\nint PROBE_END_LINE_383 = 384;",
        "begin_line": 413,
        "end_line": 414,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "Integer index",
        "snippet": "Integer index = out.siblingIndex();\nchildNodes.set(index, in);",
        "begin_line": 429,
        "end_line": 430,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_START_LINE_402",
        "snippet": "int PROBE_START_LINE_402 = 402;\norg.jsoup.nodes.Node p_out_271_line_402 = out;",
        "begin_line": 437,
        "end_line": 438,
        "comment": "    \n     * Replace this node in the DOM with the supplied node.\n     * @param in the node that will will replace the existing node.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Node",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Node.java",
        "signature": "int PROBE_END_LINE_430",
        "snippet": "int PROBE_END_LINE_430 = 430;\nf_parent_node_258_line_430.removeChild(child);",
        "begin_line": 502,
        "end_line": 503,
        "comment": "\t\tmost used. short circuit addChildren(int), which hits reindex children and array copy"
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "int PROBE_START_LINE_22",
        "snippet": "int PROBE_START_LINE_22 = 22;\nString p_key_71_line_22 = key;",
        "begin_line": 22,
        "end_line": 23,
        "comment": "    \n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key\n     * @param value attribute value\n     * @see #createFromEncoded\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "int PROBE_END_LINE_22",
        "snippet": "int PROBE_END_LINE_22 = 22;\nValidate.notEmpty(p_key_71_line_22);",
        "begin_line": 24,
        "end_line": 25,
        "comment": "    \n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key\n     * @param value attribute value\n     * @see #createFromEncoded\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "int PROBE_START_LINE_23",
        "snippet": "int PROBE_START_LINE_23 = 23;\nString p_value_72_line_23 = value;",
        "begin_line": 26,
        "end_line": 27,
        "comment": "    \n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key\n     * @param value attribute value\n     * @see #createFromEncoded\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Attribute",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Attribute.java",
        "signature": "String attribute1_expr5_line_24",
        "snippet": "String attribute1_expr5_line_24 = p_key_71_line_24.trim();\nString attribute1_expr4_line_24 = attribute1_expr5_line_24.toLowerCase();",
        "begin_line": 32,
        "end_line": 33,
        "comment": "    \n     * Create a new attribute from unencoded (raw) key and value.\n     * @param key attribute key\n     * @param value attribute value\n     * @see #createFromEncoded\n     "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_16",
        "snippet": "int PROBE_START_LINE_16 = 33;\norg.jsoup.parser.Token p_t_429_line_16 = t;",
        "begin_line": 18,
        "end_line": 19,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "boolean html_tree_builder_state1_expr1_line_16",
        "snippet": "boolean html_tree_builder_state1_expr1_line_16 = isWhitespace(p_t_429_line_16);\nint PROBE_END_LINE_16 = 33;",
        "begin_line": 20,
        "end_line": 21,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_42",
        "snippet": "int PROBE_START_LINE_42 = 56;\norg.jsoup.parser.Token p_t_432_line_42 = t;",
        "begin_line": 57,
        "end_line": 58,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "boolean html_tree_builder_state1_expr19_line_68",
        "snippet": "boolean html_tree_builder_state1_expr19_line_68 = isWhitespace(p_t_437_line_68);\nint PROBE_END_LINE_68 = 90;",
        "begin_line": 90,
        "end_line": 91,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_70",
        "snippet": "int PROBE_START_LINE_70 = 90;\norg.jsoup.parser.Token p_t_437_line_70 = t;",
        "begin_line": 95,
        "end_line": 96,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element head",
        "snippet": "Element head = tb.insert(t.asStartTag());\ntb.setHeadElement(head);",
        "begin_line": 107,
        "end_line": 108,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_96",
        "snippet": "int PROBE_START_LINE_96 = 99;\norg.jsoup.parser.Token p_t_441_line_96 = t;",
        "begin_line": 126,
        "end_line": 127,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "boolean html_tree_builder_state1_expr49_line_96",
        "snippet": "boolean html_tree_builder_state1_expr49_line_96 = isWhitespace(p_t_441_line_96);\nint PROBE_END_LINE_96 = 99;",
        "begin_line": 128,
        "end_line": 129,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_108",
        "snippet": "int PROBE_START_LINE_108 = 108;\norg.jsoup.parser.Token p_t_441_line_108 = t;",
        "begin_line": 146,
        "end_line": 147,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "String v_name_445_line_110",
        "snippet": "String v_name_445_line_110 = name;\nboolean html_tree_builder_state1_expr52_line_110 = v_name_445_line_110.equals(\"html\");",
        "begin_line": 157,
        "end_line": 158,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_END_LINE_112",
        "snippet": "int PROBE_END_LINE_112 = 139;\nif (html_tree_builder_state1_expr54_line_112) {\nElement el = tb.insertEmpty(start);",
        "begin_line": 167,
        "end_line": 169,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element meta",
        "snippet": "Element meta = tb.insertEmpty(start);\n} else if (name.equals(\"title\")) {\nhandleRcData(start, tb);",
        "begin_line": 173,
        "end_line": 175,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_142",
        "snippet": "int PROBE_START_LINE_142 = 142;\norg.jsoup.parser.Token p_t_441_line_142 = t;",
        "begin_line": 195,
        "end_line": 196,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_END_LINE_142",
        "snippet": "int PROBE_END_LINE_142 = 142;\nToken.EndTag end = html_tree_builder_state1_expr77_line_142;",
        "begin_line": 198,
        "end_line": 199,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_143",
        "snippet": "int PROBE_START_LINE_143 = 143;\norg.jsoup.parser.Token.EndTag v_end_449_line_143 = end;",
        "begin_line": 200,
        "end_line": 201,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "String html_tree_builder_state1_expr78_line_143",
        "snippet": "String html_tree_builder_state1_expr78_line_143 = v_end_449_line_143.name();\nint PROBE_END_LINE_143 = 143;",
        "begin_line": 202,
        "end_line": 203,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_144",
        "snippet": "int PROBE_START_LINE_144 = 152;\nString v_name_445_line_144 = name;",
        "begin_line": 205,
        "end_line": 206,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "boolean html_tree_builder_state1_expr79_line_144",
        "snippet": "boolean html_tree_builder_state1_expr79_line_144 = v_name_445_line_144.equals(\"head\");\nint PROBE_END_LINE_144 = 152;",
        "begin_line": 207,
        "end_line": 208,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_145",
        "snippet": "int PROBE_START_LINE_145 = 145;\norg.jsoup.parser.HtmlTreeBuilder p_tb_442_line_145 = tb;",
        "begin_line": 210,
        "end_line": 211,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_END_LINE_145",
        "snippet": "int PROBE_END_LINE_145 = 145;\np_tb_442_line_145.pop();",
        "begin_line": 212,
        "end_line": 213,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_START_LINE_169",
        "snippet": "int PROBE_START_LINE_169 = 184;\norg.jsoup.parser.Token p_t_453_line_169 = t;",
        "begin_line": 246,
        "end_line": 247,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "String name",
        "snippet": "String name = startTag.name();\nif (name.equals(\"html\")) {\nreturn tb.process(t, InBody);",
        "begin_line": 304,
        "end_line": 306,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element head",
        "snippet": "Element head = tb.getHeadElement();\ntb.push(head);",
        "begin_line": 317,
        "end_line": 318,
        "comment": "\n * The Tree Builder's current state. Each state embodies the processing for the state, and transitions to other states.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "int PROBE_END_LINE_273",
        "snippet": "int PROBE_END_LINE_273 = 273;\nToken.StartTag startTag = html_tree_builder_state1_expr116_line_273;",
        "begin_line": 382,
        "end_line": 383,
        "comment": "                         todo confirm that check"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "String name",
        "snippet": "String name = html_tree_builder_state1_expr117_line_274;\nint PROBE_START_LINE_275 = 555;",
        "begin_line": 388,
        "end_line": 389,
        "comment": "                         todo confirm that check"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "LinkedList<Element> stack",
        "snippet": "LinkedList<Element> stack = tb.getStack();\nif (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals(\"body\"))) {\nreturn false;",
        "begin_line": 427,
        "end_line": 429,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element body",
        "snippet": "Element body = stack.get(1);\nfor (Attribute attribute : startTag.getAttributes()) {\nif (!body.hasAttr(attribute.getKey()))\nbody.attributes().put(attribute);",
        "begin_line": 432,
        "end_line": 435,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "LinkedList<Element> stack",
        "snippet": "LinkedList<Element> stack = tb.getStack();\nif (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals(\"body\"))) {\nreturn false;",
        "begin_line": 440,
        "end_line": 442,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element remainingA",
        "snippet": "Element remainingA = tb.getFromStack(\"a\");\nif (remainingA != null) {\ntb.removeFromActiveFormattingElements(remainingA);",
        "begin_line": 538,
        "end_line": 540,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element el",
        "snippet": "Element el = tb.insert(startTag);\ntb.pushActiveFormattingElements(el);",
        "begin_line": 550,
        "end_line": 551,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element el",
        "snippet": "Element el = tb.insert(startTag);\ntb.pushActiveFormattingElements(el);",
        "begin_line": 559,
        "end_line": 560,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element form",
        "snippet": "Element form = tb.getFormElement();\nform.attr(\"action\", startTag.attributes.get(\"action\"));",
        "begin_line": 600,
        "end_line": 601,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Attributes inputAttribs",
        "snippet": "Attributes inputAttribs = new Attributes();\nfor (Attribute attr : startTag.attributes) {\nif (!StringUtil.in(attr.getKey(), \"name\", \"action\", \"prompt\"))\ninputAttribs.put(attr);",
        "begin_line": 609,
        "end_line": 612,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "HtmlTreeBuilderState state",
        "snippet": "HtmlTreeBuilderState state = tb.state();\nif (state.equals(InTable) || state.equals(InCaption) || state.equals(InTableBody)\n|| state.equals(InRow) || state.equals(InCell))\ntb.transition(InSelectInTable);",
        "begin_line": 641,
        "end_line": 644,
        "comment": "\t\t\t\t\t\t merge attributes onto real html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element currentForm",
        "snippet": "Element currentForm = tb.getFormElement();\ntb.setFormElement(null);",
        "begin_line": 733,
        "end_line": 734,
        "comment": "                             todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "Element formatEl",
        "snippet": "Element formatEl = tb.getActiveFormattingElement(name);\nif (formatEl == null)\nreturn anyOtherEndTag(t, tb);",
        "begin_line": 790,
        "end_line": 792,
        "comment": "                             todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "boolean seenFormattingElement",
        "snippet": "boolean seenFormattingElement = false;\nLinkedList<Element> stack = tb.getStack();",
        "begin_line": 804,
        "end_line": 805,
        "comment": "                             todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "DescendableLinkedList<Element> html_tree_builder_state1_expr364_line_765",
        "snippet": "DescendableLinkedList<Element> html_tree_builder_state1_expr364_line_765 = p_tb_474_line_765.getStack();\nint PROBE_END_LINE_765 = 765;",
        "begin_line": 902,
        "end_line": 903,
        "comment": "                     stop parsing"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "boolean processed",
        "snippet": "boolean processed = tb.process(new Token.EndTag(\"tr\"));\nif (processed)\nreturn tb.process(t);",
        "begin_line": 1341,
        "end_line": 1343,
        "comment": "                 frag case"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "String name",
        "snippet": "String name = endTag.name();\n\nif (StringUtil.in(name, \"td\", \"th\")) {\nif (!tb.inTableScope(name)) {\ntb.error(this);",
        "begin_line": 1352,
        "end_line": 1356,
        "comment": "                 frag case"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilderState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilderState.java",
        "signature": "String name",
        "snippet": "String name = start.name();\nif (name.equals(\"html\"))\nreturn tb.process(start, InBody);",
        "begin_line": 1425,
        "end_line": 1427,
        "comment": "                 frag case"
    },
    {
        "class_name": "org.jsoup.safety.Cleaner",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Cleaner.java",
        "signature": "Document clean",
        "snippet": "Document clean = Document.createShell(dirtyDocument.baseUri());\nint numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());",
        "begin_line": 87,
        "end_line": 88,
        "comment": "    \n     Determines if the input document is valid, against the whitelist. It is considered valid if all the tags and attributes\n     in the input HTML are allowed by the whitelist.\n     <p/>\n     This method can be used as a validator for user input forms. An invalid document will still be cleaned successfully\n     using the {@link #clean(Document)} document. If using as a validator, it is recommended to still clean the document\n     to ensure enforced attributes are set correctly, and that the output is tidied.\n     @param dirtyDocument document to test\n     @return true if no tags or attributes need to be removed; false if they do\n     "
    },
    {
        "class_name": "org.jsoup.safety.Cleaner",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/safety/Cleaner.java",
        "signature": "return numDiscarded",
        "snippet": "return numDiscarded == 0;\n}\n\n/**\nIterates the input and copies trusted nodes (tags, attributes, text) into the destination.\n@param source source of HTML\n@param dest destination element to copy into\n@return number of discarded elements (that were considered unsafe)\n*/\nprivate int copySafeNodes(Element source, Element dest) {\nint PROBE_START_LINE_73 = 73;",
        "begin_line": 89,
        "end_line": 99,
        "comment": "    \n     Determines if the input document is valid, against the whitelist. It is considered valid if all the tags and attributes\n     in the input HTML are allowed by the whitelist.\n     <p/>\n     This method can be used as a validator for user input forms. An invalid document will still be cleaned successfully\n     using the {@link #clean(Document)} document. If using as a validator, it is recommended to still clean the document\n     to ensure enforced attributes are set correctly, and that the output is tidied.\n     @param dirtyDocument document to test\n     @return true if no tags or attributes need to be removed; false if they do\n     "
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "private int pos",
        "snippet": "private int pos = 0;\nprivate int mark = 0;",
        "begin_line": 15,
        "end_line": 16,
        "comment": "\n CharacterReader consumes tokens off a string. To replace the old TokenQueue.\n "
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "int PROBE_START_LINE_19",
        "snippet": "int PROBE_START_LINE_19 = 19;\nString p_input_302_line_19 = input;",
        "begin_line": 19,
        "end_line": 20,
        "comment": "\n CharacterReader consumes tokens off a string. To replace the old TokenQueue.\n "
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "int PROBE_END_LINE_19",
        "snippet": "int PROBE_END_LINE_19 = 19;\nValidate.notNull(p_input_302_line_19);",
        "begin_line": 21,
        "end_line": 22,
        "comment": "\n CharacterReader consumes tokens off a string. To replace the old TokenQueue.\n "
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "int PROBE_START_LINE_21",
        "snippet": "int PROBE_START_LINE_21 = 21;\nchar[] character_reader1_expr8_line_21 = this.input;",
        "begin_line": 28,
        "end_line": 29,
        "comment": "\n CharacterReader consumes tokens off a string. To replace the old TokenQueue.\n "
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "int f_length_304_line_29",
        "snippet": "int f_length_304_line_29 = length;\nboolean character_reader1_expr9_line_29 = f_pos_300_line_29 >= f_length_304_line_29;",
        "begin_line": 42,
        "end_line": 43,
        "comment": "\n CharacterReader consumes tokens off a string. To replace the old TokenQueue.\n "
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "int PROBE_END_LINE_29",
        "snippet": "int PROBE_END_LINE_29 = 29;\nreturn character_reader1_expr9_line_29;",
        "begin_line": 44,
        "end_line": 45,
        "comment": "\n CharacterReader consumes tokens off a string. To replace the old TokenQueue.\n "
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "char startChar",
        "snippet": "char startChar = seq.charAt(0);\nfor (int offset = pos; offset < length; offset++) {\n// scan to first instance of startchar:\nif (startChar != input[offset])\nwhile(++offset < length && startChar != input[offset]);",
        "begin_line": 133,
        "end_line": 137,
        "comment": "         doesn't handle scanning for surrogates"
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "int offset",
        "snippet": "int offset = nextIndexOf(c);\nif (offset != -1) {\nString consumed = new String(input, pos, offset);",
        "begin_line": 150,
        "end_line": 152,
        "comment": "             scan to first instance of startchar:"
    },
    {
        "class_name": "org.jsoup.parser.CharacterReader",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/CharacterReader.java",
        "signature": "boolean character_reader1_expr32_line_146",
        "snippet": "boolean character_reader1_expr32_line_146 = true;\nif (character_reader1_expr31_line_146) {\ncharacter_reader1_expr32_line_146 = c <= 'Z';",
        "begin_line": 240,
        "end_line": 242,
        "comment": "             scan to first instance of startchar:"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "private OutputSettings outputSettings",
        "snippet": "private OutputSettings outputSettings = new OutputSettings();\nint PROBE_START_LINE_18 = 18;",
        "begin_line": 17,
        "end_line": 18,
        "comment": "\n A HTML Document.\n\n @author Jonathan Hedley, jonathan@hedley.net "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_START_LINE_36",
        "snippet": "int PROBE_START_LINE_36 = 36;\nString p_base_uri_100_line_36 = baseUri;",
        "begin_line": 42,
        "end_line": 43,
        "comment": "    \n     Create a valid, empty shell of a document, suitable for adding more elements to.\n     @param baseUri baseUri of document\n     @return document with html, head, and body elements.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_END_LINE_40",
        "snippet": "int PROBE_END_LINE_40 = 40;\nv_html_102_line_40.appendElement(\"head\");",
        "begin_line": 58,
        "end_line": 59,
        "comment": "    \n     Create a valid, empty shell of a document, suitable for adding more elements to.\n     @param baseUri baseUri of document\n     @return document with html, head, and body elements.\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "Elements elements",
        "snippet": "Elements elements = this.getElementsByTag(tag);\nElement master = elements.first(); // will always be available as created above if not existent\nif (elements.size() > 1) { // dupes, move contents to master\nList<Node> toMove = new ArrayList<Node>();",
        "begin_line": 170,
        "end_line": 173,
        "comment": "     merge multiple <head> or <body> contents into one, delete the remainder, and ensure they are owned by <html>"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "String document1_expr17_line_164",
        "snippet": "String document1_expr17_line_164 = p_node_109_line_164.nodeName();\nString p_tag_108_line_164 = tag;",
        "begin_line": 194,
        "end_line": 195,
        "comment": "     fast method to get first by tag name, used for html, head, body finders"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "int PROBE_END_LINE_167",
        "snippet": "int PROBE_END_LINE_167 = 171;\nfor (Node child: f_child_nodes_111_line_167) {\nint PROBE_START_LINE_168 = 168;",
        "begin_line": 207,
        "end_line": 209,
        "comment": "     fast method to get first by tag name, used for html, head, body finders"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "String p_tag_108_line_168",
        "snippet": "String p_tag_108_line_168 = tag;\norg.jsoup.nodes.Node v_child_110_line_168 = child;",
        "begin_line": 210,
        "end_line": 211,
        "comment": "     fast method to get first by tag name, used for html, head, body finders"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "Element document1_expr19_line_168",
        "snippet": "Element document1_expr19_line_168 = findFirstElementByTagName(p_tag_108_line_168, v_child_110_line_168);\nint PROBE_END_LINE_168 = 168;",
        "begin_line": 212,
        "end_line": 213,
        "comment": "     fast method to get first by tag name, used for html, head, body finders"
    },
    {
        "class_name": "org.jsoup.nodes.Document",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Document.java",
        "signature": "Element found",
        "snippet": "Element found = document1_expr19_line_168;\nint PROBE_START_LINE_169 = 170;",
        "begin_line": 214,
        "end_line": 215,
        "comment": "     fast method to get first by tag name, used for html, head, body finders"
    },
    {
        "class_name": "org.jsoup.nodes.Element",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Element.java",
        "signature": "int PROBE_START_LINE_40",
        "snippet": "int PROBE_START_LINE_40 = 40;\norg.jsoup.parser.Tag p_tag_127_line_40 = tag;",
        "begin_line": 41,
        "end_line": 42,
        "comment": "    \n     * Create a new, standalone Element. (Standalone in that is has no parent.)\n     * \n     * @param tag tag of this element\n     * @param baseUri the base URI\n     * @param attributes initial attributes\n     * @see #appendChild(Node)\n     * @see #appendElement(String)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Element",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Element.java",
        "signature": "String element1_expr6_line_58",
        "snippet": "String element1_expr6_line_58 = f_tag_130_line_58.getName();\nint PROBE_END_LINE_58 = 58;",
        "begin_line": 67,
        "end_line": 68,
        "comment": "    \n     * Create a new Element from a tag and a base URI.\n     * \n     * @param tag element tag\n     * @param baseUri the base URI of this element. It is acceptable for the base URI to be an empty\n     *            string, but not null.\n     * @see Tag#valueOf(String)\n     "
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "String num",
        "snippet": "String num = m.group(3);\nif (num != null) {\ntry {\nint base = m.group(2) != null ? 16 : 10; // 2 is hex indicator\ncharval = Integer.valueOf(num, base);",
        "begin_line": 125,
        "end_line": 129,
        "comment": "         todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "String c",
        "snippet": "String c = Character.toString((char) charval);\nm.appendReplacement(accum, Matcher.quoteReplacement(c));",
        "begin_line": 139,
        "end_line": 140,
        "comment": "         todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_START_LINE_139",
        "snippet": "int PROBE_START_LINE_139 = 139;\nMap<String, Character> entities1_expr9_line_139 = loadEntities(\"entities-base.properties\");",
        "begin_line": 160,
        "end_line": 161,
        "comment": "     xhtml has restricted entities"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_END_LINE_139",
        "snippet": "int PROBE_END_LINE_139 = 139;\nbaseByVal = entities1_expr8_line_139; // most common / default\nint PROBE_START_LINE_140 = 140;",
        "begin_line": 163,
        "end_line": 165,
        "comment": "     xhtml has restricted entities"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_END_LINE_140",
        "snippet": "int PROBE_END_LINE_140 = 140;\nfull = entities1_expr11_line_140; // extended and overblown.\nint PROBE_START_LINE_141 = 141;",
        "begin_line": 167,
        "end_line": 169,
        "comment": "     xhtml has restricted entities"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_END_LINE_141",
        "snippet": "int PROBE_END_LINE_141 = 141;\nfullByVal = entities1_expr13_line_141;",
        "begin_line": 172,
        "end_line": 173,
        "comment": "     xhtml has restricted entities"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_START_LINE_143",
        "snippet": "int PROBE_START_LINE_143 = 146;\nObject[][] f_xhtml_array_222_line_143 = xhtmlArray;",
        "begin_line": 175,
        "end_line": 176,
        "comment": "     xhtml has restricted entities"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "int PROBE_END_LINE_143",
        "snippet": "int PROBE_END_LINE_143 = 146;\nfor (Object[] entity : f_xhtml_array_222_line_143) {\nint PROBE_START_LINE_144 = 144;",
        "begin_line": 177,
        "end_line": 179,
        "comment": "     xhtml has restricted entities"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "Object[] v_entity_227_line_144",
        "snippet": "Object[] v_entity_227_line_144 = entity;\nObject entities1_expr19_line_144 = v_entity_227_line_144[1];",
        "begin_line": 180,
        "end_line": 181,
        "comment": "     xhtml has restricted entities"
    },
    {
        "class_name": "org.jsoup.nodes.Entities",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/nodes/Entities.java",
        "signature": "Integer entities1_expr17_line_144",
        "snippet": "Integer entities1_expr17_line_144 = ((Integer) entities1_expr19_line_144);\nint entities1_expr16_line_144 = entities1_expr17_line_144.intValue();",
        "begin_line": 182,
        "end_line": 183,
        "comment": "     xhtml has restricted entities"
    },
    {
        "class_name": "org.jsoup.helper.StringUtil",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/StringUtil.java",
        "signature": "int PROBE_START_LINE_134",
        "snippet": "int PROBE_START_LINE_134 = 137;\nString[] p_haystack_53_line_134 = haystack;",
        "begin_line": 134,
        "end_line": 135,
        "comment": "    \n     * Tests if a code point is \"whitespace\" as defined in the HTML spec.\n     * @param c code point to test\n     * @return true if code point is whitespace, false otherwise\n     "
    },
    {
        "class_name": "org.jsoup.helper.StringUtil",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/helper/StringUtil.java",
        "signature": "int PROBE_END_LINE_134",
        "snippet": "int PROBE_END_LINE_134 = 137;\nfor (String hay : p_haystack_53_line_134) {\nint PROBE_START_LINE_135 = 136;",
        "begin_line": 136,
        "end_line": 138,
        "comment": "    \n     * Tests if a code point is \"whitespace\" as defined in the HTML spec.\n     * @param c code point to test\n     * @return true if code point is whitespace, false otherwise\n     "
    },
    {
        "class_name": "org.jsoup.Jsoup",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/Jsoup.java",
        "signature": "int PROBE_START_LINE_58",
        "snippet": "int PROBE_START_LINE_58 = 58;\nString p_html_6_line_58 = html;",
        "begin_line": 58,
        "end_line": 59,
        "comment": "    \n     Parse HTML into a Document. As no base URI is specified, absolute URL detection relies on the HTML including a\n     {@code <base href>} tag.\n\n     @param html HTML to parse\n     @return sane HTML\n\n     @see #parse(String, String)\n     "
    },
    {
        "class_name": "org.jsoup.Jsoup",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/Jsoup.java",
        "signature": "int PROBE_START_LINE_196",
        "snippet": "int PROBE_START_LINE_196 = 196;\norg.jsoup.safety.Whitelist p_whitelist_27_line_196 = whitelist;",
        "begin_line": 211,
        "end_line": 212,
        "comment": "    \n     Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a white-list of permitted\n     tags and attributes.\n\n     @param bodyHtml  input untrusted HTML (body fragment)\n     @param baseUri   URL to resolve relative URLs against\n     @param whitelist white-list of permitted HTML elements\n     @return safe HTML (body fragment)\n\n     @see Cleaner#clean(Document)\n     "
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_10",
        "snippet": "int PROBE_START_LINE_10 = 28;\norg.jsoup.parser.CharacterReader p_r_645_line_10 = r;",
        "begin_line": 10,
        "end_line": 11,
        "comment": "         in data state, gather characters until a character reference or tag is found"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_END_LINE_15",
        "snippet": "int PROBE_END_LINE_15 = 15;\np_t_644_line_15.advanceTransition(f_tag_open_646_line_15);",
        "begin_line": 22,
        "end_line": 23,
        "comment": "         in data state, gather characters until a character reference or tag is found"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_22",
        "snippet": "int PROBE_START_LINE_22 = 22;\norg.jsoup.parser.Tokeniser p_t_644_line_22 = t;",
        "begin_line": 30,
        "end_line": 31,
        "comment": "         in data state, gather characters until a character reference or tag is found"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "String data",
        "snippet": "String data = r.consumeToAny('<', nullChar);\nt.emit(data);",
        "begin_line": 103,
        "end_line": 104,
        "comment": "        / handles data in title, textarea etc"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_102",
        "snippet": "int PROBE_START_LINE_102 = 102;\norg.jsoup.parser.Tokeniser p_t_655_line_102 = t;",
        "begin_line": 117,
        "end_line": 118,
        "comment": "        / handles data in title, textarea etc"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "String data",
        "snippet": "String data = r.consumeTo(nullChar);\nt.emit(data);",
        "begin_line": 150,
        "end_line": 151,
        "comment": "        / handles data in title, textarea etc"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char tokeniser_state1_expr7_line_140",
        "snippet": "char tokeniser_state1_expr7_line_140 = p_r_661_line_140.current();\nint PROBE_END_LINE_140 = 160;",
        "begin_line": 161,
        "end_line": 162,
        "comment": "         from < in data"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_145",
        "snippet": "int PROBE_START_LINE_145 = 145;\norg.jsoup.parser.Tokeniser p_t_660_line_145 = t;",
        "begin_line": 168,
        "end_line": 169,
        "comment": "         from < in data"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_END_LINE_145",
        "snippet": "int PROBE_END_LINE_145 = 145;\np_t_660_line_145.advanceTransition(f_end_tag_open_662_line_145);",
        "begin_line": 171,
        "end_line": 172,
        "comment": "         from < in data"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_151",
        "snippet": "int PROBE_START_LINE_151 = 158;\norg.jsoup.parser.CharacterReader p_r_661_line_151 = r;",
        "begin_line": 178,
        "end_line": 179,
        "comment": "         from < in data"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "boolean tokeniser_state1_expr9_line_151",
        "snippet": "boolean tokeniser_state1_expr9_line_151 = p_r_661_line_151.matchesLetter();\nint PROBE_END_LINE_151 = 158;",
        "begin_line": 180,
        "end_line": 181,
        "comment": "         from < in data"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_END_LINE_152",
        "snippet": "int PROBE_END_LINE_152 = 152;\np_t_660_line_152.createTagPending(true);",
        "begin_line": 185,
        "end_line": 186,
        "comment": "         from < in data"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_153",
        "snippet": "int PROBE_START_LINE_153 = 153;\norg.jsoup.parser.Tokeniser p_t_660_line_153 = t;",
        "begin_line": 187,
        "end_line": 188,
        "comment": "         from < in data"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_169",
        "snippet": "int PROBE_START_LINE_169 = 178;\norg.jsoup.parser.CharacterReader p_r_665_line_169 = r;",
        "begin_line": 212,
        "end_line": 213,
        "comment": "         from < in data"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_185",
        "snippet": "int PROBE_START_LINE_185 = 185;\norg.jsoup.parser.CharacterReader p_r_667_line_185 = r;",
        "begin_line": 232,
        "end_line": 233,
        "comment": "         from < or </ in data, will have start or end tag pending"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "String v_tag_name_668_line_186",
        "snippet": "String v_tag_name_668_line_186 = tagName;\nint PROBE_END_LINE_186 = 186;",
        "begin_line": 244,
        "end_line": 245,
        "comment": "\t\t\t previous TagOpen state did NOT consume, will have a letter char in current"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "String name",
        "snippet": "String name = r.consumeLetterSequence();\nt.tagPending.appendTagName(name.toLowerCase());",
        "begin_line": 390,
        "end_line": 391,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '\\t':\ncase '\\n':\ncase '\\r':\ncase '\\f':\ncase ' ':\nt.transition(BeforeAttributeName);",
        "begin_line": 397,
        "end_line": 404,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char tokeniser_state1_expr32_line_353",
        "snippet": "char tokeniser_state1_expr32_line_353 = p_r_688_line_353.consume();\nint PROBE_END_LINE_353 = 366;",
        "begin_line": 430,
        "end_line": 431,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_END_LINE_356",
        "snippet": "int PROBE_END_LINE_356 = 356;\np_t_687_line_356.transition(f_script_data_end_tag_open_689_line_356);",
        "begin_line": 441,
        "end_line": 442,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_END_LINE_385",
        "snippet": "int PROBE_END_LINE_385 = 385;\nf_tag_pending_638_line_385.appendTagName(tokeniser_state1_expr42_line_385);",
        "begin_line": 495,
        "end_line": 496,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_405",
        "snippet": "int PROBE_START_LINE_405 = 405;\norg.jsoup.parser.Tokeniser p_t_693_line_405 = t;",
        "begin_line": 543,
        "end_line": 544,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '\\t':\ncase '\\n':\ncase '\\r':\ncase '\\f':\ncase ' ':\nt.transition(BeforeAttributeName);",
        "begin_line": 708,
        "end_line": 715,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '\\t':\ncase '\\n':\ncase '\\r':\ncase '\\f':\ncase ' ':\ncase '/':\ncase '>':\nif (t.dataBuffer.toString().equals(\"script\"))\nt.transition(ScriptDataDoubleEscaped);",
        "begin_line": 748,
        "end_line": 758,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "String data",
        "snippet": "String data = r.consumeToAny('-', '<', nullChar);\nt.emit(data);",
        "begin_line": 791,
        "end_line": 792,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '-':\nt.emit(c);",
        "begin_line": 798,
        "end_line": 801,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '\\t':\ncase '\\n':\ncase '\\r':\ncase '\\f':\ncase ' ':\ncase '/':\ncase '>':\nif (t.dataBuffer.toString().equals(\"script\"))\nt.transition(ScriptDataEscaped);",
        "begin_line": 873,
        "end_line": 883,
        "comment": "                 consuming to EOF; break out here"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_885",
        "snippet": "int PROBE_START_LINE_885 = 885;\norg.jsoup.parser.CharacterReader p_r_742_line_885 = r;",
        "begin_line": 1072,
        "end_line": 1073,
        "comment": "                     ignore"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char tokeniser_state1_expr72_line_885",
        "snippet": "char tokeniser_state1_expr72_line_885 = p_r_742_line_885.consume();\nint PROBE_END_LINE_885 = 885;",
        "begin_line": 1074,
        "end_line": 1075,
        "comment": "                     ignore"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = tokeniser_state1_expr72_line_885;\nint PROBE_START_LINE_886 = 928;",
        "begin_line": 1076,
        "end_line": 1077,
        "comment": "                     ignore"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "String v_value_747_line_935",
        "snippet": "String v_value_747_line_935 = value;\nint PROBE_END_LINE_935 = 935;",
        "begin_line": 1146,
        "end_line": 1147,
        "comment": "                     ignore"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "String value",
        "snippet": "String value = r.consumeToAny('\\t', '\\n', '\\r', '\\f', ' ', '&', '>', nullChar, '\"', '\\'', '<', '=', '`');\nif (value.length() > 0)\nt.tagPending.appendAttributeValue(value);",
        "begin_line": 1218,
        "end_line": 1220,
        "comment": "                 no default, handled in consume to any above"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "int PROBE_START_LINE_1048",
        "snippet": "int PROBE_START_LINE_1048 = 1048;\norg.jsoup.parser.Tokeniser p_t_754_line_1048 = t;",
        "begin_line": 1280,
        "end_line": 1281,
        "comment": "     CharacterReferenceInAttributeValue state handled inline"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '-':\nt.transition(CommentStartDash);",
        "begin_line": 1370,
        "end_line": 1373,
        "comment": "                } else if (!t.currentNodeInHtmlNS() && r.matchConsume(\"[CDATA[\")) {"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '-':\nt.transition(CommentStartDash);",
        "begin_line": 1398,
        "end_line": 1401,
        "comment": "                } else if (!t.currentNodeInHtmlNS() && r.matchConsume(\"[CDATA[\")) {"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '-':\nt.commentPending.data.append(\"--!\");",
        "begin_line": 1504,
        "end_line": 1507,
        "comment": "                } else if (!t.currentNodeInHtmlNS() && r.matchConsume(\"[CDATA[\")) {"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '\\t':\ncase '\\n':\ncase '\\r':\ncase '\\f':\ncase ' ':\nt.transition(BeforeDoctypeName);",
        "begin_line": 1532,
        "end_line": 1539,
        "comment": "                } else if (!t.currentNodeInHtmlNS() && r.matchConsume(\"[CDATA[\")) {"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '\\t':\ncase '\\n':\ncase '\\r':\ncase '\\f':\ncase ' ':\nbreak; // ignore whitespace\ncase nullChar:\nt.error(this);",
        "begin_line": 1561,
        "end_line": 1570,
        "comment": "                } else if (!t.currentNodeInHtmlNS() && r.matchConsume(\"[CDATA[\")) {"
    },
    {
        "class_name": "org.jsoup.parser.TokeniserState",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/TokeniserState.java",
        "signature": "char c",
        "snippet": "char c = r.consume();\nswitch (c) {\ncase '\\t':\ncase '\\n':\ncase '\\r':\ncase '\\f':\ncase ' ':\nt.transition(BetweenDoctypePublicAndSystemIdentifiers);",
        "begin_line": 1784,
        "end_line": 1791,
        "comment": "                     set public id to empty string"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "private boolean baseUriSetFromDoc",
        "snippet": "private boolean baseUriSetFromDoc = false;\nprivate Element headElement; // the current head element\nprivate Element formElement; // the current form element\nprivate Element contextElement; // fragment parse context -- could be null even if fragment parsing\nprivate DescendableLinkedList<Element> formattingElements = new DescendableLinkedList<Element>(); // active (open) formatting elements\nprivate List<Token.Character> pendingTableCharacters = new ArrayList<Token.Character>(); // chars in table to be shifted out\n\nprivate boolean framesetOk = true; // if ok to go into frameset\nprivate boolean fosterInserts = false; // if next inserts should be fostered\nprivate boolean fragmentParsing = false; // if parsing a fragment of html\n\nHtmlTreeBuilder() {}\n\n@Override\nDocument parse(String input, String baseUri, ParseErrorList errors) {\nint PROBE_START_LINE_36 = 36;",
        "begin_line": 26,
        "end_line": 41,
        "comment": "\n * HTML Tree Builder; creates a DOM from Tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_36",
        "snippet": "int PROBE_END_LINE_36 = 36;\nstate = f_initial_335_line_36;",
        "begin_line": 43,
        "end_line": 44,
        "comment": "\n * HTML Tree Builder; creates a DOM from Tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_37",
        "snippet": "int PROBE_START_LINE_37 = 37;\nString p_input_331_line_37 = input;",
        "begin_line": 45,
        "end_line": 46,
        "comment": "\n * HTML Tree Builder; creates a DOM from Tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "String p_base_uri_332_line_37",
        "snippet": "String p_base_uri_332_line_37 = baseUri;\norg.jsoup.parser.ParseErrorList p_errors_333_line_37 = errors;",
        "begin_line": 47,
        "end_line": 48,
        "comment": "\n * HTML Tree Builder; creates a DOM from Tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_42",
        "snippet": "int PROBE_START_LINE_42 = 42;\norg.jsoup.parser.HtmlTreeBuilderState f_initial_335_line_42 = HtmlTreeBuilderState.Initial;",
        "begin_line": 56,
        "end_line": 57,
        "comment": "\n * HTML Tree Builder; creates a DOM from Tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_42",
        "snippet": "int PROBE_END_LINE_42 = 42;\n// context may be null\nstate = f_initial_335_line_42;",
        "begin_line": 58,
        "end_line": 60,
        "comment": "\n * HTML Tree Builder; creates a DOM from Tokens.\n "
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_43",
        "snippet": "int PROBE_START_LINE_43 = 43;\nString p_input_fragment_336_line_43 = inputFragment;",
        "begin_line": 61,
        "end_line": 62,
        "comment": "\t\t context may be null"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_43",
        "snippet": "int PROBE_END_LINE_43 = 43;\ninitialiseParse(p_input_fragment_336_line_43, p_base_uri_338_line_43, p_errors_339_line_43);",
        "begin_line": 65,
        "end_line": 66,
        "comment": "\t\t context may be null"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_44",
        "snippet": "int PROBE_START_LINE_44 = 44;\norg.jsoup.nodes.Element p_context_337_line_44 = context;",
        "begin_line": 67,
        "end_line": 68,
        "comment": "\t\t context may be null"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_44",
        "snippet": "int PROBE_END_LINE_44 = 44;\ncontextElement = p_context_337_line_44;",
        "begin_line": 69,
        "end_line": 70,
        "comment": "\t\t context may be null"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "Element root",
        "snippet": "Element root = null;\n\nint PROBE_START_LINE_48 = 72;",
        "begin_line": 72,
        "end_line": 74,
        "comment": "\t\t context may be null"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "boolean html_tree_builder1_expr10_line_48",
        "snippet": "boolean html_tree_builder1_expr10_line_48 = p_context_337_line_48 != null;\nint PROBE_END_LINE_48 = 72;",
        "begin_line": 76,
        "end_line": 77,
        "comment": "\t\t context may be null"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "boolean html_tree_builder1_expr11_line_49",
        "snippet": "boolean html_tree_builder1_expr11_line_49 = html_tree_builder1_expr12_line_49 != null;\nint PROBE_END_LINE_49 = 50;",
        "begin_line": 82,
        "end_line": 83,
        "comment": "\t\t context may be null"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "String contextTag",
        "snippet": "String contextTag = html_tree_builder1_expr16_line_53;\nint PROBE_START_LINE_54 = 65;",
        "begin_line": 100,
        "end_line": 101,
        "comment": "\t\t\t initialise the tokeniser state:"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "String v_context_tag_343_line_54",
        "snippet": "String v_context_tag_343_line_54 = contextTag;\nboolean html_tree_builder1_expr17_line_54 = StringUtil.in(v_context_tag_343_line_54, \"title\", \"textarea\");",
        "begin_line": 102,
        "end_line": 103,
        "comment": "\t\t\t initialise the tokeniser state:"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_54",
        "snippet": "int PROBE_END_LINE_54 = 65;\nif (html_tree_builder1_expr17_line_54)\ntokeniser.transition(TokeniserState.Rcdata);",
        "begin_line": 104,
        "end_line": 106,
        "comment": "\t\t\t initialise the tokeniser state:"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "boolean html_tree_builder1_expr41_line_75",
        "snippet": "boolean html_tree_builder1_expr41_line_75 = p_context_337_line_75 != null;\nint PROBE_END_LINE_75 = 78;",
        "begin_line": 147,
        "end_line": 148,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_76",
        "snippet": "int PROBE_END_LINE_76 = 76;\nreturn html_tree_builder1_expr42_line_76;",
        "begin_line": 153,
        "end_line": 154,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_84",
        "snippet": "int PROBE_START_LINE_84 = 84;\norg.jsoup.parser.HtmlTreeBuilderState html_tree_builder1_expr45_line_84 = this.state;",
        "begin_line": 165,
        "end_line": 166,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_84",
        "snippet": "int PROBE_END_LINE_84 = 84;\nreturn html_tree_builder1_expr43_line_84;",
        "begin_line": 170,
        "end_line": 171,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_88",
        "snippet": "int PROBE_START_LINE_88 = 88;\norg.jsoup.parser.Token p_token_349_line_88 = token;",
        "begin_line": 175,
        "end_line": 176,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_89",
        "snippet": "int PROBE_START_LINE_89 = 89;\norg.jsoup.parser.HtmlTreeBuilderState p_state_350_line_89 = state;",
        "begin_line": 179,
        "end_line": 180,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_101",
        "snippet": "int PROBE_START_LINE_101 = 101;\norg.jsoup.parser.HtmlTreeBuilderState f_state_334_line_101 = state;",
        "begin_line": 199,
        "end_line": 200,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_101",
        "snippet": "int PROBE_END_LINE_101 = 101;\noriginalState = f_state_334_line_101;",
        "begin_line": 201,
        "end_line": 202,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_105",
        "snippet": "int PROBE_END_LINE_105 = 105;\nreturn f_original_state_352_line_105;",
        "begin_line": 208,
        "end_line": 209,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "String html_tree_builder1_expr54_line_148",
        "snippet": "String html_tree_builder1_expr54_line_148 = startTag.name();\nboolean html_tree_builder1_expr53_line_148 = Tag.isKnownTag(html_tree_builder1_expr54_line_148);",
        "begin_line": 262,
        "end_line": 263,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_148",
        "snippet": "int PROBE_END_LINE_148 = 152;\n// handle empty unknown tags\n// when the spec expects an empty tag, will directly hit insertEmpty, so won't generate fake end tag.\nif (html_tree_builder1_expr50_line_148) {\nElement el = insertEmpty(startTag);",
        "begin_line": 268,
        "end_line": 272,
        "comment": "             todo: setup form element to nearest form on context (up ancestor chain)"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "Comment comment",
        "snippet": "Comment comment = new Comment(commentToken.getData(), baseUri);\ninsertNode(comment);",
        "begin_line": 355,
        "end_line": 356,
        "comment": "         when the spec expects an empty tag, will directly hit insertEmpty, so won't generate fake end tag."
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_199",
        "snippet": "int PROBE_START_LINE_199 = 204;\nDescendableLinkedList<org.jsoup.nodes.Element> f_stack_346_line_199 = stack;",
        "begin_line": 370,
        "end_line": 371,
        "comment": "         characters in script and style go in as datanodes, not text nodes"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_199",
        "snippet": "int PROBE_END_LINE_199 = 204;\n// if the stack hasn't been set up yet, elements (doctype, comments) go into the doc\nif (html_tree_builder1_expr69_line_199) {\nint PROBE_START_LINE_200 = 200;",
        "begin_line": 374,
        "end_line": 377,
        "comment": "         characters in script and style go in as datanodes, not text nodes"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_200",
        "snippet": "int PROBE_END_LINE_200 = 200;\nf_doc_342_line_200.appendChild(p_node_368_line_200);",
        "begin_line": 380,
        "end_line": 381,
        "comment": "\t\t if the stack hasn't been set up yet, elements (doctype, comments) go into the doc"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_201",
        "snippet": "int PROBE_START_LINE_201 = 204;\nboolean html_tree_builder1_expr72_line_201 = isFosterInserts();",
        "begin_line": 383,
        "end_line": 384,
        "comment": "\t\t if the stack hasn't been set up yet, elements (doctype, comments) go into the doc"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_201",
        "snippet": "int PROBE_END_LINE_201 = 204;\nif (html_tree_builder1_expr72_line_201)\ninsertInFosterParent(node);",
        "begin_line": 385,
        "end_line": 387,
        "comment": "\t\t if the stack hasn't been set up yet, elements (doctype, comments) go into the doc"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "boolean html_tree_builder1_expr80_line_209",
        "snippet": "boolean html_tree_builder1_expr80_line_209 = true;\nif (html_tree_builder1_expr76_line_209) {\norg.jsoup.parser.HtmlTreeBuilderState f_state_334_line_209 = state;",
        "begin_line": 399,
        "end_line": 401,
        "comment": "\t\t if the stack hasn't been set up yet, elements (doctype, comments) go into the doc"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_209",
        "snippet": "int PROBE_END_LINE_209 = 210;\n// todo - dev, remove validation check\nif (html_tree_builder1_expr75_line_209)\nValidate.isFalse(true, \"pop td not in cell\");",
        "begin_line": 408,
        "end_line": 411,
        "comment": "\t\t if the stack hasn't been set up yet, elements (doctype, comments) go into the doc"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_211",
        "snippet": "int PROBE_START_LINE_211 = 212;\nDescendableLinkedList<org.jsoup.nodes.Element> f_stack_346_line_211 = stack;",
        "begin_line": 412,
        "end_line": 413,
        "comment": "\t\t todo - dev, remove validation check"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "String html_tree_builder1_expr86_line_211",
        "snippet": "String html_tree_builder1_expr86_line_211 = html_tree_builder1_expr87_line_211.nodeName();\nboolean html_tree_builder1_expr84_line_211 = html_tree_builder1_expr86_line_211.equals(\"html\");",
        "begin_line": 415,
        "end_line": 416,
        "comment": "\t\t todo - dev, remove validation check"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_221",
        "snippet": "int PROBE_START_LINE_221 = 221;\nDescendableLinkedList<org.jsoup.nodes.Element> f_stack_346_line_221 = stack;",
        "begin_line": 432,
        "end_line": 433,
        "comment": "\t\t todo - dev, remove validation check"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "Iterator<Element> it",
        "snippet": "Iterator<Element> it = stack.descendingIterator();\nwhile (it.hasNext()) {\nElement next = it.next();",
        "begin_line": 465,
        "end_line": 467,
        "comment": "\t\t todo - dev, remove validation check"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_START_LINE_272",
        "snippet": "int PROBE_START_LINE_272 = 272;\nv_it_376_line_264 = it;",
        "begin_line": 508,
        "end_line": 509,
        "comment": "\t\t todo - dev, remove validation check"
    },
    {
        "class_name": "org.jsoup.parser.HtmlTreeBuilder",
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-26/result/src/org/jsoup/parser/HtmlTreeBuilder.java",
        "signature": "int PROBE_END_LINE_272",
        "snippet": "int PROBE_END_LINE_272 = 272;\n}\n}\n\nvoid popStackToClose(String... elNames) {\nIterator<Element> it = stack.descendingIterator();",
        "begin_line": 511,
        "end_line": 516,
        "comment": "\t\t todo - dev, remove validation check"
    }
]