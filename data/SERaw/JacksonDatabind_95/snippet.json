[
    {
        "name": "com.fasterxml.jackson.databind.type.CollectionLikeType.getGenericSignature(StringBuilder sb)#216",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
        "class_name": "com.fasterxml.jackson.databind.type.CollectionLikeType",
        "signature": "com.fasterxml.jackson.databind.type.CollectionLikeType.getGenericSignature(StringBuilder sb)",
        "snippet": "public StringBuilder getGenericSignature(StringBuilder sb) {\n_classSignature(_class, sb, false);\nsb.append('<');\n_elementType.getGenericSignature(sb);\nsb.append(\">;\");\nreturn sb;\n}",
        "begin_line": 216,
        "end_line": 222,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeParser.TypeParser(TypeFactory f)#20",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/type/TypeParser.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
        "signature": "com.fasterxml.jackson.databind.type.TypeParser.TypeParser(TypeFactory f)",
        "snippet": "public TypeParser(TypeFactory f) {\nint PROBE_START_LINE_19 = 19;\ncom.fasterxml.jackson.databind.type.TypeFactory p_f_519_line_19 = f;\nint PROBE_END_LINE_19 = 19;\n_factory = p_f_519_line_19;\n}",
        "begin_line": 20,
        "end_line": 25,
        "comment": "\n * Simple recursive-descent parser for parsing canonical {@link JavaType}\n * representations and constructing type instances.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassStack.ClassStack(ClassStack parent, Class<?> curr)#24",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/type/ClassStack.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassStack",
        "signature": "com.fasterxml.jackson.databind.type.ClassStack.ClassStack(ClassStack parent, Class<?> curr)",
        "snippet": "private ClassStack(ClassStack parent, Class<?> curr) {\nint PROBE_START_LINE_25 = 25;\ncom.fasterxml.jackson.databind.type.ClassStack p_parent_35_line_25 = parent;\nint PROBE_END_LINE_25 = 25;\n_parent = p_parent_35_line_25;\nint PROBE_START_LINE_26 = 26;\nClass<?> p_curr_36_line_26 = curr;\nint PROBE_END_LINE_26 = 26;\n_current = p_curr_36_line_26;\n}",
        "begin_line": 24,
        "end_line": 33,
        "comment": "\n * Simple helper class used to keep track of 'call stack' for classes being referenced\n * (as well as unbound variables)\n *\n * @since 2.7\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.constructRawMapType(Class<? extends Map> mapClass)#1161",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.constructRawMapType(Class<? extends Map> mapClass)",
        "snippet": "public MapType constructRawMapType(Class<? extends Map> mapClass) {\nreturn constructMapType(mapClass, unknownType(), unknownType());\n}",
        "begin_line": 1161,
        "end_line": 1163,
        "comment": "    \n     * Method that can be used to construct \"raw\" Map type; meaning that its\n     * parameterization is unknown.\n     * This is similar to using <code>Object.class</code> parameterization,\n     * and is equivalent to calling:\n     *<pre>\n     *  typeFactory.constructMapType(collectionClass, typeFactory.unknownType(), typeFactory.unknownType());\n     *</pre>\n     *<p>\n     * This method should only be used if parameterization is completely unavailable.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory._findWellKnownSimple(Class<?> clz)#1356",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory._findWellKnownSimple(Class<?> clz)",
        "snippet": "protected JavaType _findWellKnownSimple(Class<?> clz) {\nint PROBE_START_LINE_1132 = 1139;\nClass<?> p_clz_460_line_1132 = clz;\nboolean type_factory1_expr62_line_1132 = p_clz_460_line_1132.isPrimitive();\nint PROBE_END_LINE_1132 = 1139;\nif (type_factory1_expr62_line_1132) {\nif (clz == CLS_BOOL) return CORE_TYPE_BOOL;\nif (clz == CLS_INT) return CORE_TYPE_INT;\nif (clz == CLS_LONG) return CORE_TYPE_LONG;\n} else {",
        "begin_line": 1356,
        "end_line": 1365,
        "comment": "    \n     * Helper method called to see if requested, non-generic-parameterized\n     * type is one of common, \"well-known\" types, instances of which are\n     * pre-constructed and do not need dynamic caching.\n     *\n     * @since 2.7\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeBindings.emptyBindings()#122",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/type/TypeBindings.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
        "signature": "com.fasterxml.jackson.databind.type.TypeBindings.emptyBindings()",
        "snippet": "public static TypeBindings emptyBindings() {\nint PROBE_START_LINE_67 = 67;\ncom.fasterxml.jackson.databind.type.TypeBindings f_empty_254_line_67 = EMPTY;\nint PROBE_END_LINE_67 = 67;\nreturn f_empty_254_line_67;\n}",
        "begin_line": 122,
        "end_line": 127,
        "comment": "    ********************************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeBindings.size()#438",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/type/TypeBindings.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeBindings",
        "signature": "com.fasterxml.jackson.databind.type.TypeBindings.size()",
        "snippet": "public int size() {\nint PROBE_START_LINE_252 = 252;\ncom.fasterxml.jackson.databind.JavaType[] f__types_259_line_252 = _types;\nint f_length_260_line_252 = f__types_259_line_252.length;\nint PROBE_END_LINE_252 = 252;\nreturn f_length_260_line_252;\n}",
        "begin_line": 438,
        "end_line": 444,
        "comment": "    \n     * Returns number of bindings contained\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.getGenericSuperclass(Class<?> cls)#989",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.getGenericSuperclass(Class<?> cls)",
        "snippet": "public static Type getGenericSuperclass(Class<?> cls) {\nint PROBE_START_LINE_989 = 989;\nClass<?> p_cls_622_line_989 = cls;\njava.lang.reflect.Type class_util1_expr5_line_989 = p_cls_622_line_989.getGenericSuperclass();\nint PROBE_END_LINE_989 = 989;\nreturn class_util1_expr5_line_989;\n}",
        "begin_line": 989,
        "end_line": 995,
        "comment": "    \n     * @since 2.7\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName()#195",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-95/result/src/com/fasterxml/jackson/databind/type/MapLikeType.java",
        "class_name": "com.fasterxml.jackson.databind.type.MapLikeType",
        "signature": "com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName()",
        "snippet": "protected String buildCanonicalName() {\nStringBuilder sb = new StringBuilder();\nint PROBE_START_LINE_191 = 191;\nStringBuilder v_sb_140_line_191 = sb;\nClass<?> f__class_6_line_191 = _class;\nString map_like_type1_expr6_line_191 = f__class_6_line_191.getName();\nint PROBE_END_LINE_191 = 191;\nv_sb_140_line_191.append(map_like_type1_expr6_line_191);\nint PROBE_START_LINE_192 = 198;\ncom.fasterxml.jackson.databind.JavaType f__key_type_117_line_192 = _keyType;\nboolean map_like_type1_expr7_line_192 = f__key_type_117_line_192 != null;\nint PROBE_END_LINE_192 = 198;\nif (map_like_type1_expr7_line_192) {\nint PROBE_START_LINE_193 = 193;\nStringBuilder v_sb_140_line_193 = sb;\nint PROBE_END_LINE_193 = 193;\nv_sb_140_line_193.append('<');\nint PROBE_START_LINE_194 = 194;\nStringBuilder v_sb_140_line_194 = sb;\ncom.fasterxml.jackson.databind.JavaType f__key_type_117_line_194 = _keyType;\nString map_like_type1_expr11_line_194 = f__key_type_117_line_194.toCanonical();\nint PROBE_END_LINE_194 = 194;\nv_sb_140_line_194.append(map_like_type1_expr11_line_194);\nint PROBE_START_LINE_195 = 195;\nStringBuilder v_sb_140_line_195 = sb;\nint PROBE_END_LINE_195 = 195;\nv_sb_140_line_195.append(',');\nint PROBE_START_LINE_196 = 196;\nStringBuilder v_sb_140_line_196 = sb;\ncom.fasterxml.jackson.databind.JavaType f__value_type_118_line_196 = _valueType;\nString map_like_type1_expr15_line_196 = f__value_type_118_line_196.toCanonical();\nint PROBE_END_LINE_196 = 196;\nv_sb_140_line_196.append(map_like_type1_expr15_line_196);\nint PROBE_START_LINE_197 = 197;\nStringBuilder v_sb_140_line_197 = sb;\nint PROBE_END_LINE_197 = 197;\nv_sb_140_line_197.append('>');\n}",
        "begin_line": 195,
        "end_line": 232,
        "comment": "         \"withKeyType()\" not part of JavaType, hence must verify:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    }
]