[
    {
        "class_name": "org.apache.commons.math.stat.clustering.Cluster",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/Cluster.java",
        "signature": "int PROBE_START_LINE_46",
        "snippet": "int PROBE_START_LINE_46 = 46;\nT p_center_1_line_46 = center;",
        "begin_line": 46,
        "end_line": 47,
        "comment": "    \n     * Build a cluster centered at a specified point.\n     * @param center the point which is to be the center of this cluster\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.Cluster",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/Cluster.java",
        "signature": "int PROBE_END_LINE_46",
        "snippet": "int PROBE_END_LINE_46 = 46;\nthis.center = p_center_1_line_46;",
        "begin_line": 48,
        "end_line": 49,
        "comment": "    \n     * Build a cluster centered at a specified point.\n     * @param center the point which is to be the center of this cluster\n     "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/util/MathUtils.java",
        "signature": "int sum",
        "snippet": "int sum = 0;\nfor (int i = 0; i < p1.length; i++) {\nint PROBE_START_LINE_1626 = 1626;",
        "begin_line": 1624,
        "end_line": 1626,
        "comment": "    \n     * Calculates the L<sub>2</sub> (Euclidean) distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @return the L<sub>2</sub> distance between the two points\n     "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/util/MathUtils.java",
        "signature": "int[] p_p_1_137_line_1626",
        "snippet": "int[] p_p_1_137_line_1626 = p1;\nint v_i_140_line_1626 = i;",
        "begin_line": 1627,
        "end_line": 1628,
        "comment": "    \n     * Calculates the L<sub>2</sub> (Euclidean) distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @return the L<sub>2</sub> distance between the two points\n     "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/util/MathUtils.java",
        "signature": "int math_utils1_expr5_line_1626",
        "snippet": "int math_utils1_expr5_line_1626 = p_p_1_137_line_1626[v_i_140_line_1626];\nint[] p_p_2_138_line_1626 = p2;",
        "begin_line": 1629,
        "end_line": 1630,
        "comment": "    \n     * Calculates the L<sub>2</sub> (Euclidean) distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @return the L<sub>2</sub> distance between the two points\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "int PROBE_START_LINE_41",
        "snippet": "int PROBE_START_LINE_41 = 41;\njava.util.Random p_random_10_line_41 = random;",
        "begin_line": 41,
        "end_line": 42,
        "comment": "     Build a clusterer.\n     * @param random random generator to use for choosing initial centers\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "int PROBE_END_LINE_89",
        "snippet": "int PROBE_END_LINE_89 = 92;\nfor (final T p : p_points_17_line_89) {\nint PROBE_START_LINE_90 = 90;",
        "begin_line": 105,
        "end_line": 107,
        "comment": "    \n     * Adds the given points to the closest {@link Cluster}.\n     *\n     * @param <T> type of the points to cluster\n     * @param clusters the {@link Cluster}s to add the points to\n     * @param points the points to add to the given {@link Cluster}s\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "Collection<Cluster<T>> p_clusters_16_line_90",
        "snippet": "Collection<Cluster<T>> p_clusters_16_line_90 = clusters;\nT v_p_18_line_90 = p;",
        "begin_line": 108,
        "end_line": 109,
        "comment": "    \n     * Adds the given points to the closest {@link Cluster}.\n     *\n     * @param <T> type of the points to cluster\n     * @param clusters the {@link Cluster}s to add the points to\n     * @param points the points to add to the given {@link Cluster}s\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "int PROBE_END_LINE_90",
        "snippet": "int PROBE_END_LINE_90 = 90;\nCluster<T> cluster = kmeans_plus_plus_clusterer1_expr4_line_90;",
        "begin_line": 112,
        "end_line": 113,
        "comment": "    \n     * Adds the given points to the closest {@link Cluster}.\n     *\n     * @param <T> type of the points to cluster\n     * @param clusters the {@link Cluster}s to add the points to\n     * @param points the points to add to the given {@link Cluster}s\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "int PROBE_START_LINE_91",
        "snippet": "int PROBE_START_LINE_91 = 91;\nCluster<T> v_cluster_19_line_91 = cluster;",
        "begin_line": 114,
        "end_line": 115,
        "comment": "    \n     * Adds the given points to the closest {@link Cluster}.\n     *\n     * @param <T> type of the points to cluster\n     * @param clusters the {@link Cluster}s to add the points to\n     * @param points the points to add to the given {@link Cluster}s\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "final List<Cluster<T>> resultSet",
        "snippet": "final List<Cluster<T>> resultSet = new ArrayList<Cluster<T>>();\n\nint PROBE_START_LINE_111 = 111;",
        "begin_line": 138,
        "end_line": 140,
        "comment": "    \n     * Use K-means++ to choose the initial centers.\n     *\n     * @param <T> type of the points to cluster\n     * @param points the points to choose the initial centers from\n     * @param k the number of centers to choose\n     * @param random random generator to use\n     * @return the initial centers\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "T v_first_point_25_line_112",
        "snippet": "T v_first_point_25_line_112 = firstPoint;\nint PROBE_END_LINE_112 = 112;",
        "begin_line": 153,
        "end_line": 154,
        "comment": "\t\t Choose one center uniformly at random from among the data points."
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "int PROBE_START_LINE_114",
        "snippet": "int PROBE_START_LINE_114 = 114;\nList<T> v_point_set_23_line_114 = pointSet;",
        "begin_line": 157,
        "end_line": 158,
        "comment": "\t\t Choose one center uniformly at random from among the data points."
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "signature": "final double[] dx2",
        "snippet": "final double[] dx2 = new double[kmeans_plus_plus_clusterer1_expr14_line_114];\nint PROBE_START_LINE_115 = 137;",
        "begin_line": 161,
        "end_line": 162,
        "comment": "\t\t Choose one center uniformly at random from among the data points."
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.EuclideanIntegerPoint",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java",
        "signature": "int PROBE_START_LINE_44",
        "snippet": "int PROBE_START_LINE_44 = 44;\nint[] p_point_5_line_44 = point;",
        "begin_line": 44,
        "end_line": 45,
        "comment": "    \n     * Build an instance wrapping an integer array.\n     * <p>The wrapped array is referenced, it is <em>not</em> copied.</p>\n     * @param point the n-dimensional point in integer space\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.clustering.EuclideanIntegerPoint",
        "src_path": "/data/bug_db/subjects/defects4j/Math-79/result/src/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java",
        "signature": "int PROBE_END_LINE_52",
        "snippet": "int PROBE_END_LINE_52 = 52;\nreturn f_point_6_line_52;",
        "begin_line": 57,
        "end_line": 58,
        "comment": "    \n     * Get the n-dimensional point in integer space.\n     * @return a reference (not a copy!) to the wrapped array\n     "
    }
]