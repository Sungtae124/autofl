[
    {
        "class_name": "org.apache.commons.codec.language.DoubleMetaphone",
        "src_path": "/data/bug_db/subjects/defects4j/Codec-13/result/src/org/apache/commons/codec/language/DoubleMetaphone.java",
        "signature": "private int maxCodeLen",
        "snippet": "private int maxCodeLen = 4;\n\n/**\n* Creates an instance of this DoubleMetaphone encoder\n*/\npublic DoubleMetaphone() {\nsuper();",
        "begin_line": 59,
        "end_line": 65,
        "comment": "    \n     * Maximum length of an encoding, default is 4\n     "
    },
    {
        "class_name": "org.apache.commons.codec.language.DoubleMetaphone",
        "src_path": "/data/bug_db/subjects/defects4j/Codec-13/result/src/org/apache/commons/codec/language/DoubleMetaphone.java",
        "signature": "int PROBE_START_LINE_86",
        "snippet": "int PROBE_START_LINE_86 = 86;\nString p_value_7_line_86 = value;",
        "begin_line": 86,
        "end_line": 87,
        "comment": "    \n     * Encode a value with Double Metaphone, optionally using the alternate encoding.\n     *\n     * @param value String to encode\n     * @param alternate use alternate encode\n     * @return an encoded string\n     "
    },
    {
        "class_name": "org.apache.commons.codec.language.DoubleMetaphone",
        "src_path": "/data/bug_db/subjects/defects4j/Codec-13/result/src/org/apache/commons/codec/language/DoubleMetaphone.java",
        "signature": "String double_metaphone1_expr7_line_86",
        "snippet": "String double_metaphone1_expr7_line_86 = cleanInput(p_value_7_line_86);\nint PROBE_END_LINE_86 = 86;",
        "begin_line": 88,
        "end_line": 89,
        "comment": "    \n     * Encode a value with Double Metaphone, optionally using the alternate encoding.\n     *\n     * @param value String to encode\n     * @param alternate use alternate encode\n     * @return an encoded string\n     "
    },
    {
        "class_name": "org.apache.commons.codec.language.DoubleMetaphone",
        "src_path": "/data/bug_db/subjects/defects4j/Codec-13/result/src/org/apache/commons/codec/language/DoubleMetaphone.java",
        "signature": "boolean result",
        "snippet": "boolean result = false;\nfor (final String element : SILENT_START) {\nif (value.startsWith(element)) {\nresult = true;",
        "begin_line": 891,
        "end_line": 894,
        "comment": "    \n     * Determines whether or not the value starts with a silent letter.  It will\n     * return {@code true} if the value starts with any of 'GN', 'KN',\n     * 'PN', 'WR' or 'PS'.\n     "
    }
]