[
    {
        "name": "com.fasterxml.jackson.databind.introspect.ClassIntrospector.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/ClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.ClassIntrospector.unknown(...)",
        "snippet": "protected ClassIntrospector() { }",
        "begin_line": 38,
        "end_line": 38,
        "comment": "        \n         * Method that will check if there are \"mix-in\" classes (with mix-in\n         * annotations) for given class\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown#16",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ArrayIterator.java",
        "class_name": "com.fasterxml.jackson.databind.util.ArrayIterator",
        "signature": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown(...)",
        "snippet": "public ArrayIterator(T[] a) {",
        "begin_line": 16,
        "end_line": 16,
        "comment": "\n * Iterator implementation used to efficiently expose contents of an\n * Array as read-only iterator.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown#17",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ArrayIterator.java",
        "class_name": "com.fasterxml.jackson.databind.util.ArrayIterator",
        "signature": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown(...)",
        "snippet": "int PROBE_START_LINE_17 = 17;",
        "begin_line": 17,
        "end_line": 17,
        "comment": "\n * Iterator implementation used to efficiently expose contents of an\n * Array as read-only iterator.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown#18",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ArrayIterator.java",
        "class_name": "com.fasterxml.jackson.databind.util.ArrayIterator",
        "signature": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown(...)",
        "snippet": "T[] p_a_2584_line_17 = a;",
        "begin_line": 18,
        "end_line": 18,
        "comment": "\n * Iterator implementation used to efficiently expose contents of an\n * Array as read-only iterator.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown#19",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ArrayIterator.java",
        "class_name": "com.fasterxml.jackson.databind.util.ArrayIterator",
        "signature": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown(...)",
        "snippet": "int PROBE_END_LINE_17 = 17;",
        "begin_line": 19,
        "end_line": 19,
        "comment": "\n * Iterator implementation used to efficiently expose contents of an\n * Array as read-only iterator.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown#22",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ArrayIterator.java",
        "class_name": "com.fasterxml.jackson.databind.util.ArrayIterator",
        "signature": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown(...)",
        "snippet": "}",
        "begin_line": 22,
        "end_line": 22,
        "comment": "\n * Iterator implementation used to efficiently expose contents of an\n * Array as read-only iterator.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown#33",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ArrayIterator.java",
        "class_name": "com.fasterxml.jackson.databind.util.ArrayIterator",
        "signature": "com.fasterxml.jackson.databind.util.ArrayIterator.unknown(...)",
        "snippet": "@Override",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n * Iterator implementation used to efficiently expose contents of an\n * Array as read-only iterator.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#31",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "/**",
        "begin_line": 31,
        "end_line": 31,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#131",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "if (id.length() > 0) {",
        "begin_line": 131,
        "end_line": 131,
        "comment": "             Empty String is same as not having annotation, to allow overrides",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#132",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "return id;",
        "begin_line": 132,
        "end_line": 132,
        "comment": "             Empty String is same as not having annotation, to allow overrides",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#145",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "JsonNaming ann = jackson_annotation_introspector1_expr1_line_131;",
        "begin_line": 145,
        "end_line": 145,
        "comment": "             Empty String is same as not having annotation, to allow overrides",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#146",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "int PROBE_START_LINE_132 = 132;",
        "begin_line": 146,
        "end_line": 146,
        "comment": "             Empty String is same as not having annotation, to allow overrides",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#233",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "",
        "begin_line": 233,
        "end_line": 233,
        "comment": "         that unwrapping should not be done (relevant when using chained introspectors)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#431",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "public Class<?> findSerializationType(Annotated am)",
        "begin_line": 431,
        "end_line": 431,
        "comment": "             let's construct instance with nominal type:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#432",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "{",
        "begin_line": 432,
        "end_line": 432,
        "comment": "             let's construct instance with nominal type:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#433",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "JsonSerialize ann = am.getAnnotation(JsonSerialize.class);",
        "begin_line": 433,
        "end_line": 433,
        "comment": "             let's construct instance with nominal type:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#488",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "int PROBE_END_LINE_431 = 431;",
        "begin_line": 488,
        "end_line": 488,
        "comment": "             let's construct instance with nominal type:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#489",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "JsonIdentityInfo info = jackson_annotation_introspector1_expr14_line_431;",
        "begin_line": 489,
        "end_line": 489,
        "comment": "             let's construct instance with nominal type:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#494",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "if (!jackson_annotation_introspector1_expr17_line_432) {",
        "begin_line": 494,
        "end_line": 494,
        "comment": "             let's construct instance with nominal type:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#504",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "// In future may need to allow passing namespace?",
        "begin_line": 504,
        "end_line": 504,
        "comment": "         In future may need to allow passing namespace?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#505",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "PropertyName name = new PropertyName(info.property());",
        "begin_line": 505,
        "end_line": 505,
        "comment": "         In future may need to allow passing namespace?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#554",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "",
        "begin_line": 554,
        "end_line": 554,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#555",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "@Override",
        "begin_line": 555,
        "end_line": 555,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#561",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "int PROBE_END_LINE_488 = 488;",
        "begin_line": 561,
        "end_line": 561,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#580",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "int PROBE_START_LINE_494 = 494;",
        "begin_line": 580,
        "end_line": 580,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#581",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.introspect.Annotated p_ann_1719_line_494 = ann;",
        "begin_line": 581,
        "end_line": 581,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#587",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "@Override",
        "begin_line": 587,
        "end_line": 587,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#592",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "",
        "begin_line": 592,
        "end_line": 592,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#593",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "private final Boolean _findSortAlpha(Annotated ann) {",
        "begin_line": 593,
        "end_line": 593,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#598",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "int PROBE_END_LINE_504 = 504;",
        "begin_line": 598,
        "end_line": 598,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#599",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "JsonPropertyOrder order = jackson_annotation_introspector1_expr27_line_504;",
        "begin_line": 599,
        "end_line": 599,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#605",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "if (!jackson_annotation_introspector1_expr30_line_505) {",
        "begin_line": 605,
        "end_line": 605,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#606",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "jackson_annotation_introspector1_expr31_line_505 = order.alphabetic();",
        "begin_line": 606,
        "end_line": 606,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#612",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "return jackson_annotation_introspector1_expr29_line_505;",
        "begin_line": 612,
        "end_line": 612,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#613",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "}",
        "begin_line": 613,
        "end_line": 613,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#640",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "return PropertyName.USE_DEFAULT;",
        "begin_line": 640,
        "end_line": 640,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#641",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "}",
        "begin_line": 641,
        "end_line": 641,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#753",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "if (!jackson_annotation_introspector1_expr49_line_599) {",
        "begin_line": 753,
        "end_line": 753,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#754",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "Class<?> jackson_annotation_introspector1_expr52_line_599 = ann.keyAs();",
        "begin_line": 754,
        "end_line": 754,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#756",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "jackson_annotation_introspector1_expr52_line_599);",
        "begin_line": 756,
        "end_line": 756,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#766",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "public Class<?> findDeserializationContentType(Annotated am, JavaType baseContentType)",
        "begin_line": 766,
        "end_line": 766,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown#767",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.unknown(...)",
        "snippet": "{",
        "begin_line": 767,
        "end_line": 767,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown#24",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown(...)",
        "snippet": "public static final DateSerializer instance = new DateSerializer();",
        "begin_line": 24,
        "end_line": 24,
        "comment": "    \n     * Default instance that is used when no contextual configuration\n     * is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown#27",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown(...)",
        "snippet": "this(null, null);",
        "begin_line": 27,
        "end_line": 27,
        "comment": "    \n     * Default instance that is used when no contextual configuration\n     * is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown(...)",
        "snippet": "}",
        "begin_line": 28,
        "end_line": 28,
        "comment": "    \n     * Default instance that is used when no contextual configuration\n     * is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown#31",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown(...)",
        "snippet": "super(Date.class, useTimestamp, customFormat);",
        "begin_line": 31,
        "end_line": 31,
        "comment": "    \n     * Default instance that is used when no contextual configuration\n     * is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown#32",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateSerializer.unknown(...)",
        "snippet": "}",
        "begin_line": 32,
        "end_line": 32,
        "comment": "    \n     * Default instance that is used when no contextual configuration\n     * is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.AnnotationIntrospector.unknown#37",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/AnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.AnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.AnnotationIntrospector.unknown(...)",
        "snippet": "public abstract class AnnotationIntrospector",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n * Abstract class that defines API used for introspecting annotation-based\n * configuration for serialization and deserialization. Separated\n * so that different sets of annotations can be supported, and support\n * plugged-in dynamically.\n *<p>\n * NOTE: due to rapid addition of new methods (and changes to existing methods),\n * it is <b>strongly</b> recommended that custom implementations should not directly\n * extend this class, but rather extend {@link NopAnnotationIntrospector}.\n * This way added methods will not break backwards compatibility of custom annotation\n * introspectors.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.AnnotationIntrospector.unknown#50",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/AnnotationIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.AnnotationIntrospector",
        "signature": "com.fasterxml.jackson.databind.AnnotationIntrospector.unknown(...)",
        "snippet": "public static class ReferenceProperty",
        "begin_line": 50,
        "end_line": 50,
        "comment": "    \n     * Value type used with managed and back references; contains type and\n     * logic name, used to link related references\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NullSerializer.unknown#23",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NullSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NullSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.NullSerializer.unknown(...)",
        "snippet": "public final static NullSerializer instance = new NullSerializer();",
        "begin_line": 23,
        "end_line": 23,
        "comment": "\n * This is a simple dummy serializer that will just output literal\n * JSON null value whenever serialization is requested.\n * Used as the default \"null serializer\" (which is used for serializing\n * null object references unless overridden), as well as for some\n * more exotic types (java.lang.Void).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NullSerializer.unknown#25",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NullSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NullSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.NullSerializer.unknown(...)",
        "snippet": "private NullSerializer() { super(Object.class); }",
        "begin_line": 25,
        "end_line": 25,
        "comment": "\n * This is a simple dummy serializer that will just output literal\n * JSON null value whenever serialization is requested.\n * Used as the default \"null serializer\" (which is used for serializing\n * null object references unless overridden), as well as for some\n * more exotic types (java.lang.Void).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationConfig.unknown#55",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
        "signature": "com.fasterxml.jackson.databind.SerializationConfig.unknown(...)",
        "snippet": "protected JsonInclude.Include _serializationInclusion = null;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "    \n     * Which Bean/Map properties are to be included in serialization?\n     * Default settings is to include all regardless of value; can be\n     * changed to only include non-null properties, or properties\n     * with non-default values.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationConfig.unknown#75",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
        "signature": "com.fasterxml.jackson.databind.SerializationConfig.unknown(...)",
        "snippet": "super(base, str, mixins);",
        "begin_line": 75,
        "end_line": 75,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationConfig.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
        "signature": "com.fasterxml.jackson.databind.SerializationConfig.unknown(...)",
        "snippet": "int PROBE_START_LINE_76 = 76;",
        "begin_line": 76,
        "end_line": 76,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationConfig.unknown#77",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
        "signature": "com.fasterxml.jackson.databind.SerializationConfig.unknown(...)",
        "snippet": "int serialization_config1_expr2_line_76 = collectFeatureDefaults(SerializationFeature.class);",
        "begin_line": 77,
        "end_line": 77,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationConfig.unknown#78",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationConfig",
        "signature": "com.fasterxml.jackson.databind.SerializationConfig.unknown(...)",
        "snippet": "int PROBE_END_LINE_76 = 76;",
        "begin_line": 78,
        "end_line": 78,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringDeserializer.unknown#20",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringDeserializer.unknown(...)",
        "snippet": "public final static StringDeserializer instance = new StringDeserializer();",
        "begin_line": 20,
        "end_line": 20,
        "comment": "    \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringDeserializer.unknown#22",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringDeserializer.unknown(...)",
        "snippet": "public StringDeserializer() { super(String.class); }",
        "begin_line": 22,
        "end_line": 22,
        "comment": "    \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.unknown#23",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java",
        "class_name": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
        "signature": "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.unknown(...)",
        "snippet": "public StdSubtypeResolver() { }",
        "begin_line": 23,
        "end_line": 23,
        "comment": "\n * Standard {@link SubtypeResolver} implementation.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#18",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "",
        "begin_line": 18,
        "end_line": 18,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#25",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "public final class StringArrayDeserializer",
        "begin_line": 25,
        "end_line": 25,
        "comment": "\n * Separate implementation for serializing String arrays (instead of\n * using {@link ObjectArrayDeserializer}.\n * Used if (and only if) no custom value deserializers are used.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#33",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "/**",
        "begin_line": 33,
        "end_line": 33,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#34",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "* Value serializer to use, if not the standard one (which is inlined)",
        "begin_line": 34,
        "end_line": 34,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#35",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "*/",
        "begin_line": 35,
        "end_line": 35,
        "comment": "    \n     * Value serializer to use, if not the standard one (which is inlined)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#47",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "}",
        "begin_line": 47,
        "end_line": 47,
        "comment": "    \n     * Value serializer to use, if not the standard one (which is inlined)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#50",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "public String[] deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException",
        "begin_line": 50,
        "end_line": 50,
        "comment": "    \n     * Value serializer to use, if not the standard one (which is inlined)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#54",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "boolean string_array_deserializer1_expr5_line_47 = p_jp_1424_line_47.isExpectedStartArrayToken();",
        "begin_line": 54,
        "end_line": 54,
        "comment": "    \n     * Value serializer to use, if not the standard one (which is inlined)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#55",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "boolean string_array_deserializer1_expr4_line_47 = !string_array_deserializer1_expr5_line_47;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "    \n     * Value serializer to use, if not the standard one (which is inlined)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#57",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "// Ok: must point to START_ARRAY (or equivalent)",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#60",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "}",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#63",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "boolean string_array_deserializer1_expr6_line_50 = f__element_deserializer_1422_line_50 != null;",
        "begin_line": 63,
        "end_line": 63,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#64",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "int PROBE_END_LINE_50 = 52;",
        "begin_line": 64,
        "end_line": 64,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#65",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "if (string_array_deserializer1_expr6_line_50) {",
        "begin_line": 65,
        "end_line": 65,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#66",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "return _deserializeCustom(jp, ctxt);",
        "begin_line": 66,
        "end_line": 66,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#70",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.DeserializationContext p_ctxt_1425_line_54 = ctxt;",
        "begin_line": 70,
        "end_line": 70,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#74",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "int PROBE_START_LINE_55 = 55;",
        "begin_line": 74,
        "end_line": 74,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#75",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.util.ObjectBuffer v_buffer_1426_line_55 = buffer;",
        "begin_line": 75,
        "end_line": 75,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "Object[] string_array_deserializer1_expr8_line_55 = v_buffer_1426_line_55.resetAndStart();",
        "begin_line": 76,
        "end_line": 76,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#77",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "int PROBE_END_LINE_55 = 55;",
        "begin_line": 77,
        "end_line": 77,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#78",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "Object[] chunk = string_array_deserializer1_expr8_line_55;",
        "begin_line": 78,
        "end_line": 78,
        "comment": "\t\t Ok: must point to START_ARRAY (or equivalent)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#136",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "string_array_deserializer1_expr10_line_60 = string_array_deserializer1_expr11_line_60 != f_end_array_629_line_60;",
        "begin_line": 136,
        "end_line": 136,
        "comment": "             Ok: no need to convert Strings, but must recognize nulls",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#138",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "}",
        "begin_line": 138,
        "end_line": 138,
        "comment": "             Ok: no need to convert Strings, but must recognize nulls",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#139",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "int PROBE_START_LINE_76 = 76;",
        "begin_line": 139,
        "end_line": 139,
        "comment": "             Ok: no need to convert Strings, but must recognize nulls",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.util.ObjectBuffer v_buffer_1426_line_76 = buffer;",
        "begin_line": 140,
        "end_line": 140,
        "comment": "             Ok: no need to convert Strings, but must recognize nulls",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#145",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "int PROBE_END_LINE_76 = 76;",
        "begin_line": 145,
        "end_line": 145,
        "comment": "             Ok: no need to convert Strings, but must recognize nulls",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#146",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "String[] result = string_array_deserializer1_expr20_line_76;",
        "begin_line": 146,
        "end_line": 146,
        "comment": "             Ok: no need to convert Strings, but must recognize nulls",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#148",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.DeserializationContext p_ctxt_1425_line_77 = ctxt;",
        "begin_line": 148,
        "end_line": 148,
        "comment": "             Ok: no need to convert Strings, but must recognize nulls",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown#151",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.unknown(...)",
        "snippet": "p_ctxt_1425_line_77.returnObjectBuffer(v_buffer_1426_line_77);",
        "begin_line": 151,
        "end_line": 151,
        "comment": "             Ok: no need to convert Strings, but must recognize nulls",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#20",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "public enum DeserializationFeature implements ConfigFeature",
        "begin_line": 20,
        "end_line": 20,
        "comment": "\n * Enumeration that defines simple on/off features that affect\n * the way Java objects are deserialized from JSON\n *<p>\n * Note that features can be set both through\n * {@link ObjectMapper} (as sort of defaults) and through\n * {@link ObjectReader}.\n * In first case these defaults must follow \"config-then-use\" patterns\n * (i.e. defined once, not changed afterwards); all per-call\n * changes must be done using {@link ObjectReader}.\n *<p>\n * Note that features that do not indicate version of inclusion\n * were available in Jackson 2.0 (or earlier); only later additions\n * indicate version of inclusion.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "USE_BIG_DECIMAL_FOR_FLOATS(false),",
        "begin_line": 42,
        "end_line": 42,
        "comment": "    \n     * Feature that determines whether JSON floating point numbers\n     * are to be deserialized into {@link java.math.BigDecimal}s\n     * if only generic type description (either {@link Object} or\n     * {@link Number}, or within untyped {@link java.util.Map}\n     * or {@link java.util.Collection} context) is available.\n     * If enabled such values will be deserialized as {@link java.math.BigDecimal}s;\n     * if disabled, will be deserialized as {@link Double}s.\n     * <p>\n     * Feature is disabled by default, meaning that \"untyped\" floating\n     * point numbers will by default be deserialized as {@link Double}s\n     * (choice is for performance reason -- BigDecimals are slower than\n     * Doubles).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#60",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "USE_BIG_INTEGER_FOR_INTS(false),",
        "begin_line": 60,
        "end_line": 60,
        "comment": "    \n     * Feature that determines whether JSON integral (non-floating-point)\n     * numbers are to be deserialized into {@link java.math.BigInteger}s\n     * if only generic type description (either {@link Object} or\n     * {@link Number}, or within untyped {@link java.util.Map}\n     * or {@link java.util.Collection} context) is available.\n     * If enabled such values will be deserialized as\n     * {@link java.math.BigInteger}s;\n     * if disabled, will be deserialized as \"smallest\" available type,\n     * which is either {@link Integer}, {@link Long} or\n     * {@link java.math.BigInteger}, depending on number of digits.\n     * <p>\n     * Feature is disabled by default, meaning that \"untyped\" floating\n     * point numbers will by default be deserialized using whatever\n     * is the most compact integral type, to optimize efficiency.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#72",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "USE_JAVA_ARRAY_FOR_JSON_ARRAY(false),",
        "begin_line": 72,
        "end_line": 72,
        "comment": "    \n     * Feature that determines whether JSON Array is mapped to\n     * <code>Object[]</code> or <code>List&lt;Object></code> when binding\n     * \"untyped\" objects (ones with nominal type of <code>java.lang.Object</code>).\n     * If true, binds as <code>Object[]</code>; if false, as <code>List&lt;Object></code>.\n     *<p>\n     * Feature is disabled by default, meaning that JSON arrays are bound as\n     * {@link java.util.List}s.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#85",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "READ_ENUMS_USING_TO_STRING(false),",
        "begin_line": 85,
        "end_line": 85,
        "comment": "    \n     * Feature that determines standard deserialization mechanism used for\n     * Enum values: if enabled, Enums are assumed to have been serialized  using\n     * return value of <code>Enum.toString()</code>;\n     * if disabled, return value of <code>Enum.name()</code> is assumed to have been used.\n     *<p>\n     * Note: this feature should usually have same value\n     * as {@link SerializationFeature#WRITE_ENUMS_USING_TO_STRING}.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#107",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "FAIL_ON_UNKNOWN_PROPERTIES(true),",
        "begin_line": 107,
        "end_line": 107,
        "comment": "    \n     * Feature that determines whether encountering of unknown\n     * properties (ones that do not map to a property, and there is\n     * no \"any setter\" or handler that can handle it)\n     * should result in a failure (by throwing a\n     * {@link JsonMappingException}) or not.\n     * This setting only takes effect after all other handling\n     * methods for unknown properties have been tried, and\n     * property remains unhandled.\n     *<p>\n     * Feature is enabled by default (meaning that a\n     * {@link JsonMappingException} will be thrown if an unknown property\n     * is encountered).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#118",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "FAIL_ON_NULL_FOR_PRIMITIVES(false),",
        "begin_line": 118,
        "end_line": 118,
        "comment": "    \n     * Feature that determines whether encountering of JSON null\n     * is an error when deserializing into Java primitive types\n     * (like 'int' or 'double'). If it is, a JsonProcessingException\n     * is thrown to indicate this; if not, default value is used\n     * (0 for 'int', 0.0 for double, same defaulting as what JVM uses).\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#132",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "FAIL_ON_NUMBERS_FOR_ENUMS(false),",
        "begin_line": 132,
        "end_line": 132,
        "comment": "    \n     * Feature that determines whether JSON integer numbers are valid\n     * values to be used for deserializing Java enum values.\n     * If set to 'false' numbers are acceptable and are used to map to\n     * ordinal() of matching enumeration value; if 'true', numbers are\n     * not allowed and a {@link JsonMappingException} will be thrown.\n     * Latter behavior makes sense if there is concern that accidental\n     * mapping from integer values to enums might happen (and when enums\n     * are always serialized as JSON Strings)\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#145",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "FAIL_ON_INVALID_SUBTYPE(true),",
        "begin_line": 145,
        "end_line": 145,
        "comment": "    \n     * Feature that determines what happens when type of a polymorphic\n     * value (indicated for example by {@link com.fasterxml.jackson.annotation.JsonTypeInfo})\n     * can not be found (missing) or resolved (invalid class name, unmappable id);\n     * if enabled, an exception ir thrown; if false, null value is used instead.\n     *<p>\n     * Feature is enabled by default so that exception is thrown for missing or invalid\n     * type information.\n     * \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#162",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "FAIL_ON_READING_DUP_TREE_KEY(false),",
        "begin_line": 162,
        "end_line": 162,
        "comment": "    \n     * Feature that determines what happens when reading JSON content into tree\n     * ({@link com.fasterxml.jackson.core.TreeNode}) and a duplicate key\n     * is encountered (property name that was already seen for the JSON Object).\n     * If enabled, {@link JsonMappingException} will be thrown; if disabled, no exception\n     * is thrown and the new (later) value overwrites the earlier value.\n     *<p>\n     * Note that this property does NOT affect other aspects of data-binding; that is,\n     * no detection is done with respect to POJO properties or {@link java.util.Map}\n     * keys. New features may be added to control additional cases.\n     *<p>\n     * Feature is disabled by default so that no exception is thrown.\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#173",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "FAIL_ON_IGNORED_PROPERTIES(false),",
        "begin_line": 173,
        "end_line": 173,
        "comment": "    \n     * Feature that determines what happens when a property that has been explicitly\n     * marked as ignorable is encountered in input: if feature is enabled,\n     * {@link JsonMappingException} is thrown; if false, property is quietly skipped.\n     *<p>\n     * Feature is disabled by default so that no exception is thrown.\n     *\n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#190",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "WRAP_EXCEPTIONS(true),",
        "begin_line": 190,
        "end_line": 190,
        "comment": "    \n     * Feature that determines whether Jackson code should catch\n     * and wrap {@link Exception}s (but never {@link Error}s!)\n     * to add additional information about\n     * location (within input) of problem or not. If enabled,\n     * most exceptions will be caught and re-thrown (exception\n     * specifically being that {@link java.io.IOException}s may be passed\n     * as is, since they are declared as throwable); this can be\n     * convenient both in that all exceptions will be checked and\n     * declared, and so there is more contextual information.\n     * However, sometimes calling application may just want \"raw\"\n     * unchecked exceptions passed as is.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#209",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "ACCEPT_SINGLE_VALUE_AS_ARRAY(false),",
        "begin_line": 209,
        "end_line": 209,
        "comment": "    \n     * Feature that determines whether it is acceptable to coerce non-array\n     * (in JSON) values to work with Java collection (arrays, java.util.Collection)\n     * types. If enabled, collection deserializers will try to handle non-array\n     * values as if they had \"implicit\" surrounding JSON array.\n     * This feature is meant to be used for compatibility/interoperability reasons,\n     * to work with packages (such as XML-to-JSON converters) that leave out JSON\n     * array in cases where there is just a single element in array.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#220",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "UNWRAP_SINGLE_VALUE_ARRAYS(false),",
        "begin_line": 220,
        "end_line": 220,
        "comment": "    \n     * Feature that determines whether it is acceptable to coerce single value array (in JSON)\n     * values to the corresponding value type.  This is basically the opposite of the {@link #ACCEPT_SINGLE_VALUE_AS_ARRAY}\n     * feature.  If more than one value is found in the array, a JsonMappingException is thrown.\n     * <p>\n     * \n     * Feature is disabled by default\n     * @since 2.4\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#232",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "UNWRAP_ROOT_VALUE(false),",
        "begin_line": 232,
        "end_line": 232,
        "comment": "    \n     * Feature to allow \"unwrapping\" root-level JSON value, to match setting of\n     * {@link SerializationFeature#WRAP_ROOT_VALUE} used for serialization.\n     * Will verify that the root JSON value is a JSON Object, and that it has\n     * a single property with expected root name. If not, a\n     * {@link JsonMappingException} is thrown; otherwise value of the wrapped property\n     * will be deserialized as if it was the root value.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#251",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "ACCEPT_EMPTY_STRING_AS_NULL_OBJECT(false),",
        "begin_line": 251,
        "end_line": 251,
        "comment": "    \n     * Feature that can be enabled to allow JSON empty String\n     * value (\"\") to be bound to POJOs as null.\n     * If disabled, standard POJOs can only be bound from JSON null or\n     * JSON Object (standard meaning that no custom deserializers or\n     * constructors are defined; both of which can add support for other\n     * kinds of JSON values); if enable, empty JSON String can be taken\n     * to be equivalent of JSON null.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#266",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "READ_UNKNOWN_ENUM_VALUES_AS_NULL(false),",
        "begin_line": 266,
        "end_line": 266,
        "comment": "    \n     * Feature that allows unknown Enum values to be parsed as null values. \n     * If disabled, unknown Enum values will throw exceptions.\n     *<p>\n     * Note that in some cases this will basically ignore unknown Enum values;\n     * this is the keys for keys of {@link java.util.EnumMap} and values\n     * of {@link java.util.EnumSet} (because nulls are not accepted in these\n     * cases).\n     *<p>\n     * Feature is disabled by default.\n     * \n     * @since 2.0\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#283",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "READ_DATE_TIMESTAMPS_AS_NANOSECONDS(true),",
        "begin_line": 283,
        "end_line": 283,
        "comment": "    \n     * Feature that controls whether numeric timestamp values are expected\n     * to be written using nanosecond timestamps (enabled) or not (disabled),\n     * <b>if and only if</b> datatype supports such resolution.\n     * Only newer datatypes (such as Java8 Date/Time) support such resolution --\n     * older types (pre-Java8 <b>java.util.Date</b> etc) and Joda do not --\n     * and this setting <b>has no effect</b> on such types.\n     *<p>\n     * If disabled, standard millisecond timestamps are assumed.\n     * This is the counterpart to {@link SerializationFeature#WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS}.\n     *<p>\n     * Feature is enabled by default, to support most accurate time values possible.\n     * \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#295",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "ADJUST_DATES_TO_CONTEXT_TIME_ZONE(true),",
        "begin_line": 295,
        "end_line": 295,
        "comment": "    \n     * Feature that specifies whether context provided {@link java.util.TimeZone}\n     * ({@link DeserializationContext#getTimeZone()} should be used to adjust Date/Time\n     * values on deserialization, even if value itself contains timezone information.\n     * If enabled, contextual <code>TimeZone</code> will essentially override any other\n     * TimeZone information; if disabled, it will only be used if value itself does not\n     * contain any TimeZone information.\n     * \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#317",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "EAGER_DESERIALIZER_FETCH(true)",
        "begin_line": 317,
        "end_line": 317,
        "comment": "    \n     * Feature that determines whether {@link ObjectReader} should\n     * try to eagerly fetch necessary {@link JsonDeserializer} when\n     * possible. This improves performance in cases where similarly\n     * configured {@link ObjectReader} instance is used multiple\n     * times; and should not significantly affect single-use cases.\n     *<p>\n     * Note that there should not be any need to normally disable this\n     * feature: only consider that if there are actual perceived problems.\n     *<p>\n     * Feature is enabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#323",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "private DeserializationFeature(boolean defaultState) {",
        "begin_line": 323,
        "end_line": 323,
        "comment": "    \n     * Feature that determines whether {@link ObjectReader} should\n     * try to eagerly fetch necessary {@link JsonDeserializer} when\n     * possible. This improves performance in cases where similarly\n     * configured {@link ObjectReader} instance is used multiple\n     * times; and should not significantly affect single-use cases.\n     *<p>\n     * Note that there should not be any need to normally disable this\n     * feature: only consider that if there are actual perceived problems.\n     *<p>\n     * Feature is enabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#324",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "int PROBE_START_LINE_324 = 324;",
        "begin_line": 324,
        "end_line": 324,
        "comment": "    \n     * Feature that determines whether {@link ObjectReader} should\n     * try to eagerly fetch necessary {@link JsonDeserializer} when\n     * possible. This improves performance in cases where similarly\n     * configured {@link ObjectReader} instance is used multiple\n     * times; and should not significantly affect single-use cases.\n     *<p>\n     * Note that there should not be any need to normally disable this\n     * feature: only consider that if there are actual perceived problems.\n     *<p>\n     * Feature is enabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#325",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "boolean p_default_state_283_line_324 = defaultState;",
        "begin_line": 325,
        "end_line": 325,
        "comment": "    \n     * Feature that determines whether {@link ObjectReader} should\n     * try to eagerly fetch necessary {@link JsonDeserializer} when\n     * possible. This improves performance in cases where similarly\n     * configured {@link ObjectReader} instance is used multiple\n     * times; and should not significantly affect single-use cases.\n     *<p>\n     * Note that there should not be any need to normally disable this\n     * feature: only consider that if there are actual perceived problems.\n     *<p>\n     * Feature is enabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#328",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "}",
        "begin_line": 328,
        "end_line": 328,
        "comment": "    \n     * Feature that determines whether {@link ObjectReader} should\n     * try to eagerly fetch necessary {@link JsonDeserializer} when\n     * possible. This improves performance in cases where similarly\n     * configured {@link ObjectReader} instance is used multiple\n     * times; and should not significantly affect single-use cases.\n     *<p>\n     * Note that there should not be any need to normally disable this\n     * feature: only consider that if there are actual perceived problems.\n     *<p>\n     * Feature is enabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature.unknown#331",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "signature": "com.fasterxml.jackson.databind.DeserializationFeature.unknown(...)",
        "snippet": "public boolean enabledByDefault() { int PROBE_START_LINE_328 = 328;",
        "begin_line": 331,
        "end_line": 331,
        "comment": "    \n     * Feature that determines whether {@link ObjectReader} should\n     * try to eagerly fetch necessary {@link JsonDeserializer} when\n     * possible. This improves performance in cases where similarly\n     * configured {@link ObjectReader} instance is used multiple\n     * times; and should not significantly affect single-use cases.\n     *<p>\n     * Note that there should not be any need to normally disable this\n     * feature: only consider that if there are actual perceived problems.\n     *<p>\n     * Feature is enabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
        "signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.unknown(...)",
        "snippet": "protected DefaultSerializerProvider() { super(); }",
        "begin_line": 58,
        "end_line": 58,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.unknown#494",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
        "signature": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.unknown(...)",
        "snippet": "public Impl() { super(); }",
        "begin_line": 494,
        "end_line": 494,
        "comment": "    \n     * Concrete implementation that defines factory method(s),\n     * defined as final.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#90",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "",
        "begin_line": 90,
        "end_line": 90,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#91",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "protected BasicBeanDescription(MapperConfig<?> config,",
        "begin_line": 91,
        "end_line": 91,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#92",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "JavaType type, AnnotatedClass classDef,",
        "begin_line": 92,
        "end_line": 92,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#93",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "List<BeanPropertyDefinition> props)",
        "begin_line": 93,
        "end_line": 93,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#94",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "{",
        "begin_line": 94,
        "end_line": 94,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#95",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "super(type);",
        "begin_line": 95,
        "end_line": 95,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#99",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "_config = p_config_1561_line_91;",
        "begin_line": 99,
        "end_line": 99,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#100",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "int PROBE_START_LINE_92 = 92;",
        "begin_line": 100,
        "end_line": 100,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#101",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "MapperConfig<?> p_config_1561_line_92 = config;",
        "begin_line": 101,
        "end_line": 101,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#109",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "? null",
        "begin_line": 109,
        "end_line": 109,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#110",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": ": basic_bean_description1_expr4_line_92;",
        "begin_line": 110,
        "end_line": 110,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#111",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "int PROBE_END_LINE_92 = 92;",
        "begin_line": 111,
        "end_line": 111,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#112",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "_annotationIntrospector = basic_bean_description1_expr2_line_92;",
        "begin_line": 112,
        "end_line": 112,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#113",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "int PROBE_START_LINE_93 = 93;",
        "begin_line": 113,
        "end_line": 113,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#114",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.introspect.AnnotatedClass p_class_def_1563_line_93 = classDef;",
        "begin_line": 114,
        "end_line": 114,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#137",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "*/",
        "begin_line": 137,
        "end_line": 137,
        "comment": "    \n     * Factory method to use for constructing an instance to use for building\n     * deserializers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#174",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "* Factory method to use for constructing an instance to use for building",
        "begin_line": 174,
        "end_line": 174,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#554",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "List<String> result = new ArrayList<String>(params.size());",
        "begin_line": 554,
        "end_line": 554,
        "comment": "    \n     * @deprecated Since 2.4, use {@link #findCreatorParameterNames()} instead.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#568",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "* thus properly ordered.",
        "begin_line": 568,
        "end_line": 568,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#569",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "*",
        "begin_line": 569,
        "end_line": 569,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#571",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "*/",
        "begin_line": 571,
        "end_line": 571,
        "comment": "    \n     * Method for getting ordered list of named Creator properties.\n     * Returns an empty list is none found. If multiple Creator\n     * methods are defined, order between properties from different\n     * methods is undefined; however, properties for each such\n     * Creator are ordered properly relative to each other.\n     * For the usual case of just a single Creator, named properties are\n     * thus properly ordered.\n     * \n     * @since 2.4\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#618",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.AnnotationIntrospector f__annotation_introspector_1566_line_554 = _annotationIntrospector;",
        "begin_line": 618,
        "end_line": 618,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown#619",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription.unknown(...)",
        "snippet": "boolean basic_bean_description1_expr22_line_554 = f__annotation_introspector_1566_line_554 == null;",
        "begin_line": 619,
        "end_line": 619,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown#34",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown(...)",
        "snippet": "* as {@link Object} in some case)",
        "begin_line": 34,
        "end_line": 34,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown#35",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown(...)",
        "snippet": "*/",
        "begin_line": 35,
        "end_line": 35,
        "comment": "    \n     * Type of values this deserializer handles: sometimes\n     * exact types, other time most specific supertype of\n     * types deserializer handles (which may be as generic\n     * as {@link Object} in some case)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown(...)",
        "snippet": "final protected Class<?> _valueClass;",
        "begin_line": 36,
        "end_line": 36,
        "comment": "    \n     * Type of values this deserializer handles: sometimes\n     * exact types, other time most specific supertype of\n     * types deserializer handles (which may be as generic\n     * as {@link Object} in some case)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown#77",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown(...)",
        "snippet": "/**",
        "begin_line": 77,
        "end_line": 77,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown#865",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown(...)",
        "snippet": "* of structured types; array/List/Map values)",
        "begin_line": 865,
        "end_line": 865,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown#866",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown(...)",
        "snippet": "*",
        "begin_line": 866,
        "end_line": 866,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown#877",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdDeserializer.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.DeserializationContext p_ctxt_1398_line_865 = ctxt;",
        "begin_line": 877,
        "end_line": 877,
        "comment": "    \n     * Helper method that can be used to see if specified property has annotation\n     * indicating that a converter is to be used for contained values (contents\n     * of structured types; array/List/Map values)\n     * \n     * @param existingDeserializer (optional) configured content\n     *    serializer if one already exists.\n     * \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#37",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n * Class used for creating concrete {@link JavaType} instances,\n * given various inputs.\n *<p>\n * Instances of this class are accessible using {@link com.fasterxml.jackson.databind.ObjectMapper}\n * as well as many objects it constructs (like\n* {@link com.fasterxml.jackson.databind.DeserializationConfig} and\n * {@link com.fasterxml.jackson.databind.SerializationConfig})),\n * but usually those objects also \n * expose convenience methods (<code>constructType</code>).\n * So, you can do for example:\n *<pre>\n *   JavaType stringType = mapper.constructType(String.class);\n *</pre>\n * However, more advanced methods are only exposed by factory so that you\n * may need to use:\n *<pre>\n *   JavaType stringCollection = mapper.getTypeFactory().constructCollectionType(List.class, String.class);\n *</pre>\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#44",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "*/",
        "begin_line": 44,
        "end_line": 44,
        "comment": "    \n     * Globally shared singleton. Not accessed directly; non-core\n     * code should use per-ObjectMapper instance (via configuration objects).\n     * Core Jackson code uses {@link #defaultInstance} for accessing it.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#56",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "",
        "begin_line": 56,
        "end_line": 56,
        "comment": "       parts of processing",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#57",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "protected final static SimpleType CORE_TYPE_STRING = new SimpleType(String.class);",
        "begin_line": 57,
        "end_line": 57,
        "comment": "       parts of processing",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_57 = 57;",
        "begin_line": 58,
        "end_line": 58,
        "comment": "       parts of processing",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#59",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "",
        "begin_line": 59,
        "end_line": 59,
        "comment": "       parts of processing",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#66",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "",
        "begin_line": 66,
        "end_line": 66,
        "comment": "       parts of processing",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#106",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 106,
        "end_line": 106,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#107",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "/* Configuration",
        "begin_line": 107,
        "end_line": 107,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#108",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 108,
        "end_line": 108,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#109",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "*/",
        "begin_line": 109,
        "end_line": 109,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#129",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "",
        "begin_line": 129,
        "end_line": 129,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#337",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "if (type2 == null) {",
        "begin_line": 337,
        "end_line": 337,
        "comment": "    \n     * Method that can be called to figure out more specific of two\n     * types (if they are related; that is, one implements or extends the\n     * other); or if not related, return the primary type.\n     * \n     * @param type1 Primary type to consider\n     * @param type2 Secondary type to consider\n     * \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#341",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "Class<?> raw2 = type2.getRawClass();",
        "begin_line": 341,
        "end_line": 341,
        "comment": "    \n     * Method that can be called to figure out more specific of two\n     * types (if they are related; that is, one implements or extends the\n     * other); or if not related, return the primary type.\n     * \n     * @param type1 Primary type to consider\n     * @param type2 Secondary type to consider\n     * \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#368",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_341 = 341;",
        "begin_line": 368,
        "end_line": 368,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#369",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "java.lang.reflect.Type p_type_2500_line_341 = type;",
        "begin_line": 369,
        "end_line": 369,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#370",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.type.TypeBindings p_bindings_2501_line_341 = bindings;",
        "begin_line": 370,
        "end_line": 370,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#371",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.JavaType type_factory1_expr14_line_341 = _constructType(p_type_2500_line_341,",
        "begin_line": 371,
        "end_line": 371,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#395",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "*/",
        "begin_line": 395,
        "end_line": 395,
        "comment": "    \n     * Factory method that can be used if type information is passed\n     * as Java typing returned from <code>getGenericXxx</code> methods\n     * (usually for a return or argument type).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#400",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_368 = 390;",
        "begin_line": 400,
        "end_line": 400,
        "comment": "    \n     * Factory method that can be used if type information is passed\n     * as Java typing returned from <code>getGenericXxx</code> methods\n     * (usually for a return or argument type).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#536",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "return MapType.construct(mapClass, keyType, valueType);",
        "begin_line": 536,
        "end_line": 536,
        "comment": "    \n     * Method for constructing a {@link MapType} instance\n     *<p>\n     * NOTE: type modifiers are NOT called on constructed type itself; but are called\n     * for contained types.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#683",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "*/",
        "begin_line": 683,
        "end_line": 683,
        "comment": "    \n     * Method that can be used to construct \"raw\" Collection type; meaning that its\n     * parameterization is unknown.\n     * This is similar to using <code>Object.class</code> parameterization,\n     * and is equivalent to calling:\n     *<pre>\n     *  typeFactory.constructCollectionType(collectionClass, typeFactory.unknownType());\n     *<pre>\n     *<p>\n     * This method should only be used if parameterization is completely unavailable.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#684",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "public CollectionType constructRawCollectionType(Class<? extends Collection> collectionClass) {",
        "begin_line": 684,
        "end_line": 684,
        "comment": "    \n     * Method that can be used to construct \"raw\" Collection type; meaning that its\n     * parameterization is unknown.\n     * This is similar to using <code>Object.class</code> parameterization,\n     * and is equivalent to calling:\n     *<pre>\n     *  typeFactory.constructCollectionType(collectionClass, typeFactory.unknownType());\n     *<pre>\n     *<p>\n     * This method should only be used if parameterization is completely unavailable.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#685",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "return CollectionType.construct(collectionClass, unknownType());",
        "begin_line": 685,
        "end_line": 685,
        "comment": "    \n     * Method that can be used to construct \"raw\" Collection type; meaning that its\n     * parameterization is unknown.\n     * This is similar to using <code>Object.class</code> parameterization,\n     * and is equivalent to calling:\n     *<pre>\n     *  typeFactory.constructCollectionType(collectionClass, typeFactory.unknownType());\n     *<pre>\n     *<p>\n     * This method should only be used if parameterization is completely unavailable.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#686",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "}",
        "begin_line": 686,
        "end_line": 686,
        "comment": "    \n     * Method that can be used to construct \"raw\" Collection type; meaning that its\n     * parameterization is unknown.\n     * This is similar to using <code>Object.class</code> parameterization,\n     * and is equivalent to calling:\n     *<pre>\n     *  typeFactory.constructCollectionType(collectionClass, typeFactory.unknownType());\n     *<pre>\n     *<p>\n     * This method should only be used if parameterization is completely unavailable.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#689",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "* Method that can be used to construct \"raw\" Collection-like type; meaning that its",
        "begin_line": 689,
        "end_line": 689,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#690",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "* parameterization is unknown.",
        "begin_line": 690,
        "end_line": 690,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#691",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "* This is similar to using <code>Object.class</code> parameterization,",
        "begin_line": 691,
        "end_line": 691,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#692",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "* and is equivalent to calling:",
        "begin_line": 692,
        "end_line": 692,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#703",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "/**",
        "begin_line": 703,
        "end_line": 703,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#704",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "* Method that can be used to construct \"raw\" Map type; meaning that its",
        "begin_line": 704,
        "end_line": 704,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#721",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "* This is similar to using <code>Object.class</code> parameterization,",
        "begin_line": 721,
        "end_line": 721,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeFactory.unknown#722",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeFactory",
        "signature": "com.fasterxml.jackson.databind.type.TypeFactory.unknown(...)",
        "snippet": "* and is equivalent to calling:",
        "begin_line": 722,
        "end_line": 722,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "int PROBE_START_LINE_28 = 28;",
        "begin_line": 28,
        "end_line": 28,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#84",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "* Constructor used when creating a new instance (compared to",
        "begin_line": 84,
        "end_line": 84,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#85",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "* that of creating fluent copies)",
        "begin_line": 85,
        "end_line": 85,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#86",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "*/",
        "begin_line": 86,
        "end_line": 86,
        "comment": "    \n     * Constructor used when creating a new instance (compared to\n     * that of creating fluent copies)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#87",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "protected MapperConfigBase(BaseSettings base,",
        "begin_line": 87,
        "end_line": 87,
        "comment": "    \n     * Constructor used when creating a new instance (compared to\n     * that of creating fluent copies)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#88",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "SubtypeResolver str, Map<ClassKey,Class<?>> mixins)",
        "begin_line": 88,
        "end_line": 88,
        "comment": "    \n     * Constructor used when creating a new instance (compared to\n     * that of creating fluent copies)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#90",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "super(base, DEFAULT_MAPPER_FEATURES);",
        "begin_line": 90,
        "end_line": 90,
        "comment": "    \n     * Constructor used when creating a new instance (compared to\n     * that of creating fluent copies)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#91",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "int PROBE_START_LINE_85 = 85;",
        "begin_line": 91,
        "end_line": 91,
        "comment": "    \n     * Constructor used when creating a new instance (compared to\n     * that of creating fluent copies)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#384",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "/**",
        "begin_line": 384,
        "end_line": 384,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#389",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "@Override",
        "begin_line": 389,
        "end_line": 389,
        "comment": "    \n     * Accessor for object used for finding out all reachable subtypes\n     * for supertypes; needed when a logical type name is used instead\n     * of class name (or custom scheme).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown#404",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfigBase.unknown(...)",
        "snippet": "}",
        "begin_line": 404,
        "end_line": 404,
        "comment": "    \n     * Accessor for object used for finding out all reachable subtypes\n     * for supertypes; needed when a logical type name is used instead\n     * of class name (or custom scheme).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#32",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "super(emptyInstance.getClass(), componentType.hashCode(),",
        "begin_line": 32,
        "end_line": 32,
        "comment": "    \n     * We will also keep track of shareable instance of empty array,\n     * since it usually needs to be constructed any way; and because\n     * it is essentially immutable and thus can be shared.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#34",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "int PROBE_START_LINE_34 = 34;",
        "begin_line": 34,
        "end_line": 34,
        "comment": "    \n     * We will also keep track of shareable instance of empty array,\n     * since it usually needs to be constructed any way; and because\n     * it is essentially immutable and thus can be shared.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#35",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.JavaType p_component_type_2401_line_34 = componentType;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "    \n     * We will also keep track of shareable instance of empty array,\n     * since it usually needs to be constructed any way; and because\n     * it is essentially immutable and thus can be shared.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "int PROBE_END_LINE_34 = 34;",
        "begin_line": 36,
        "end_line": 36,
        "comment": "    \n     * We will also keep track of shareable instance of empty array,\n     * since it usually needs to be constructed any way; and because\n     * it is essentially immutable and thus can be shared.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#47",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "int PROBE_START_LINE_47 = 47;",
        "begin_line": 47,
        "end_line": 47,
        "comment": "    \n     * We will also keep track of shareable instance of empty array,\n     * since it usually needs to be constructed any way; and because\n     * it is essentially immutable and thus can be shared.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#48",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.JavaType p_component_type_2408_line_47 = componentType;",
        "begin_line": 48,
        "end_line": 48,
        "comment": "    \n     * We will also keep track of shareable instance of empty array,\n     * since it usually needs to be constructed any way; and because\n     * it is essentially immutable and thus can be shared.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#168",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "// Can do a quick check first:",
        "begin_line": 168,
        "end_line": 168,
        "comment": "         Can do a quick check first:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#176",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "/*",
        "begin_line": 176,
        "end_line": 176,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#211",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "* super types.",
        "begin_line": 211,
        "end_line": 211,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ArrayType.unknown#214",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ArrayType.java",
        "class_name": "com.fasterxml.jackson.databind.type.ArrayType",
        "signature": "com.fasterxml.jackson.databind.type.ArrayType.unknown(...)",
        "snippet": "public String containedTypeName(int index) {",
        "begin_line": 214,
        "end_line": 214,
        "comment": "    \n     * Not sure what symbolic name is used internally, if any;\n     * let's follow naming of Collection types here.\n     * Should not really matter since array types have no\n     * super types.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "public LRUMap(int initialEntries, int maxEntries)",
        "begin_line": 36,
        "end_line": 36,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#37",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "{",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "super(initialEntries, 0.8f, true);",
        "begin_line": 38,
        "end_line": 38,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#39",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "int PROBE_START_LINE_37 = 37;",
        "begin_line": 39,
        "end_line": 39,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#40",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "int p_max_entries_2638_line_37 = maxEntries;",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#41",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "int PROBE_END_LINE_37 = 37;",
        "begin_line": 41,
        "end_line": 41,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#45",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "java.util.concurrent.locks.ReentrantReadWriteLock v_rwl_2640_line_39 = rwl;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#56",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "}",
        "begin_line": 56,
        "end_line": 56,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "@Override",
        "begin_line": 58,
        "end_line": 58,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#60",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "int PROBE_START_LINE_45 = 45;",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#66",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "}",
        "begin_line": 66,
        "end_line": 66,
        "comment": "\n * Helper for simple bounded LRU maps used for reusing lookup values.\n *<p>\n * Note that serialization behavior is such that contents are NOT serialized,\n * on assumption that all use cases are for caching where persistence\n * does not make sense. The only thing serialized is the cache size of Map.\n *<p>\n * NOTE: the only reason we extend {@link LinkedHashMap} instead of aggregating\n * it is that this way we can override {@link #removeEldestEntry}.\n * Access, however, MUST be done using single-element access methods (or matching\n * <code>xxxAll()</code> methods that call them); access via iterators are not\n * guaranteed to work.\n *<p>\n * NOTE: since version 2.4, uses {@link ReentrantReadWriteLock} to improve\n * concurrent access.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#68",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "/*",
        "begin_line": 68,
        "end_line": 68,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.LRUMap.unknown#70",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/LRUMap.java",
        "class_name": "com.fasterxml.jackson.databind.util.LRUMap",
        "signature": "com.fasterxml.jackson.databind.util.LRUMap.unknown(...)",
        "snippet": "/* Overrides to support proper concurrency",
        "begin_line": 70,
        "end_line": 70,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializers.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers.unknown(...)",
        "snippet": "public class StdKeyDeserializers",
        "begin_line": 28,
        "end_line": 28,
        "comment": "\n * Helper class used to contain simple/well-known key deserializers.\n * Following kinds of Objects can be handled currently:\n *<ul>\n * <li>Primitive wrappers (Boolean, Byte, Char, Short, Integer, Float, Long, Double)</li>\n * <li>Enums (usually not needed, since EnumMap doesn't call us)</li>\n * <li>{@link java.util.Date}</li>\n * <li>{@link java.util.Calendar}</li>\n * <li>{@link java.util.UUID}</li>\n * <li>{@link java.util.Locale}</li>\n * <li>Anything with constructor that takes a single String arg\n *   (if not explicitly @JsonIgnore'd)</li>\n * <li>Anything with {@code static T valueOf(String)} factory method\n *   (if not explicitly @JsonIgnore'd)</li>\n *</ul>\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JsonSerializer.unknown#49",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JsonSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.JsonSerializer",
        "signature": "com.fasterxml.jackson.databind.JsonSerializer.unknown(...)",
        "snippet": "public abstract class JsonSerializer<T>",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n * Abstract class that defines API used by {@link ObjectMapper} (and\n * other chained {@link JsonSerializer}s too) to serialize Objects of\n * arbitrary types into JSON, using provided {@link JsonGenerator}.\n * {@link com.fasterxml.jackson.databind.ser.std.StdSerializer} instead\n * of this class, since it will implement many of optional\n * methods of this class.\n *<p>\n * NOTE: various <code>serialize</code> methods are never (to be) called\n * with null values -- caller <b>must</b> handle null values, usually\n * by calling {@link SerializerProvider#findNullValueSerializer} to obtain\n * serializer to use.\n * This also means that custom serializers can not be directly used to change\n * the output to produce when serializing null values.\n *<p>\n * If serializer is an aggregate one -- meaning it delegates handling of some\n * of its contents by using other serializer(s) -- it typically also needs\n * to implement {@link com.fasterxml.jackson.databind.ser.ResolvableSerializer},\n * which can locate secondary serializers needed. This is important to allow dynamic\n * overrides of serializers; separate call interface is needed to separate\n * resolution of secondary serializers (which may have cyclic link back\n * to serializer itself, directly or indirectly).\n *<p>\n * In addition, to support per-property annotations (to configure aspects\n * of serialization on per-property basis), serializers may want\n * to implement \n * {@link com.fasterxml.jackson.databind.ser.ContextualSerializer},\n * which allows specialization of serializers: call to\n * {@link com.fasterxml.jackson.databind.ser.ContextualSerializer#createContextual}\n * is passed information on property, and can create a newly configured\n * serializer for handling that particular property.\n *<p>\n * If both\n * {@link com.fasterxml.jackson.databind.ser.ResolvableSerializer} and\n * {@link com.fasterxml.jackson.databind.ser.ContextualSerializer}\n * are implemented, resolution of serializers occurs before\n * contextualization.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JsonSerializer.unknown#241",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JsonSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.JsonSerializer",
        "signature": "com.fasterxml.jackson.databind.JsonSerializer.unknown(...)",
        "snippet": "public abstract static class None",
        "begin_line": 241,
        "end_line": 241,
        "comment": "    \n     * This marker class is only to be used with annotations, to\n     * indicate that <b>no serializer is configured</b>.\n     *<p>\n     * Specifically, this class is to be used as the marker for\n     * annotation {@link com.fasterxml.jackson.databind.annotation.JsonSerialize}.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.unknown#17",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/impl/UnknownSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.unknown(...)",
        "snippet": "super(Object.class);",
        "begin_line": 17,
        "end_line": 17,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.unknown#18",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/impl/UnknownSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.unknown(...)",
        "snippet": "}",
        "begin_line": 18,
        "end_line": 18,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#17",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "implements java.io.Serializable // since 2.1",
        "begin_line": 17,
        "end_line": 17,
        "comment": "\n * Configuration settings container class for {@link DeserializerFactory}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#18",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "{",
        "begin_line": 18,
        "end_line": 18,
        "comment": "\n * Configuration settings container class for {@link DeserializerFactory}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#19",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "private static final long serialVersionUID = 3683541151102256824L;",
        "begin_line": 19,
        "end_line": 19,
        "comment": "\n * Configuration settings container class for {@link DeserializerFactory}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#20",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "",
        "begin_line": 20,
        "end_line": 20,
        "comment": "\n * Configuration settings container class for {@link DeserializerFactory}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "* of key deserializers.",
        "begin_line": 28,
        "end_line": 28,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#72",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "* Constructor for creating basic configuration with no additional",
        "begin_line": 72,
        "end_line": 72,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#73",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "* handlers.",
        "begin_line": 73,
        "end_line": 73,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#84",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "KeyDeserializers[] allAdditionalKeyDeserializers,",
        "begin_line": 84,
        "end_line": 84,
        "comment": "    \n     * Copy-constructor that will create an instance that contains defined\n     * set of additional deserializer providers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#85",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "BeanDeserializerModifier[] modifiers,",
        "begin_line": 85,
        "end_line": 85,
        "comment": "    \n     * Copy-constructor that will create an instance that contains defined\n     * set of additional deserializer providers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#87",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "ValueInstantiators[] vi)",
        "begin_line": 87,
        "end_line": 87,
        "comment": "    \n     * Copy-constructor that will create an instance that contains defined\n     * set of additional deserializer providers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#89",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "int PROBE_START_LINE_85 = 86;",
        "begin_line": 89,
        "end_line": 89,
        "comment": "    \n     * Copy-constructor that will create an instance that contains defined\n     * set of additional deserializer providers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#90",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.deser.Deserializers[] p_all_additional_deserializers_874_line_85 = allAdditionalDeserializers;",
        "begin_line": 90,
        "end_line": 90,
        "comment": "    \n     * Copy-constructor that will create an instance that contains defined\n     * set of additional deserializer providers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#91",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "boolean deserializer_factory_config1_expr9_line_85 = p_all_additional_deserializers_874_line_85 == null;",
        "begin_line": 91,
        "end_line": 91,
        "comment": "    \n     * Copy-constructor that will create an instance that contains defined\n     * set of additional deserializer providers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#92",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "boolean deserializer_factory_config1_expr8_line_85 = (deserializer_factory_config1_expr9_line_85);",
        "begin_line": 92,
        "end_line": 92,
        "comment": "    \n     * Copy-constructor that will create an instance that contains defined\n     * set of additional deserializer providers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown#189",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.unknown(...)",
        "snippet": "}",
        "begin_line": 189,
        "end_line": 189,
        "comment": "    \n     * Fluent/factory method used to construct a configuration object that\n     * has same configuration as this instance plus one additional\n     * deserialiazer modifier. Added modifier has the highest priority (that is, it\n     * gets called before any already registered modifier).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.BeanDescription.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/BeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.BeanDescription",
        "signature": "com.fasterxml.jackson.databind.BeanDescription.unknown(...)",
        "snippet": "protected BeanDescription(JavaType type) {",
        "begin_line": 42,
        "end_line": 42,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.BeanDescription.unknown#43",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/BeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.BeanDescription",
        "signature": "com.fasterxml.jackson.databind.BeanDescription.unknown(...)",
        "snippet": "int PROBE_START_LINE_43 = 43;",
        "begin_line": 43,
        "end_line": 43,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.BeanDescription.unknown#44",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/BeanDescription.java",
        "class_name": "com.fasterxml.jackson.databind.BeanDescription",
        "signature": "com.fasterxml.jackson.databind.BeanDescription.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.JavaType p_type_82_line_43 = type;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JsonDeserializer.unknown#45",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JsonDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.JsonDeserializer",
        "signature": "com.fasterxml.jackson.databind.JsonDeserializer.unknown(...)",
        "snippet": "public abstract class JsonDeserializer<T>",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n * Abstract class that defines API used by {@link ObjectMapper} (and\n * other chained {@link JsonDeserializer}s too) to deserialize Objects of\n * arbitrary types from JSON, using provided {@link JsonParser}.\n *<p>\n * Custom deserializers should usually not directly extend this class,\n * but instead extend {@link com.fasterxml.jackson.databind.deser.std.StdDeserializer}\n * (or its subtypes like {@link com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer}).\n *<p>\n * If deserializer is an aggregate one -- meaning it delegates handling of some\n * of its contents by using other deserializer(s) -- it typically also needs\n * to implement {@link com.fasterxml.jackson.databind.deser.ResolvableDeserializer},\n * which can locate dependant deserializers. This is important to allow dynamic\n * overrides of deserializers; separate call interface is needed to separate\n * resolution of dependant deserializers (which may have cyclic link back\n * to deserializer itself, directly or indirectly).\n *<p>\n * In addition, to support per-property annotations (to configure aspects\n * of deserialization on per-property basis), deserializers may want\n * to implement \n * {@link com.fasterxml.jackson.databind.deser.ContextualDeserializer},\n * which allows specialization of deserializers: call to\n * {@link com.fasterxml.jackson.databind.deser.ContextualDeserializer#createContextual}\n * is passed information on property, and can create a newly configured\n * deserializer for handling that particular property.\n *<p>\n * If both\n * {@link com.fasterxml.jackson.databind.deser.ResolvableDeserializer} and\n * {@link com.fasterxml.jackson.databind.deser.ContextualDeserializer}\n * are implemented, resolution of deserializers occurs before\n * contextualization.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JsonDeserializer.unknown#264",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JsonDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.JsonDeserializer",
        "signature": "com.fasterxml.jackson.databind.JsonDeserializer.unknown(...)",
        "snippet": "public boolean isCachable() { return false; }",
        "begin_line": 264,
        "end_line": 264,
        "comment": "    \n     * Method called to see if deserializer instance is cachable and\n     * usable for other properties of same type (type for which instance\n     * was created).\n     *<p>\n     * Note that cached instances are still resolved on per-property basis,\n     * if instance implements {@link com.fasterxml.jackson.databind.deser.ResolvableDeserializer}:\n     * cached instance is just as the base. This means that in most cases it is safe to\n     * cache instances; however, it only makes sense to cache instances\n     * if instantiation is expensive, or if instances are heavy-weight.\n     *<p>\n     * Default implementation returns false, to indicate that no caching\n     * is done.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JsonDeserializer.unknown#327",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JsonDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.JsonDeserializer",
        "signature": "com.fasterxml.jackson.databind.JsonDeserializer.unknown(...)",
        "snippet": "public abstract static class None extends JsonDeserializer<Object> {",
        "begin_line": 327,
        "end_line": 327,
        "comment": "    \n     * This marker class is only to be used with annotations, to\n     * indicate that <b>no deserializer is configured</b>.\n     *<p>\n     * Specifically, this class is to be used as the marker for\n     * annotation {@link com.fasterxml.jackson.databind.annotation.JsonDeserialize}\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.UUIDSerializer.unknown#21",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/UUIDSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.UUIDSerializer.unknown(...)",
        "snippet": "int PROBE_START_LINE_21 = 21;",
        "begin_line": 21,
        "end_line": 21,
        "comment": "\n * Specialized {@link JsonSerializer} to output {@link java.util.UUID}s.\n * Beyond optimized access and writing of textual representation (which\n * is the default handling in most cases), it will alternatively\n * allow serialization using raw binary output (as 16-byte block)\n * if underlying data format has efficient means to access that.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.UUIDSerializer.unknown#23",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/UUIDSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.UUIDSerializer.unknown(...)",
        "snippet": "static final char[] uuidserializer1_expr1_line_21 = \"0123456789abcdef\".toCharArray();",
        "begin_line": 23,
        "end_line": 23,
        "comment": "\n * Specialized {@link JsonSerializer} to output {@link java.util.UUID}s.\n * Beyond optimized access and writing of textual representation (which\n * is the default handling in most cases), it will alternatively\n * allow serialization using raw binary output (as 16-byte block)\n * if underlying data format has efficient means to access that.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.PropertyName.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/PropertyName.java",
        "class_name": "com.fasterxml.jackson.databind.PropertyName",
        "signature": "com.fasterxml.jackson.databind.PropertyName.unknown(...)",
        "snippet": "/**",
        "begin_line": 28,
        "end_line": 28,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.PropertyName.unknown#35",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/PropertyName.java",
        "class_name": "com.fasterxml.jackson.databind.PropertyName",
        "signature": "com.fasterxml.jackson.databind.PropertyName.unknown(...)",
        "snippet": "",
        "begin_line": 35,
        "end_line": 35,
        "comment": "\t\n     * Special placeholder value that indicates that name to use should be\n     * based on the standard heuristics. This can be different from returning\n     * null, as null means \"no information available, whereas this value\n     * indicates explicit defaulting.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.PropertyName.unknown#60",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/PropertyName.java",
        "class_name": "com.fasterxml.jackson.databind.PropertyName",
        "signature": "com.fasterxml.jackson.databind.PropertyName.unknown(...)",
        "snippet": "/**",
        "begin_line": 60,
        "end_line": 60,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.PropertyName.unknown#61",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/PropertyName.java",
        "class_name": "com.fasterxml.jackson.databind.PropertyName",
        "signature": "com.fasterxml.jackson.databind.PropertyName.unknown(...)",
        "snippet": "* Lazily-constructed efficient representation of the simple name.",
        "begin_line": 61,
        "end_line": 61,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.PropertyName.unknown#64",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/PropertyName.java",
        "class_name": "com.fasterxml.jackson.databind.PropertyName",
        "signature": "com.fasterxml.jackson.databind.PropertyName.unknown(...)",
        "snippet": "* concurrent access in multi-core environments; due to statelessness",
        "begin_line": 64,
        "end_line": 64,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.PropertyName.unknown#65",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/PropertyName.java",
        "class_name": "com.fasterxml.jackson.databind.PropertyName",
        "signature": "com.fasterxml.jackson.databind.PropertyName.unknown(...)",
        "snippet": "* of {@link SerializedString} at most leads to multiple instantiations.",
        "begin_line": 65,
        "end_line": 65,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.PropertyName.unknown#66",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/PropertyName.java",
        "class_name": "com.fasterxml.jackson.databind.PropertyName",
        "signature": "com.fasterxml.jackson.databind.PropertyName.unknown(...)",
        "snippet": "*",
        "begin_line": 66,
        "end_line": 66,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.PropertyName.unknown#67",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/PropertyName.java",
        "class_name": "com.fasterxml.jackson.databind.PropertyName",
        "signature": "com.fasterxml.jackson.databind.PropertyName.unknown(...)",
        "snippet": "* @since 2.4",
        "begin_line": 67,
        "end_line": 67,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.unknown#19",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.unknown(...)",
        "snippet": "super(t);",
        "begin_line": 19,
        "end_line": 19,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.unknown#20",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer.unknown(...)",
        "snippet": "}",
        "begin_line": 20,
        "end_line": 20,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeBase.unknown#39",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeBase.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
        "signature": "com.fasterxml.jackson.databind.type.TypeBase.unknown(...)",
        "snippet": "super(raw, hash, valueHandler, typeHandler, asStatic);",
        "begin_line": 39,
        "end_line": 39,
        "comment": "    \n     * Main constructor to use by extending classes.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeBase.unknown#40",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeBase.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
        "signature": "com.fasterxml.jackson.databind.type.TypeBase.unknown(...)",
        "snippet": "}",
        "begin_line": 40,
        "end_line": 40,
        "comment": "    \n     * Main constructor to use by extending classes.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeBase.unknown#62",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeBase.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
        "signature": "com.fasterxml.jackson.databind.type.TypeBase.unknown(...)",
        "snippet": "public <T> T getValueHandler() { int PROBE_START_LINE_62 = 62;",
        "begin_line": 62,
        "end_line": 62,
        "comment": "    \n     * Main constructor to use by extending classes.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeBase.unknown#66",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeBase.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeBase",
        "signature": "com.fasterxml.jackson.databind.type.TypeBase.unknown(...)",
        "snippet": "",
        "begin_line": 66,
        "end_line": 66,
        "comment": "    \n     * Main constructor to use by extending classes.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#64",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "*/",
        "begin_line": 64,
        "end_line": 64,
        "comment": "    \n     * Prefix used by auto-detected mutators (\"setters\"): usually \"set\",\n     * but differs for builder objects (\"with\" by default).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#67",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "/*",
        "begin_line": 67,
        "end_line": 67,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#69",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "/* Collected property information",
        "begin_line": 69,
        "end_line": 69,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#71",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "*/",
        "begin_line": 71,
        "end_line": 71,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "protected final LinkedHashMap<String, POJOPropertyBuilder> _properties",
        "begin_line": 76,
        "end_line": 76,
        "comment": "    \n     * Set of logical property information collected so far\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#100",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "* value injection.",
        "begin_line": 100,
        "end_line": 100,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#101",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "*/",
        "begin_line": 101,
        "end_line": 101,
        "comment": "    \n     * Lazily collected list of members that were annotated to\n     * indicate that they represent mutators for deserializer\n     * value injection.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#102",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "protected LinkedHashMap<Object, AnnotatedMember> _injectables;",
        "begin_line": 102,
        "end_line": 102,
        "comment": "    \n     * Lazily collected list of members that were annotated to\n     * indicate that they represent mutators for deserializer\n     * value injection.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#103",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "",
        "begin_line": 103,
        "end_line": 103,
        "comment": "    \n     * Lazily collected list of members that were annotated to\n     * indicate that they represent mutators for deserializer\n     * value injection.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#104",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "/*",
        "begin_line": 104,
        "end_line": 104,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#105",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 105,
        "end_line": 105,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#106",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "/* Life-cycle",
        "begin_line": 106,
        "end_line": 106,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#108",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "*/",
        "begin_line": 108,
        "end_line": 108,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#111",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "JavaType type, AnnotatedClass classDef, String mutatorPrefix)",
        "begin_line": 111,
        "end_line": 111,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#114",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "MapperConfig<?> p_config_1764_line_101 = config;",
        "begin_line": 114,
        "end_line": 114,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#123",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_END_LINE_103 = 103;",
        "begin_line": 123,
        "end_line": 123,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#127",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_END_LINE_104 = 104;",
        "begin_line": 127,
        "end_line": 127,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#131",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "boolean pojoproperties_collector1_expr5_line_105 = p_mutator_prefix_1768_line_105 == null;",
        "begin_line": 131,
        "end_line": 131,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "boolean pojoproperties_collector1_expr7_line_106 = p_config_1764_line_106.isAnnotationProcessingEnabled();",
        "begin_line": 140,
        "end_line": 140,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#144",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_END_LINE_106 = 107;",
        "begin_line": 144,
        "end_line": 144,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#150",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "if (pojoproperties_collector1_expr9_line_108) {",
        "begin_line": 150,
        "end_line": 150,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#158",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_END_LINE_111 = 112;",
        "begin_line": 158,
        "end_line": 158,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#175",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "",
        "begin_line": 175,
        "end_line": 175,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#182",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "",
        "begin_line": 182,
        "end_line": 182,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#190",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "public AnnotationIntrospector getAnnotationIntrospector() {",
        "begin_line": 190,
        "end_line": 190,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#199",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_END_LINE_140 = 140;",
        "begin_line": 199,
        "end_line": 199,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#202",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "}",
        "begin_line": 202,
        "end_line": 202,
        "comment": "\t\t make sure we return a copy, so caller can remove entries if need be:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#203",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "",
        "begin_line": 203,
        "end_line": 203,
        "comment": "\t\t make sure we return a copy, so caller can remove entries if need be:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#206",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "LinkedHashMap<Object, com.fasterxml.jackson.databind.introspect.AnnotatedMember> f__injectables_1776_line_144 = _injectables;",
        "begin_line": 206,
        "end_line": 206,
        "comment": "\t\t make sure we return a copy, so caller can remove entries if need be:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#234",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "+_anyGetters.get(1)+\")\");",
        "begin_line": 234,
        "end_line": 234,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#237",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "}",
        "begin_line": 237,
        "end_line": 237,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#238",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "return null;",
        "begin_line": 238,
        "end_line": 238,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#239",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "}",
        "begin_line": 239,
        "end_line": 239,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#240",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "",
        "begin_line": 240,
        "end_line": 240,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#243",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_START_LINE_175 = 181;",
        "begin_line": 243,
        "end_line": 243,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#246",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_END_LINE_175 = 181;",
        "begin_line": 246,
        "end_line": 246,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#248",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "if (_anySetters.size() > 1) {",
        "begin_line": 248,
        "end_line": 248,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#249",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "reportProblem(\"Multiple 'any-setters' defined (\"+_anySetters.get(0)+\" vs \"",
        "begin_line": 249,
        "end_line": 249,
        "comment": "             otherwise we won't greatly care",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#257",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "/**",
        "begin_line": 257,
        "end_line": 257,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#262",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_START_LINE_190 = 190;",
        "begin_line": 262,
        "end_line": 262,
        "comment": "    \n     * Accessor for set of properties that are explicitly marked to be ignored\n     * via per-property markers (but NOT class annotations).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#269",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "* Accessor to find out whether type specified requires inclusion",
        "begin_line": 269,
        "end_line": 269,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#274",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_START_LINE_199 = 201;",
        "begin_line": 274,
        "end_line": 274,
        "comment": "    \n     * Accessor to find out whether type specified requires inclusion\n     * of Object Identifier.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#275",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.AnnotationIntrospector f__annotation_introspector_1774_line_199 = _annotationIntrospector;",
        "begin_line": 275,
        "end_line": 275,
        "comment": "    \n     * Accessor to find out whether type specified requires inclusion\n     * of Object Identifier.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#290",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "boolean pojoproperties_collector1_expr18_line_203 = v_info_1778_line_203 != null;",
        "begin_line": 290,
        "end_line": 290,
        "comment": "    \n     * Accessor to find out whether type specified requires inclusion\n     * of Object Identifier.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#292",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "if (pojoproperties_collector1_expr18_line_203) { // 2.1: may also have different defaults for refs:",
        "begin_line": 292,
        "end_line": 292,
        "comment": "    \n     * Accessor to find out whether type specified requires inclusion\n     * of Object Identifier.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#294",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "}",
        "begin_line": 294,
        "end_line": 294,
        "comment": "    \n     * Accessor to find out whether type specified requires inclusion\n     * of Object Identifier.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#295",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_START_LINE_206 = 206;",
        "begin_line": 295,
        "end_line": 295,
        "comment": "    \n     * Accessor to find out whether type specified requires inclusion\n     * of Object Identifier.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#299",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "}",
        "begin_line": 299,
        "end_line": 299,
        "comment": "    \n     * Accessor to find out whether type specified requires inclusion\n     * of Object Identifier.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#302",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "* Method for finding Class to use as POJO builder, if any.",
        "begin_line": 302,
        "end_line": 302,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#303",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "*/",
        "begin_line": 303,
        "end_line": 303,
        "comment": "    \n     * Method for finding Class to use as POJO builder, if any.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#377",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "",
        "begin_line": 377,
        "end_line": 377,
        "comment": "\t\t and then \"merge\" annotations",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#382",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": ".isEnabled(f_use_wrapper_name_as_property_name_1782_line_269);",
        "begin_line": 382,
        "end_line": 382,
        "comment": "\t\t and then \"merge\" annotations",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#384",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "/* and, if required, apply wrapper name: note, MUST be done after",
        "begin_line": 384,
        "end_line": 384,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#427",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "Boolean alpha = pojoproperties_collector1_expr33_line_292;",
        "begin_line": 427,
        "end_line": 427,
        "comment": "\t\t Then how about explicit ordering?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#435",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "MapperConfig<?> f__config_1769_line_295 = _config;",
        "begin_line": 435,
        "end_line": 435,
        "comment": "\t\t Then how about explicit ordering?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#436",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "boolean pojoproperties_collector1_expr39_line_295 = f__config_1769_line_295",
        "begin_line": 436,
        "end_line": 436,
        "comment": "\t\t Then how about explicit ordering?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#444",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.AnnotationIntrospector v_intr_1783_line_299 = intr;",
        "begin_line": 444,
        "end_line": 444,
        "comment": "\t\t Then how about explicit ordering?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#453",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "? null",
        "begin_line": 453,
        "end_line": 453,
        "comment": "\t\t Then how about explicit ordering?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#500",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "w = prop;",
        "begin_line": 500,
        "end_line": 500,
        "comment": "         Ok: primarily by explicit order",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#502",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "name = prop.getName();",
        "begin_line": 502,
        "end_line": 502,
        "comment": "                             plus re-map to external name, to avoid dups:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#522",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "new TreeMap<String,POJOPropertyBuilder>();",
        "begin_line": 522,
        "end_line": 522,
        "comment": "            /* As per [Issue#311], this is bit delicate; but if alphabetic ordering\n             * is mandated, at least ensure creator properties are in alphabetic\n             * order. Related question of creator vs non-creator is punted for now,\n             * so creator properties still fully predate non-creator ones.\n             ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#628",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "*/",
        "begin_line": 628,
        "end_line": 628,
        "comment": "    \n     * Method for collecting basic information on constructor(s) found\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#629",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "protected void _addCreators()",
        "begin_line": 629,
        "end_line": 629,
        "comment": "    \n     * Method for collecting basic information on constructor(s) found\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#634",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "int PROBE_END_LINE_435 = 452;",
        "begin_line": 634,
        "end_line": 634,
        "comment": "    \n     * Method for collecting basic information on constructor(s) found\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#638",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.introspect.AnnotatedClass f__class_def_1772_line_436 = _classDef;",
        "begin_line": 638,
        "end_line": 638,
        "comment": "\t\t can be null if annotation processing is disabled...",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#647",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "_addCreatorParam(ctor.getParameter(i));",
        "begin_line": 647,
        "end_line": 647,
        "comment": "\t\t can be null if annotation processing is disabled...",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#681",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "* of this creator paramter -- may or may not be a problem, verified",
        "begin_line": 681,
        "end_line": 681,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#682",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "* at a later point.",
        "begin_line": 682,
        "end_line": 682,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#684",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "return;",
        "begin_line": 684,
        "end_line": 684,
        "comment": "                /* Important: if neither implicit nor explicit name, can not make use\n                 * of this creator paramter -- may or may not be a problem, verified\n                 * at a later point.\n                 ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#710",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "{",
        "begin_line": 710,
        "end_line": 710,
        "comment": "    \n     * Method for collecting basic information on all fields found\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#731",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "_addSetterMethod(m, ai);",
        "begin_line": 731,
        "end_line": 731,
        "comment": "            /* For methods, handling differs between getters and setters; and\n             * we will also only consider entries that either follow the bean\n             * naming convention or are explicitly marked: just being visible\n             * is not enough (unlike with fields)\n             ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#732",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "} else if (argCount == 2) { // any getter?",
        "begin_line": 732,
        "end_line": 732,
        "comment": "            /* For methods, handling differs between getters and setters; and\n             * we will also only consider entries that either follow the bean\n             * naming convention or are explicitly marked: just being visible\n             * is not enough (unlike with fields)\n             ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#733",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "if (ai != null  && ai.hasAnySetterAnnotation(m)) {",
        "begin_line": 733,
        "end_line": 733,
        "comment": "            /* For methods, handling differs between getters and setters; and\n             * we will also only consider entries that either follow the bean\n             * naming convention or are explicitly marked: just being visible\n             * is not enough (unlike with fields)\n             ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#769",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "boolean visible;",
        "begin_line": 769,
        "end_line": 769,
        "comment": "             @JsonValue?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#782",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "return;",
        "begin_line": 782,
        "end_line": 782,
        "comment": "             @JsonValue?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#909",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "*/",
        "begin_line": 909,
        "end_line": 909,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#911",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "/**",
        "begin_line": 911,
        "end_line": 911,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown#912",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
        "signature": "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.unknown(...)",
        "snippet": "* Method called to get rid of candidate properties that are marked",
        "begin_line": 912,
        "end_line": 912,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "*/",
        "begin_line": 28,
        "end_line": 28,
        "comment": "    \n     * Method called by {@link BasicSerializerFactory} to access\n     * all serializers this class provides.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#31",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "HashMap<Class<?>,Object> sers = new HashMap<Class<?>,Object>();",
        "begin_line": 31,
        "end_line": 31,
        "comment": "    \n     * Method called by {@link BasicSerializerFactory} to access\n     * all serializers this class provides.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#33",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "int PROBE_START_LINE_31 = 31;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "    \n     * Method called by {@link BasicSerializerFactory} to access\n     * all serializers this class provides.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#34",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "ToStringSerializer f_instance_1924_line_31 = ToStringSerializer.instance;",
        "begin_line": 34,
        "end_line": 34,
        "comment": "    \n     * Method called by {@link BasicSerializerFactory} to access\n     * all serializers this class provides.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "// First things that 'toString()' can handle",
        "begin_line": 36,
        "end_line": 36,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#37",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "final ToStringSerializer sls = f_instance_1924_line_31;",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "",
        "begin_line": 38,
        "end_line": 38,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#39",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "int PROBE_START_LINE_33 = 33;",
        "begin_line": 39,
        "end_line": 39,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "int PROBE_END_LINE_33 = 33;",
        "begin_line": 42,
        "end_line": 42,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#45",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "HashMap<Class<?>, Object> v_sers_2291_line_34 = sers;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#46",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer v_sls_2292_line_34 = sls;",
        "begin_line": 46,
        "end_line": 46,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#47",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "int PROBE_END_LINE_34 = 34;",
        "begin_line": 47,
        "end_line": 47,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#48",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "v_sers_2291_line_34.put(java.net.URI.class, v_sls_2292_line_34);",
        "begin_line": 48,
        "end_line": 48,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#51",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "HashMap<Class<?>, Object> v_sers_2291_line_36 = sers;",
        "begin_line": 51,
        "end_line": 51,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#52",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer v_sls_2292_line_36 = sls;",
        "begin_line": 52,
        "end_line": 52,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#55",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "int PROBE_START_LINE_37 = 37;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#56",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "HashMap<Class<?>, Object> v_sers_2291_line_37 = sers;",
        "begin_line": 56,
        "end_line": 56,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers.unknown(...)",
        "snippet": "v_sers_2291_line_37.put(UUID.class, new UUIDSerializer());",
        "begin_line": 58,
        "end_line": 58,
        "comment": "\t\t First things that 'toString()' can handle",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown#16",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedMethodMap.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown(...)",
        "snippet": "{",
        "begin_line": 16,
        "end_line": 16,
        "comment": "\n * Simple helper class used to keep track of collection of\n * {@link AnnotatedMethod}s, accessible by lookup. Lookup\n * is usually needed for augmenting and overriding annotations.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown#47",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedMethodMap.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown(...)",
        "snippet": "}",
        "begin_line": 47,
        "end_line": 47,
        "comment": "    \n     * Method called to remove specified method, assuming\n     * it exists in the Map\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown#79",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedMethodMap.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown(...)",
        "snippet": "if (_methods == null) {",
        "begin_line": 79,
        "end_line": 79,
        "comment": "    \n     * Method called to remove specified method, assuming\n     * it exists in the Map\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown#82",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedMethodMap.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown(...)",
        "snippet": "return _methods.get(new MemberKey(m));",
        "begin_line": 82,
        "end_line": 82,
        "comment": "    \n     * Method called to remove specified method, assuming\n     * it exists in the Map\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown#83",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedMethodMap.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.unknown(...)",
        "snippet": "}",
        "begin_line": 83,
        "end_line": 83,
        "comment": "    \n     * Method called to remove specified method, assuming\n     * it exists in the Map\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#19",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "* is stateless and reusable)",
        "begin_line": 19,
        "end_line": 19,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#21",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "protected final static Serializers[] NO_SERIALIZERS = new Serializers[0];",
        "begin_line": 21,
        "end_line": 21,
        "comment": "    \n     * Constant for empty <code>Serializers</code> array (which by definition\n     * is stateless and reusable)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "",
        "begin_line": 42,
        "end_line": 42,
        "comment": "    \n     * List of modifiers that can change the way {@link BeanSerializer} instances\n     * are configured and constructed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#43",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "public SerializerFactoryConfig() {",
        "begin_line": 43,
        "end_line": 43,
        "comment": "    \n     * List of modifiers that can change the way {@link BeanSerializer} instances\n     * are configured and constructed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#48",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "Serializers[] allAdditionalKeySerializers,",
        "begin_line": 48,
        "end_line": 48,
        "comment": "    \n     * List of modifiers that can change the way {@link BeanSerializer} instances\n     * are configured and constructed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#49",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "BeanSerializerModifier[] modifiers)",
        "begin_line": 49,
        "end_line": 49,
        "comment": "    \n     * List of modifiers that can change the way {@link BeanSerializer} instances\n     * are configured and constructed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#51",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "int PROBE_START_LINE_49 = 50;",
        "begin_line": 51,
        "end_line": 51,
        "comment": "    \n     * List of modifiers that can change the way {@link BeanSerializer} instances\n     * are configured and constructed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#53",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "boolean serializer_factory_config1_expr6_line_49 = p_all_additional_serializers_968_line_49 == null;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "    \n     * List of modifiers that can change the way {@link BeanSerializer} instances\n     * are configured and constructed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown#54",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.unknown(...)",
        "snippet": "boolean serializer_factory_config1_expr5_line_49 = (serializer_factory_config1_expr6_line_49);",
        "begin_line": 54,
        "end_line": 54,
        "comment": "    \n     * List of modifiers that can change the way {@link BeanSerializer} instances\n     * are configured and constructed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerFactory.unknown#41",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerFactory.unknown(...)",
        "snippet": "public abstract class DeserializerFactory",
        "begin_line": 41,
        "end_line": 41,
        "comment": "\n * Abstract class that defines API used by {@link DeserializationContext}\n * to construct actual\n * {@link JsonDeserializer} instances (which are then cached by\n * context and/or dedicated cache).\n *<p>\n * Since there are multiple broad categories of deserializers, there are \n * multiple factory methods:\n *<ul>\n * <li>For JSON \"Array\" type, we need 2 methods: one to deal with expected\n *   Java arrays ({@link #createArrayDeserializer})\n *   and the other for other Java containers like {@link java.util.List}s\n *   and {@link java.util.Set}s ({@link #createCollectionDeserializer}).\n *   Actually there is also a third method for \"Collection-like\" types;\n *   things like Scala collections that act like JDK collections but do not\n *   implement same interfaces.\n *  </li>\n * <li>For JSON \"Object\" type, we need 2 methods: one to deal with\n *   expected Java {@link java.util.Map}s\n *   ({@link #createMapDeserializer}), and another for POJOs\n *   ({@link #createBeanDeserializer}.\n *   As an additional twist there is also a callback for \"Map-like\" types,\n *   mostly to make it possible to support Scala Maps (which are NOT JDK\n *   Map compatible).\n *  </li>\n * <li>For Tree Model ({@link com.fasterxml.jackson.databind.JsonNode}) properties there is\n *    {@link #createTreeDeserializer}\n * <li>For enumerated types ({@link java.lang.Enum}) there is\n *    {@link #createEnumDeserializer}\n *  </li>\n * <li>For all other types, {@link #createBeanDeserializer} is used.\n * </ul>\n *<p>\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerFactory.unknown#43",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerFactory.unknown(...)",
        "snippet": "protected final static Deserializers[] NO_DESERIALIZERS = new Deserializers[0];",
        "begin_line": 43,
        "end_line": 43,
        "comment": "\n * Abstract class that defines API used by {@link DeserializationContext}\n * to construct actual\n * {@link JsonDeserializer} instances (which are then cached by\n * context and/or dedicated cache).\n *<p>\n * Since there are multiple broad categories of deserializers, there are \n * multiple factory methods:\n *<ul>\n * <li>For JSON \"Array\" type, we need 2 methods: one to deal with expected\n *   Java arrays ({@link #createArrayDeserializer})\n *   and the other for other Java containers like {@link java.util.List}s\n *   and {@link java.util.Set}s ({@link #createCollectionDeserializer}).\n *   Actually there is also a third method for \"Collection-like\" types;\n *   things like Scala collections that act like JDK collections but do not\n *   implement same interfaces.\n *  </li>\n * <li>For JSON \"Object\" type, we need 2 methods: one to deal with\n *   expected Java {@link java.util.Map}s\n *   ({@link #createMapDeserializer}), and another for POJOs\n *   ({@link #createBeanDeserializer}.\n *   As an additional twist there is also a callback for \"Map-like\" types,\n *   mostly to make it possible to support Scala Maps (which are NOT JDK\n *   Map compatible).\n *  </li>\n * <li>For Tree Model ({@link com.fasterxml.jackson.databind.JsonNode}) properties there is\n *    {@link #createTreeDeserializer}\n * <li>For enumerated types ({@link java.lang.Enum}) there is\n *    {@link #createEnumDeserializer}\n *  </li>\n * <li>For all other types, {@link #createBeanDeserializer} is used.\n * </ul>\n *<p>\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.RootNameLookup.unknown#21",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/RootNameLookup.java",
        "class_name": "com.fasterxml.jackson.databind.util.RootNameLookup",
        "signature": "com.fasterxml.jackson.databind.util.RootNameLookup.unknown(...)",
        "snippet": "public RootNameLookup() {",
        "begin_line": 21,
        "end_line": 21,
        "comment": "    \n     * For efficient operation, let's try to minimize number of times we\n     * need to introspect root element name to use.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.RootNameLookup.unknown#22",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/RootNameLookup.java",
        "class_name": "com.fasterxml.jackson.databind.util.RootNameLookup",
        "signature": "com.fasterxml.jackson.databind.util.RootNameLookup.unknown(...)",
        "snippet": "_rootNames = new LRUMap<ClassKey,PropertyName>(20, 200);",
        "begin_line": 22,
        "end_line": 22,
        "comment": "    \n     * For efficient operation, let's try to minimize number of times we\n     * need to introspect root element name to use.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.RootNameLookup.unknown#23",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/RootNameLookup.java",
        "class_name": "com.fasterxml.jackson.databind.util.RootNameLookup",
        "signature": "com.fasterxml.jackson.databind.util.RootNameLookup.unknown(...)",
        "snippet": "}",
        "begin_line": 23,
        "end_line": 23,
        "comment": "    \n     * For efficient operation, let's try to minimize number of times we\n     * need to introspect root element name to use.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "* (such as {@link java.util.Collection}).",
        "begin_line": 38,
        "end_line": 38,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#39",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "*<p>",
        "begin_line": 39,
        "end_line": 39,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#40",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "* Since all simple deserializers are eagerly instantiated, and there is",
        "begin_line": 40,
        "end_line": 40,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#41",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "* no additional introspection or customizability of these types,",
        "begin_line": 41,
        "end_line": 41,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#47",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "implements java.io.Serializable",
        "begin_line": 47,
        "end_line": 47,
        "comment": "\n * Abstract factory base class that can provide deserializers for standard\n * JDK classes, including collection classes and simple heuristics for\n * \"upcasting\" common collection interface types\n * (such as {@link java.util.Collection}).\n *<p>\n * Since all simple deserializers are eagerly instantiated, and there is\n * no additional introspection or customizability of these types,\n * this factory is stateless.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#54",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "/**",
        "begin_line": 54,
        "end_line": 54,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#57",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "*/",
        "begin_line": 57,
        "end_line": 57,
        "comment": "    \n     * We need a placeholder for creator properties that don't have name\n     * but are marked with `@JsonWrapped` annotation.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "protected final static PropertyName UNWRAPPED_CREATOR_PARAM_NAME = new PropertyName(\"@JsonUnwrapped\");",
        "begin_line": 58,
        "end_line": 58,
        "comment": "    \n     * We need a placeholder for creator properties that don't have name\n     * but are marked with `@JsonWrapped` annotation.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#59",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 59,
        "end_line": 59,
        "comment": "    \n     * We need a placeholder for creator properties that don't have name\n     * but are marked with `@JsonWrapped` annotation.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#66",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "new HashMap<String, Class<? extends Map>>();",
        "begin_line": 66,
        "end_line": 66,
        "comment": "    /* We do some defaulting for abstract Map classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Maps will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#68",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_57 = 57;",
        "begin_line": 68,
        "end_line": 68,
        "comment": "    /* We do some defaulting for abstract Map classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Maps will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#69",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "HashMap<String, Class<? extends java.util.Map>> f__map_fallbacks_982_line_57 = _mapFallbacks;",
        "begin_line": 69,
        "end_line": 69,
        "comment": "    /* We do some defaulting for abstract Map classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Maps will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#71",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_57 = 57;",
        "begin_line": 71,
        "end_line": 71,
        "comment": "    /* We do some defaulting for abstract Map classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Maps will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#72",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "f__map_fallbacks_982_line_57.put(basic_deserializer_factory1_expr9_line_57, LinkedHashMap.class);",
        "begin_line": 72,
        "end_line": 72,
        "comment": "    /* We do some defaulting for abstract Map classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Maps will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#75",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "String basic_deserializer_factory1_expr13_line_58 = ConcurrentMap.class.getName();",
        "begin_line": 75,
        "end_line": 75,
        "comment": "    /* We do some defaulting for abstract Map classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Maps will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#83",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 83,
        "end_line": 83,
        "comment": "    /* We do some defaulting for abstract Map classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Maps will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#86",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_66 = 66;",
        "begin_line": 86,
        "end_line": 86,
        "comment": "    /* We do some defaulting for abstract Map classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Maps will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#87",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "/* 11-Jan-2009, tatu: Let's see if we can still add support for",
        "begin_line": 87,
        "end_line": 87,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#88",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "*    JDK 1.6 interfaces, even if we run on 1.5. Just need to be",
        "begin_line": 88,
        "end_line": 88,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#89",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "*    more careful with typos, since compiler won't notice any",
        "begin_line": 89,
        "end_line": 89,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#90",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "*    problems...",
        "begin_line": 90,
        "end_line": 90,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#97",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "Class<?> v_value_984_line_71 = value;",
        "begin_line": 97,
        "end_line": 97,
        "comment": "\t\t/* 11-Jan-2009, tatu: Let's see if we can still add support for\n         *    JDK 1.6 interfaces, even if we run on 1.5. Just need to be\n         *    more careful with typos, since compiler won't notice any\n         *    problems...\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#98",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_70 = 71;",
        "begin_line": 98,
        "end_line": 98,
        "comment": "\t\t/* 11-Jan-2009, tatu: Let's see if we can still add support for\n         *    JDK 1.6 interfaces, even if we run on 1.5. Just need to be\n         *    more careful with typos, since compiler won't notice any\n         *    problems...\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#99",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "@SuppressWarnings(\"unchecked\")",
        "begin_line": 99,
        "end_line": 99,
        "comment": "\t\t/* 11-Jan-2009, tatu: Let's see if we can still add support for\n         *    JDK 1.6 interfaces, even if we run on 1.5. Just need to be\n         *    more careful with typos, since compiler won't notice any\n         *    problems...\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#119",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "new HashMap<String, Class<? extends Collection>>();",
        "begin_line": 119,
        "end_line": 119,
        "comment": "    /* We do some defaulting for abstract Collection classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Collection will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#120",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "static {",
        "begin_line": 120,
        "end_line": 120,
        "comment": "    /* We do some defaulting for abstract Collection classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Collection will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#121",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_86 = 86;",
        "begin_line": 121,
        "end_line": 121,
        "comment": "    /* We do some defaulting for abstract Collection classes and\n     * interfaces, to avoid having to use exact types or annotations in\n     * cases where the most common concrete Collection will do.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#741",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "}",
        "begin_line": 741,
        "end_line": 741,
        "comment": "    \n     * Method that will construct a property object that represents\n     * a logical property passed via Creator (constructor or static\n     * factory method)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#742",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 742,
        "end_line": 742,
        "comment": "    \n     * Method that will construct a property object that represents\n     * a logical property passed via Creator (constructor or static\n     * factory method)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#745",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "intr.findWrapperName(param),",
        "begin_line": 745,
        "end_line": 745,
        "comment": "    \n     * Method that will construct a property object that represents\n     * a logical property passed via Creator (constructor or static\n     * factory method)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#747",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "JavaType type = resolveType(ctxt, beanDesc, t0, param);",
        "begin_line": 747,
        "end_line": 747,
        "comment": "    \n     * Method that will construct a property object that represents\n     * a logical property passed via Creator (constructor or static\n     * factory method)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#749",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "property = property.withType(type);",
        "begin_line": 749,
        "end_line": 749,
        "comment": "    \n     * Method that will construct a property object that represents\n     * a logical property passed via Creator (constructor or static\n     * factory method)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#750",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "}",
        "begin_line": 750,
        "end_line": 750,
        "comment": "    \n     * Method that will construct a property object that represents\n     * a logical property passed via Creator (constructor or static\n     * factory method)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#753",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 753,
        "end_line": 753,
        "comment": "         Is there an annotation that specifies exact deserializer?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#755",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "type = modifyTypeByAnnotation(ctxt, param, type);",
        "begin_line": 755,
        "end_line": 755,
        "comment": "         If yes, we are mostly done:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#756",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 756,
        "end_line": 756,
        "comment": "         If yes, we are mostly done:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#757",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "// Type deserializer: either comes from property (and already resolved)",
        "begin_line": 757,
        "end_line": 757,
        "comment": "         Type deserializer: either comes from property (and already resolved)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#758",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "TypeDeserializer typeDeser = (TypeDeserializer) type.getTypeHandler();",
        "begin_line": 758,
        "end_line": 758,
        "comment": "         Type deserializer: either comes from property (and already resolved)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#760",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "if (typeDeser == null) {",
        "begin_line": 760,
        "end_line": 760,
        "comment": "         or if not, based on type being referenced:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#761",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "typeDeser = findTypeDeserializer(config, type);",
        "begin_line": 761,
        "end_line": 761,
        "comment": "         or if not, based on type being referenced:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#780",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "if (name != null) {",
        "begin_line": 780,
        "end_line": 780,
        "comment": "             As per [Issue#462] need to ensure we contextualize deserializer before passing it on",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#787",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "if (str != null && !str.isEmpty()) {",
        "begin_line": 787,
        "end_line": 787,
        "comment": "            /* 14-Apr-2014, tatu: Need to also consider possible implicit name\n            *   (for JDK8, or via paranamer)\n            ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1215",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)",
        "begin_line": 1215,
        "end_line": 1215,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1216",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "throws JsonMappingException",
        "begin_line": 1216,
        "end_line": 1216,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1217",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "{",
        "begin_line": 1217,
        "end_line": 1217,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1218",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "for (Deserializers d  : _factoryConfig.deserializers()) {",
        "begin_line": 1218,
        "end_line": 1218,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1223",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "}",
        "begin_line": 1223,
        "end_line": 1223,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1224",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "}",
        "begin_line": 1224,
        "end_line": 1224,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1225",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "return null;",
        "begin_line": 1225,
        "end_line": 1225,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1226",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "}",
        "begin_line": 1226,
        "end_line": 1226,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1227",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 1227,
        "end_line": 1227,
        "comment": "             and then new with 2.2: ability to post-process it too (Issue#120)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1402",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 1402,
        "end_line": 1402,
        "comment": "         (note: check for abstract type is not 100% mandatory, more of an optimization)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1404",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 1404,
        "end_line": 1404,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1407",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "*/",
        "begin_line": 1407,
        "end_line": 1407,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown#1408",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 1408,
        "end_line": 1408,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#15",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "import java.lang.reflect.Method;",
        "begin_line": 15,
        "end_line": 15,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#71",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "",
        "begin_line": 71,
        "end_line": 71,
        "comment": "    \n     * Combined list of Jackson annotations that the class has,\n     * including inheritable ones from super classes and interfaces\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#114",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* configuring instances differently depending on use cases",
        "begin_line": 114,
        "end_line": 114,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#115",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "*/",
        "begin_line": 115,
        "end_line": 115,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#116",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "private AnnotatedClass(Class<?> cls, List<Class<?>> superTypes,",
        "begin_line": 116,
        "end_line": 116,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#117",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "AnnotationIntrospector aintr, MixInResolver mir,",
        "begin_line": 117,
        "end_line": 117,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#118",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "AnnotationMap classAnnotations)",
        "begin_line": 118,
        "end_line": 118,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#119",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "{",
        "begin_line": 119,
        "end_line": 119,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#121",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "Class<?> p_cls_1456_line_115 = cls;",
        "begin_line": 121,
        "end_line": 121,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#122",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_END_LINE_115 = 115;",
        "begin_line": 122,
        "end_line": 122,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#138",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "boolean annotated_class1_expr6_line_119 = f__mix_in_resolver_1464_line_119 == null;",
        "begin_line": 138,
        "end_line": 138,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#150",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "",
        "begin_line": 150,
        "end_line": 150,
        "comment": "    \n     * Constructor will not do any initializations, to allow for\n     * configuring instances differently depending on use cases\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#172",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "/**",
        "begin_line": 172,
        "end_line": 172,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#173",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* Method similar to {@link #construct}, but that will NOT include",
        "begin_line": 173,
        "end_line": 173,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#175",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* mix-ins it may have.",
        "begin_line": 175,
        "end_line": 175,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#234",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 234,
        "end_line": 234,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#235",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "return _classAnnotations.annotations();",
        "begin_line": 235,
        "end_line": 235,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#237",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "",
        "begin_line": 237,
        "end_line": 237,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#242",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 242,
        "end_line": 242,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#245",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "",
        "begin_line": 245,
        "end_line": 245,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#250",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "*/",
        "begin_line": 250,
        "end_line": 250,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#251",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "",
        "begin_line": 251,
        "end_line": 251,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#253",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "if (_classAnnotations == null) {",
        "begin_line": 253,
        "end_line": 253,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#281",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "resolveCreators();",
        "begin_line": 281,
        "end_line": 281,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#282",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 282,
        "end_line": 282,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#284",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "List<com.fasterxml.jackson.databind.introspect.AnnotatedConstructor> f__constructors_1475_line_237 = _constructors;",
        "begin_line": 284,
        "end_line": 284,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#300",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_END_LINE_245 = 245;",
        "begin_line": 300,
        "end_line": 300,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#302",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 302,
        "end_line": 302,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#304",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "public Iterable<AnnotatedMethod> memberMethods()",
        "begin_line": 304,
        "end_line": 304,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#308",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "boolean annotated_class1_expr17_line_250 = f__member_methods_1477_line_250 == null;",
        "begin_line": 308,
        "end_line": 308,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#311",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "resolveMemberMethods();",
        "begin_line": 311,
        "end_line": 311,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#313",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_START_LINE_253 = 253;",
        "begin_line": 313,
        "end_line": 313,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#314",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap f__member_methods_1477_line_253 = _memberMethods;",
        "begin_line": 314,
        "end_line": 314,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#315",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_END_LINE_253 = 253;",
        "begin_line": 315,
        "end_line": 315,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#323",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 323,
        "end_line": 323,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#325",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 325,
        "end_line": 325,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#334",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "",
        "begin_line": 334,
        "end_line": 334,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#335",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "public int getFieldCount() {",
        "begin_line": 335,
        "end_line": 335,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#336",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "if (_fields == null) {",
        "begin_line": 336,
        "end_line": 336,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#346",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "boolean annotated_class1_expr19_line_281 = f__fields_1480_line_281 == null;",
        "begin_line": 346,
        "end_line": 346,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#347",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_END_LINE_281 = 283;",
        "begin_line": 347,
        "end_line": 347,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#352",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "List<com.fasterxml.jackson.databind.introspect.AnnotatedField> f__fields_1480_line_284 = _fields;",
        "begin_line": 352,
        "end_line": 352,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#363",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "/**",
        "begin_line": 363,
        "end_line": 363,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#364",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* Initialization method that will recursively collect Jackson",
        "begin_line": 364,
        "end_line": 364,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#369",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "{",
        "begin_line": 369,
        "end_line": 369,
        "comment": "    \n     * Initialization method that will recursively collect Jackson\n     * annotations for this class and all super classes and\n     * interfaces.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#371",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_START_LINE_302 = 324;",
        "begin_line": 371,
        "end_line": 371,
        "comment": "    \n     * Initialization method that will recursively collect Jackson\n     * annotations for this class and all super classes and\n     * interfaces.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#378",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "Class<?> f__primary_mix_in_1465_line_304 = _primaryMixIn;",
        "begin_line": 378,
        "end_line": 378,
        "comment": "\t\t [JACKSON-659] Should skip processing if annotation processing disabled",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#381",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "// add mix-in annotations first (overrides)",
        "begin_line": 381,
        "end_line": 381,
        "comment": "\t\t\t add mix-in annotations first (overrides)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#392",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "_addAnnotationsIfNotPresent(f__class_annotations_1466_line_308, annotated_class1_expr25_line_308);",
        "begin_line": 392,
        "end_line": 392,
        "comment": "\t\t\t first, annotations from the class itself:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#393",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "",
        "begin_line": 393,
        "end_line": 393,
        "comment": "\t\t\t first, annotations from the class itself:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#410",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_END_LINE_314 = 314;",
        "begin_line": 410,
        "end_line": 410,
        "comment": "\t\t\t\t and mix mix-in annotations in-between",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#411",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "_addAnnotationsIfNotPresent(f__class_annotations_1466_line_314, annotated_class1_expr28_line_314);",
        "begin_line": 411,
        "end_line": 411,
        "comment": "\t\t\t\t and mix mix-in annotations in-between",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#421",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "*   For now, yes, seems useful for some cases, and not harmful for any?",
        "begin_line": 421,
        "end_line": 421,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#422",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "*/",
        "begin_line": 422,
        "end_line": 422,
        "comment": "            /* 12-Jul-2009, tatu: Should this be done for interfaces too?\n             *   For now, yes, seems useful for some cases, and not harmful for any?\n             ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#424",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 424,
        "end_line": 424,
        "comment": "            /* 12-Jul-2009, tatu: Should this be done for interfaces too?\n             *   For now, yes, seems useful for some cases, and not harmful for any?\n             ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#427",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "/**",
        "begin_line": 427,
        "end_line": 427,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#428",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* Initialization method that will find out all constructors",
        "begin_line": 428,
        "end_line": 428,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#429",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* and potential static factory methods the class has.",
        "begin_line": 429,
        "end_line": 429,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#430",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "*/",
        "begin_line": 430,
        "end_line": 430,
        "comment": "    \n     * Initialization method that will find out all constructors\n     * and potential static factory methods the class has.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#432",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "{",
        "begin_line": 432,
        "end_line": 432,
        "comment": "    \n     * Initialization method that will find out all constructors\n     * and potential static factory methods the class has.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#433",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "// Then see which constructors we have",
        "begin_line": 433,
        "end_line": 433,
        "comment": "         Then see which constructors we have",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#434",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "List<AnnotatedConstructor> constructors = null;",
        "begin_line": 434,
        "end_line": 434,
        "comment": "         Then see which constructors we have",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#445",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "_defaultConstructor = _constructConstructor(ctor, true);",
        "begin_line": 445,
        "end_line": 445,
        "comment": "         Then see which constructors we have",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#446",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "} else {",
        "begin_line": 446,
        "end_line": 446,
        "comment": "         Then see which constructors we have",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#461",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_END_LINE_347 = 347;",
        "begin_line": 461,
        "end_line": 461,
        "comment": "         Then see which constructors we have",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#470",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "// and if need be, augment with mix-ins",
        "begin_line": 470,
        "end_line": 470,
        "comment": "\t\t and if need be, augment with mix-ins",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#471",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "if (annotated_class1_expr34_line_352) {",
        "begin_line": 471,
        "end_line": 471,
        "comment": "\t\t and if need be, augment with mix-ins",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#472",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "if (_defaultConstructor != null || !_constructors.isEmpty()) {",
        "begin_line": 472,
        "end_line": 472,
        "comment": "\t\t and if need be, augment with mix-ins",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#477",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "",
        "begin_line": 477,
        "end_line": 477,
        "comment": "\t\t and if need be, augment with mix-ins",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#493",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "_defaultConstructor = null;",
        "begin_line": 493,
        "end_line": 493,
        "comment": "         14-Feb-2011, tatu: AnnotationIntrospector is null if annotations not enabled; if so, can skip:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#494",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 494,
        "end_line": 494,
        "comment": "         14-Feb-2011, tatu: AnnotationIntrospector is null if annotations not enabled; if so, can skip:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#496",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_START_LINE_369 = 376;",
        "begin_line": 496,
        "end_line": 496,
        "comment": "         14-Feb-2011, tatu: AnnotationIntrospector is null if annotations not enabled; if so, can skip:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#501",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "// count down to allow safe removal",
        "begin_line": 501,
        "end_line": 501,
        "comment": "                 count down to allow safe removal",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#502",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "for (int i = _constructors.size(); --i >= 0; ) {",
        "begin_line": 502,
        "end_line": 502,
        "comment": "                 count down to allow safe removal",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#593",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "Class<?> mixin = annotated_class1_expr46_line_428;",
        "begin_line": 593,
        "end_line": 593,
        "comment": "\t\t and then augment these with annotations from super-types:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#596",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap f__member_methods_1477_line_429 = _memberMethods;",
        "begin_line": 596,
        "end_line": 596,
        "comment": "\t\t and then augment these with annotations from super-types:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#601",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "}",
        "begin_line": 601,
        "end_line": 601,
        "comment": "\t\t and then augment these with annotations from super-types:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#632",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "// 14-Feb-2011, tatu: AnnotationIntrospector is null if annotations not enabled; if so, can skip:",
        "begin_line": 632,
        "end_line": 632,
        "comment": "         14-Feb-2011, tatu: AnnotationIntrospector is null if annotations not enabled; if so, can skip:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#676",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "boolean annotated_class1_expr59_line_471 = annotated_class1_expr60_line_471 || annotated_class1_expr61_line_471;",
        "begin_line": 676,
        "end_line": 676,
        "comment": "    \n     * Method that will collect all member (non-static) fields\n     * that are either public, or have at least a single annotation\n     * associated with them.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#677",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_END_LINE_471 = 476;",
        "begin_line": 677,
        "end_line": 677,
        "comment": "    \n     * Method that will collect all member (non-static) fields\n     * that are either public, or have at least a single annotation\n     * associated with them.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#682",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "int PROBE_END_LINE_472 = 472;",
        "begin_line": 682,
        "end_line": 682,
        "comment": "    \n     * Method that will collect all member (non-static) fields\n     * that are either public, or have at least a single annotation\n     * associated with them.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#683",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "_fields = annotated_class1_expr63_line_472;",
        "begin_line": 683,
        "end_line": 683,
        "comment": "    \n     * Method that will collect all member (non-static) fields\n     * that are either public, or have at least a single annotation\n     * associated with them.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#699",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* Helper method for adding any mix-in annotations specified",
        "begin_line": 699,
        "end_line": 699,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#700",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* class might have.",
        "begin_line": 700,
        "end_line": 700,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#701",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "*/",
        "begin_line": 701,
        "end_line": 701,
        "comment": "    \n     * Helper method for adding any mix-in annotations specified\n     * class might have.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#706",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "boolean annotated_class1_expr64_line_493 = f__mix_in_resolver_1464_line_493 != null;",
        "begin_line": 706,
        "end_line": 706,
        "comment": "    \n     * Helper method for adding any mix-in annotations specified\n     * class might have.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#902",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "/* Helper methods for populating field information",
        "begin_line": 902,
        "end_line": 902,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#903",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 903,
        "end_line": 903,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#904",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "*/",
        "begin_line": 904,
        "end_line": 904,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#914",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "* A simple check to rule out other cases is to see if there",
        "begin_line": 914,
        "end_line": 914,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown#920",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotatedClass.unknown(...)",
        "snippet": "boolean annotated_class1_expr72_line_677 = v_parent_1512_line_677 != null;",
        "begin_line": 920,
        "end_line": 920,
        "comment": "\t\t/* First, a quick test: we only care for regular classes (not\n         * interfaces, primitive types etc), except for Object.class.\n         * A simple check to rule out other cases is to see if there\n         * is a super class or not.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.unknown#40",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.unknown(...)",
        "snippet": "super(type);",
        "begin_line": 40,
        "end_line": 40,
        "comment": "    \n     * Specific format to use, if not default format: non null value\n     * also indicates that serialization is to be done as JSON String,\n     * not numeric timestamp, unless {@link #_useTimestamp} is true.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.unknown#41",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.unknown(...)",
        "snippet": "int PROBE_START_LINE_41 = 41;",
        "begin_line": 41,
        "end_line": 41,
        "comment": "    \n     * Specific format to use, if not default format: non null value\n     * also indicates that serialization is to be done as JSON String,\n     * not numeric timestamp, unless {@link #_useTimestamp} is true.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.unknown(...)",
        "snippet": "Boolean p_use_timestamp_2199_line_41 = useTimestamp;",
        "begin_line": 42,
        "end_line": 42,
        "comment": "    \n     * Specific format to use, if not default format: non null value\n     * also indicates that serialization is to be done as JSON String,\n     * not numeric timestamp, unless {@link #_useTimestamp} is true.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.unknown#43",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
        "signature": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.unknown(...)",
        "snippet": "int PROBE_END_LINE_41 = 41;",
        "begin_line": 43,
        "end_line": 43,
        "comment": "    \n     * Specific format to use, if not default format: non null value\n     * also indicates that serialization is to be done as JSON String,\n     * not numeric timestamp, unless {@link #_useTimestamp} is true.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown#22",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
        "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown(...)",
        "snippet": "private static final JsonNodeFactory decimalsNormalized",
        "begin_line": 22,
        "end_line": 22,
        "comment": "     with 2.2",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown#24",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
        "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown(...)",
        "snippet": "private static final JsonNodeFactory decimalsAsIs",
        "begin_line": 24,
        "end_line": 24,
        "comment": "     with 2.2",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown#32",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
        "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown(...)",
        "snippet": "",
        "begin_line": 32,
        "end_line": 32,
        "comment": "     with 2.2",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown#60",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
        "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown(...)",
        "snippet": "*",
        "begin_line": 60,
        "end_line": 60,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown#61",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
        "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown(...)",
        "snippet": "* @param bigDecimalExact see description",
        "begin_line": 61,
        "end_line": 61,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown#62",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/node/JsonNodeFactory.java",
        "class_name": "com.fasterxml.jackson.databind.node.JsonNodeFactory",
        "signature": "com.fasterxml.jackson.databind.node.JsonNodeFactory.unknown(...)",
        "snippet": "*",
        "begin_line": 62,
        "end_line": 62,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#53",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "* Since these are all JDK classes, we shouldn't have to worry",
        "begin_line": 53,
        "end_line": 53,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#61",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "* Actually it may not make much sense to eagerly instantiate all",
        "begin_line": 61,
        "end_line": 61,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#68",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "static {",
        "begin_line": 68,
        "end_line": 68,
        "comment": "    \n     * Actually it may not make much sense to eagerly instantiate all\n     * kinds of serializers: so this Map actually contains class references,\n     * not instances\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#69",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_68 = 68;",
        "begin_line": 69,
        "end_line": 69,
        "comment": "    \n     * Actually it may not make much sense to eagerly instantiate all\n     * kinds of serializers: so this Map actually contains class references,\n     * not instances\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#70",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "HashMap<String, JsonSerializer<?>> f__concrete_1921_line_68 = _concrete;",
        "begin_line": 70,
        "end_line": 70,
        "comment": "    \n     * Actually it may not make much sense to eagerly instantiate all\n     * kinds of serializers: so this Map actually contains class references,\n     * not instances\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#71",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "String basic_serializer_factory1_expr4_line_68 = String.class.getName();",
        "begin_line": 71,
        "end_line": 71,
        "comment": "    \n     * Actually it may not make much sense to eagerly instantiate all\n     * kinds of serializers: so this Map actually contains class references,\n     * not instances\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#72",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_68 = 68;",
        "begin_line": 72,
        "end_line": 72,
        "comment": "    \n     * Actually it may not make much sense to eagerly instantiate all\n     * kinds of serializers: so this Map actually contains class references,\n     * not instances\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#73",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "/* String and string-like types (note: date types explicitly",
        "begin_line": 73,
        "end_line": 73,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "f__concrete_1921_line_68.put(basic_serializer_factory1_expr4_line_68, new StringSerializer());",
        "begin_line": 76,
        "end_line": 76,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#77",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_69 = 69;",
        "begin_line": 77,
        "end_line": 77,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#78",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "ToStringSerializer f_instance_1924_line_69 = ToStringSerializer.instance;",
        "begin_line": 78,
        "end_line": 78,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#81",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_70 = 70;",
        "begin_line": 81,
        "end_line": 81,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#82",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "HashMap<String, JsonSerializer<?>> f__concrete_1921_line_70 = _concrete;",
        "begin_line": 82,
        "end_line": 82,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#83",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "String basic_serializer_factory1_expr8_line_70 = StringBuffer.class.getName();",
        "begin_line": 83,
        "end_line": 83,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#87",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_71 = 71;",
        "begin_line": 87,
        "end_line": 87,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#88",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "HashMap<String, JsonSerializer<?>> f__concrete_1921_line_71 = _concrete;",
        "begin_line": 88,
        "end_line": 88,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#89",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "String basic_serializer_factory1_expr11_line_71 = StringBuilder.class.getName();",
        "begin_line": 89,
        "end_line": 89,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#91",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_71 = 71;",
        "begin_line": 91,
        "end_line": 91,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#94",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "HashMap<String, JsonSerializer<?>> f__concrete_1921_line_72 = _concrete;",
        "begin_line": 94,
        "end_line": 94,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#95",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "String basic_serializer_factory1_expr14_line_72 = Character.class.getName();",
        "begin_line": 95,
        "end_line": 95,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#98",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "f__concrete_1921_line_72.put(basic_serializer_factory1_expr14_line_72, v_sls_1923_line_72);",
        "begin_line": 98,
        "end_line": 98,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#99",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_73 = 73;",
        "begin_line": 99,
        "end_line": 99,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#100",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "HashMap<String, JsonSerializer<?>> f__concrete_1921_line_73 = _concrete;",
        "begin_line": 100,
        "end_line": 100,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#101",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "Class<Character> f_type_1925_line_73 = Character.TYPE;",
        "begin_line": 101,
        "end_line": 101,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#102",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "String basic_serializer_factory1_expr17_line_73 = f_type_1925_line_73.getName();",
        "begin_line": 102,
        "end_line": 102,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#104",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_73 = 73;",
        "begin_line": 104,
        "end_line": 104,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#105",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "f__concrete_1921_line_73.put(basic_serializer_factory1_expr17_line_73, v_sls_1923_line_73);",
        "begin_line": 105,
        "end_line": 105,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#106",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 106,
        "end_line": 106,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#109",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_76 = 76;",
        "begin_line": 109,
        "end_line": 109,
        "comment": "\t\t/* String and string-like types (note: date types explicitly\n         * not included -- can use either textual or numeric serialization)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#113",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "HashMap<String, JsonSerializer<?>> f__concrete_1921_line_77 = _concrete;",
        "begin_line": 113,
        "end_line": 113,
        "comment": "\t\t Primitives/wrappers for primitives (primitives needed for Beans)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#114",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "Class<Boolean> f_type_1598_line_77 = Boolean.TYPE;",
        "begin_line": 114,
        "end_line": 114,
        "comment": "\t\t Primitives/wrappers for primitives (primitives needed for Beans)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#139",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_83 = 83;",
        "begin_line": 139,
        "end_line": 139,
        "comment": "\t\t Other numbers, more complicated",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "f__concrete_1921_line_83.put(basic_serializer_factory1_expr32_line_83, v_ns_1926_line_83);",
        "begin_line": 140,
        "end_line": 140,
        "comment": "\t\t Other numbers, more complicated",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown#141",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 141,
        "end_line": 141,
        "comment": "\t\t Other numbers, more complicated",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/impl/FailingSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer.unknown(...)",
        "snippet": "super(Object.class);",
        "begin_line": 28,
        "end_line": 28,
        "comment": "\n * Special bogus \"serializer\" that will throw\n * {@link JsonGenerationException} if its {@link #serialize}\n * gets invoked. Most commonly registered as handler for unknown types,\n * as well as for catching unintended usage (like trying to use null\n * as Map/Object key).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer.unknown#29",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/impl/FailingSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer.unknown(...)",
        "snippet": "int PROBE_START_LINE_29 = 29;",
        "begin_line": 29,
        "end_line": 29,
        "comment": "\n * Special bogus \"serializer\" that will throw\n * {@link JsonGenerationException} if its {@link #serialize}\n * gets invoked. Most commonly registered as handler for unknown types,\n * as well as for catching unintended usage (like trying to use null\n * as Map/Object key).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer.unknown#30",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/impl/FailingSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.impl.FailingSerializer.unknown(...)",
        "snippet": "String p_msg_2152_line_29 = msg;",
        "begin_line": 30,
        "end_line": 30,
        "comment": "\n * Special bogus \"serializer\" that will throw\n * {@link JsonGenerationException} if its {@link #serialize}\n * gets invoked. Most commonly registered as handler for unknown types,\n * as well as for catching unintended usage (like trying to use null\n * as Map/Object key).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "/* Life-cycle: constructors",
        "begin_line": 58,
        "end_line": 58,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#59",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 59,
        "end_line": 59,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#60",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "*/",
        "begin_line": 60,
        "end_line": 60,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#61",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "",
        "begin_line": 61,
        "end_line": 61,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#75",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "{",
        "begin_line": 75,
        "end_line": 75,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "_base = src._base;",
        "begin_line": 76,
        "end_line": 76,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#77",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "_mapperFeatures = src._mapperFeatures;",
        "begin_line": 77,
        "end_line": 77,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#78",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "}",
        "begin_line": 78,
        "end_line": 78,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#81",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "* Method that calculates bit set (flags) of all features that",
        "begin_line": 81,
        "end_line": 81,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#118",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "* mapper features enabled.",
        "begin_line": 118,
        "end_line": 118,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#138",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "",
        "begin_line": 138,
        "end_line": 138,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#161",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "public final boolean hasMapperFeatures(int featureMask) {",
        "begin_line": 161,
        "end_line": 161,
        "comment": "    \n     * \"Bulk\" access method for checking that all features specified by\n     * mask are enabled.\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#203",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "return mapper_config1_expr10_line_161;",
        "begin_line": 203,
        "end_line": 203,
        "comment": "    \n     * Accessor for checking whether default settings for property handling\n     * indicate that properties should be alphabetically ordered or not.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#213",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "/*",
        "begin_line": 213,
        "end_line": 213,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#226",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "* @return Optimized text object constructed",
        "begin_line": 226,
        "end_line": 226,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#230",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "public SerializableString compileString(String src) {",
        "begin_line": 230,
        "end_line": 230,
        "comment": "    \n     * Method for constructing a specialized textual object that can typically\n     * be serialized faster than basic {@link java.lang.String} (depending\n     * on escaping needed if any, char-to-byte encoding if needed).\n     * \n     * @param src Text to represent\n     * \n     * @return Optimized text object constructed\n     * \n     * @since 2.4\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#250",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "return mapper_config1_expr11_line_203;",
        "begin_line": 250,
        "end_line": 250,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#256",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "*<p>",
        "begin_line": 256,
        "end_line": 256,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#268",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "/**",
        "begin_line": 268,
        "end_line": 268,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown#298",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/MapperConfig.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.MapperConfig",
        "signature": "com.fasterxml.jackson.databind.cfg.MapperConfig.unknown(...)",
        "snippet": "/*",
        "begin_line": 298,
        "end_line": 298,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#54",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "public ObjectBuffer() { }",
        "begin_line": 54,
        "end_line": 54,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#68",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "_reset();",
        "begin_line": 68,
        "end_line": 68,
        "comment": "    \n     * Method called to start buffering process. Will ensure that the buffer\n     * is empty, and then return an object array to start chunking content on\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#69",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "int PROBE_START_LINE_69 = 71;",
        "begin_line": 69,
        "end_line": 69,
        "comment": "    \n     * Method called to start buffering process. Will ensure that the buffer\n     * is empty, and then return an object array to start chunking content on\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#70",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "Object[] f__free_buffer_2650_line_69 = _freeBuffer;",
        "begin_line": 70,
        "end_line": 70,
        "comment": "    \n     * Method called to start buffering process. Will ensure that the buffer\n     * is empty, and then return an object array to start chunking content on\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#137",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "*   used for constructing the result array.",
        "begin_line": 137,
        "end_line": 137,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#139",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "public <T> T[] completeAndClearBuffer(Object[] lastChunk, int lastChunkEntries, Class<T> componentType)",
        "begin_line": 139,
        "end_line": 139,
        "comment": "    \n     * Type-safe alternative to\n     * {@link #completeAndClearBuffer(Object[], int)}, to allow\n     * for constructing explicitly typed result array.\n     *\n     * @param componentType Type of elements included in the buffer. Will be\n     *   used for constructing the result array.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "{",
        "begin_line": 140,
        "end_line": 140,
        "comment": "    \n     * Type-safe alternative to\n     * {@link #completeAndClearBuffer(Object[], int)}, to allow\n     * for constructing explicitly typed result array.\n     *\n     * @param componentType Type of elements included in the buffer. Will be\n     *   used for constructing the result array.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#141",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "int PROBE_START_LINE_137 = 137;",
        "begin_line": 141,
        "end_line": 141,
        "comment": "    \n     * Type-safe alternative to\n     * {@link #completeAndClearBuffer(Object[], int)}, to allow\n     * for constructing explicitly typed result array.\n     *\n     * @param componentType Type of elements included in the buffer. Will be\n     *   used for constructing the result array.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#142",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "int p_last_chunk_entries_2655_line_137 = lastChunkEntries;",
        "begin_line": 142,
        "end_line": 142,
        "comment": "    \n     * Type-safe alternative to\n     * {@link #completeAndClearBuffer(Object[], int)}, to allow\n     * for constructing explicitly typed result array.\n     *\n     * @param componentType Type of elements included in the buffer. Will be\n     *   used for constructing the result array.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#184",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "* Helper method that can be used to check how much free capacity",
        "begin_line": 184,
        "end_line": 184,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#188",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "*/",
        "begin_line": 188,
        "end_line": 188,
        "comment": "    \n     * Helper method that can be used to check how much free capacity\n     * will this instance start with. Can be used to choose the best\n     * instance to reuse, based on size of reusable object chunk\n     * buffer holds reference to.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#189",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "public int initialCapacity() {",
        "begin_line": 189,
        "end_line": 189,
        "comment": "    \n     * Helper method that can be used to check how much free capacity\n     * will this instance start with. Can be used to choose the best\n     * instance to reuse, based on size of reusable object chunk\n     * buffer holds reference to.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#190",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "return (_freeBuffer == null) ? 0 : _freeBuffer.length;",
        "begin_line": 190,
        "end_line": 190,
        "comment": "    \n     * Helper method that can be used to check how much free capacity\n     * will this instance start with. Can be used to choose the best\n     * instance to reuse, based on size of reusable object chunk\n     * buffer holds reference to.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#195",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "* within this buffer.",
        "begin_line": 195,
        "end_line": 195,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#197",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "public int bufferedSize() { return _size; }",
        "begin_line": 197,
        "end_line": 197,
        "comment": "    \n     * Method that can be used to check how many Objects have been buffered\n     * within this buffer.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#203",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "*/",
        "begin_line": 203,
        "end_line": 203,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#204",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "",
        "begin_line": 204,
        "end_line": 204,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#207",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "int PROBE_START_LINE_184 = 186;",
        "begin_line": 207,
        "end_line": 207,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown#210",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ObjectBuffer.java",
        "class_name": "com.fasterxml.jackson.databind.util.ObjectBuffer",
        "signature": "com.fasterxml.jackson.databind.util.ObjectBuffer.unknown(...)",
        "snippet": "int PROBE_END_LINE_184 = 186;",
        "begin_line": 210,
        "end_line": 210,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer.unknown#18",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer.java",
        "class_name": "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
        "signature": "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer.unknown(...)",
        "snippet": "protected StdScalarDeserializer(Class<?> vc) { super(vc); }",
        "begin_line": 18,
        "end_line": 18,
        "comment": "\n * Base class for deserializers that handle types that are serialized\n * as JSON scalars (non-structured, i.e. non-Object, non-Array, values).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotationMap.unknown#18",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotationMap.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationMap",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotationMap.unknown(...)",
        "snippet": "",
        "begin_line": 18,
        "end_line": 18,
        "comment": "\n * Simple helper class used to keep track of collection of\n * Jackson Annotations associated with annotatable things\n * (methods, constructors, classes).\n * Note that only Jackson-owned annotations are tracked (for now?).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotationMap.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotationMap.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationMap",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotationMap.unknown(...)",
        "snippet": "{",
        "begin_line": 28,
        "end_line": 28,
        "comment": "\n * Simple helper class used to keep track of collection of\n * Jackson Annotations associated with annotatable things\n * (methods, constructors, classes).\n * Note that only Jackson-owned annotations are tracked (for now?).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.AnnotationMap.unknown#29",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/AnnotationMap.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.AnnotationMap",
        "signature": "com.fasterxml.jackson.databind.introspect.AnnotationMap.unknown(...)",
        "snippet": "int PROBE_START_LINE_28 = 30;",
        "begin_line": 29,
        "end_line": 29,
        "comment": "\n * Simple helper class used to keep track of collection of\n * Jackson Annotations associated with annotatable things\n * (methods, constructors, classes).\n * Note that only Jackson-owned annotations are tracked (for now?).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase.unknown#21",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NonTypedScalarSerializerBase.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase",
        "signature": "com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase.unknown(...)",
        "snippet": "super(t);",
        "begin_line": 21,
        "end_line": 21,
        "comment": "\n * Intermediate base class for limited number of scalar types\n * that should never include type information. These are \"native\"\n * types that are default mappings for corresponding JSON scalar\n * types: {@link java.lang.String}, {@link java.lang.Integer},\n * {@link java.lang.Double} and {@link java.lang.Boolean}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase.unknown#22",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NonTypedScalarSerializerBase.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase",
        "signature": "com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase.unknown(...)",
        "snippet": "}",
        "begin_line": 22,
        "end_line": 22,
        "comment": "\n * Intermediate base class for limited number of scalar types\n * that should never include type information. These are \"native\"\n * types that are default mappings for corresponding JSON scalar\n * types: {@link java.lang.String}, {@link java.lang.Integer},\n * {@link java.lang.Double} and {@link java.lang.Boolean}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.SerializerFactory.unknown#11",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/SerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.SerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.SerializerFactory.unknown(...)",
        "snippet": "public abstract class SerializerFactory",
        "begin_line": 11,
        "end_line": 11,
        "comment": "\n * Abstract class that defines API used by {@link SerializerProvider}\n * to obtain actual\n * {@link JsonSerializer} instances from multiple distinct factories.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MappingJsonFactory.unknown#44",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MappingJsonFactory.java",
        "class_name": "com.fasterxml.jackson.databind.MappingJsonFactory",
        "signature": "com.fasterxml.jackson.databind.MappingJsonFactory.unknown(...)",
        "snippet": "super(mapper);",
        "begin_line": 44,
        "end_line": 44,
        "comment": "     generated for Jackson 2.1.0",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MappingJsonFactory.unknown#45",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MappingJsonFactory.java",
        "class_name": "com.fasterxml.jackson.databind.MappingJsonFactory",
        "signature": "com.fasterxml.jackson.databind.MappingJsonFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_45 = 47;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "     generated for Jackson 2.1.0",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MappingJsonFactory.unknown#48",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MappingJsonFactory.java",
        "class_name": "com.fasterxml.jackson.databind.MappingJsonFactory",
        "signature": "com.fasterxml.jackson.databind.MappingJsonFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_45 = 47;",
        "begin_line": 48,
        "end_line": 48,
        "comment": "     generated for Jackson 2.1.0",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/ToStringSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer.unknown(...)",
        "snippet": "public final static ToStringSerializer instance = new ToStringSerializer();",
        "begin_line": 28,
        "end_line": 28,
        "comment": "    \n     * Singleton instance to use.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/ToStringSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.ToStringSerializer.unknown(...)",
        "snippet": "public ToStringSerializer() { super(Object.class); }",
        "begin_line": 38,
        "end_line": 38,
        "comment": "    \n     *<p>\n     * Note: usually you should NOT create new instances, but instead use\n     * {@link #instance} which is stateless and fully thread-safe. However,\n     * there are cases where constructor is needed; for example,\n     * when using explicit serializer annotations like\n     * {@link com.fasterxml.jackson.databind.annotation.JsonSerialize#using}.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeParser.unknown#21",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeParser.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
        "signature": "com.fasterxml.jackson.databind.type.TypeParser.unknown(...)",
        "snippet": "public TypeParser(TypeFactory f) {",
        "begin_line": 21,
        "end_line": 21,
        "comment": "\n * Simple recursive-descent parser for parsing canonical {@link JavaType}\n * representations and constructing type instances.\n * \n * @author tatu\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeParser.unknown#22",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeParser.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
        "signature": "com.fasterxml.jackson.databind.type.TypeParser.unknown(...)",
        "snippet": "int PROBE_START_LINE_22 = 22;",
        "begin_line": 22,
        "end_line": 22,
        "comment": "\n * Simple recursive-descent parser for parsing canonical {@link JavaType}\n * representations and constructing type instances.\n * \n * @author tatu\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.TypeParser.unknown#23",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/TypeParser.java",
        "class_name": "com.fasterxml.jackson.databind.type.TypeParser",
        "signature": "com.fasterxml.jackson.databind.type.TypeParser.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.type.TypeFactory p_f_2573_line_22 = f;",
        "begin_line": 23,
        "end_line": 23,
        "comment": "\n * Simple recursive-descent parser for parsing canonical {@link JavaType}\n * representations and constructing type instances.\n * \n * @author tatu\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#46",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "*/",
        "begin_line": 46,
        "end_line": 46,
        "comment": "    \n     * Constructor that will pass specified deserializer factory and\n     * cache: cache may be null (in which case default implementation\n     * will be used), factory can not be null\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#47",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "protected DefaultDeserializationContext(DeserializerFactory df, DeserializerCache cache) {",
        "begin_line": 47,
        "end_line": 47,
        "comment": "    \n     * Constructor that will pass specified deserializer factory and\n     * cache: cache may be null (in which case default implementation\n     * will be used), factory can not be null\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#51",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "protected DefaultDeserializationContext(DefaultDeserializationContext src,",
        "begin_line": 51,
        "end_line": 51,
        "comment": "    \n     * Constructor that will pass specified deserializer factory and\n     * cache: cache may be null (in which case default implementation\n     * will be used), factory can not be null\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#52",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "DeserializationConfig config, JsonParser jp, InjectableValues values) {",
        "begin_line": 52,
        "end_line": 52,
        "comment": "    \n     * Constructor that will pass specified deserializer factory and\n     * cache: cache may be null (in which case default implementation\n     * will be used), factory can not be null\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#111",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "public void checkUnresolvedObjectId() throws UnresolvedForwardReference",
        "begin_line": 111,
        "end_line": 111,
        "comment": "         Not seen yet, must create entry and configure resolver.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#112",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "{",
        "begin_line": 112,
        "end_line": 112,
        "comment": "         Not seen yet, must create entry and configure resolver.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#258",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "",
        "begin_line": 258,
        "end_line": 258,
        "comment": "    \n     * Actual full concrete implementation\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#259",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "/**",
        "begin_line": 259,
        "end_line": 259,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#263",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "public Impl(DeserializerFactory df) {",
        "begin_line": 263,
        "end_line": 263,
        "comment": "        \n         * Default constructor for a blueprint object, which will use the standard\n         * {@link DeserializerCache}, given factory.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#264",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "super(df, null);",
        "begin_line": 264,
        "end_line": 264,
        "comment": "        \n         * Default constructor for a blueprint object, which will use the standard\n         * {@link DeserializerCache}, given factory.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown#273",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
        "signature": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.unknown(...)",
        "snippet": "super(src, factory);",
        "begin_line": 273,
        "end_line": 273,
        "comment": "        \n         * Default constructor for a blueprint object, which will use the standard\n         * {@link DeserializerCache}, given factory.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver.unknown#15",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/jsontype/SubtypeResolver.java",
        "class_name": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
        "signature": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver.unknown(...)",
        "snippet": "public abstract class SubtypeResolver",
        "begin_line": 15,
        "end_line": 15,
        "comment": "\n * Helper object used for handling registration on resolving of super-types\n * to sub-types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "this(cls, null, null, null, null, false);",
        "begin_line": 36,
        "end_line": 36,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#37",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "}",
        "begin_line": 37,
        "end_line": 37,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "super(cls, 0, valueHandler, typeHandler, asStatic);",
        "begin_line": 42,
        "end_line": 42,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#43",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "int PROBE_START_LINE_43 = 49;",
        "begin_line": 43,
        "end_line": 43,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#44",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "String[] p_type_names_2434_line_43 = typeNames;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#45",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "boolean simple_type1_expr6_line_43 = p_type_names_2434_line_43 == null;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#50",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "}",
        "begin_line": 50,
        "end_line": 50,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#59",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "}",
        "begin_line": 59,
        "end_line": 59,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.SimpleType.unknown#162",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/SimpleType.java",
        "class_name": "com.fasterxml.jackson.databind.type.SimpleType",
        "signature": "com.fasterxml.jackson.databind.type.SimpleType.unknown(...)",
        "snippet": "}",
        "begin_line": 162,
        "end_line": 162,
        "comment": "         no content type, so:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DatabindContext.unknown#24",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DatabindContext.java",
        "class_name": "com.fasterxml.jackson.databind.DatabindContext",
        "signature": "com.fasterxml.jackson.databind.DatabindContext.unknown(...)",
        "snippet": "public abstract class DatabindContext",
        "begin_line": 24,
        "end_line": 24,
        "comment": "\n * Shared base class for {@link DeserializationContext} and\n * {@link SerializerProvider}, context objects passed through data-binding\n * process. Designed so that some of implementations can rely on shared\n * aspects like access to secondary contextual objects like type factories\n * or handler instantiators.\n * \n * @since 2.2\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#25",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "public static void addAll(Map<String, JsonSerializer<?>> allDeserializers)",
        "begin_line": 25,
        "end_line": 25,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#26",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "{",
        "begin_line": 26,
        "end_line": 26,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#27",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "final JsonSerializer<?> intS = new IntegerSerializer();",
        "begin_line": 27,
        "end_line": 27,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#28",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "int PROBE_START_LINE_26 = 26;",
        "begin_line": 28,
        "end_line": 28,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#29",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "Map<String, JsonSerializer<?>> p_all_deserializers_2239_line_26 = allDeserializers;",
        "begin_line": 29,
        "end_line": 29,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#30",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "String number_serializers1_expr3_line_26 = Integer.class.getName();",
        "begin_line": 30,
        "end_line": 30,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#31",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "JsonSerializer<?> v_int_s_2240_line_26 = intS;",
        "begin_line": 31,
        "end_line": 31,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#32",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "int PROBE_END_LINE_26 = 26;",
        "begin_line": 32,
        "end_line": 32,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#33",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "p_all_deserializers_2239_line_26.put(number_serializers1_expr3_line_26, v_int_s_2240_line_26);",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "Class<Integer> f_type_1601_line_27 = Integer.TYPE;",
        "begin_line": 36,
        "end_line": 36,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#37",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "String number_serializers1_expr6_line_27 = f_type_1601_line_27.getName();",
        "begin_line": 37,
        "end_line": 37,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "JsonSerializer<?> v_int_s_2240_line_27 = intS;",
        "begin_line": 38,
        "end_line": 38,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#39",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "int PROBE_END_LINE_27 = 27;",
        "begin_line": 39,
        "end_line": 39,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#40",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "p_all_deserializers_2239_line_27.put(number_serializers1_expr6_line_27, v_int_s_2240_line_27);",
        "begin_line": 40,
        "end_line": 40,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#55",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "Map<String, JsonSerializer<?>> p_all_deserializers_2239_line_30 = allDeserializers;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#56",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "String number_serializers1_expr13_line_30 = Byte.class.getName();",
        "begin_line": 56,
        "end_line": 56,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#57",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.IntLikeSerializer f_instance_2242_line_30 = IntLikeSerializer.instance;",
        "begin_line": 57,
        "end_line": 57,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "int PROBE_END_LINE_30 = 30;",
        "begin_line": 58,
        "end_line": 58,
        "comment": "\n * Container class for serializers used for handling standard JDK-provided types.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#101",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "int PROBE_START_LINE_39 = 39;",
        "begin_line": 101,
        "end_line": 101,
        "comment": "\t\t Numbers, limited length floating point",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#103",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "Class<Double> f_type_2249_line_39 = Double.TYPE;",
        "begin_line": 103,
        "end_line": 103,
        "comment": "\t\t Numbers, limited length floating point",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#121",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "",
        "begin_line": 121,
        "end_line": 121,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#145",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "}",
        "begin_line": 145,
        "end_line": 145,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#148",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "@Override",
        "begin_line": 148,
        "end_line": 148,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#149",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "public JsonSerializer<?> createContextual(SerializerProvider prov,",
        "begin_line": 149,
        "end_line": 149,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#160",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "}",
        "begin_line": 160,
        "end_line": 160,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#162",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "return this;",
        "begin_line": 162,
        "end_line": 162,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#173",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "public final static class ShortSerializer extends Base<Short>",
        "begin_line": 173,
        "end_line": 173,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#175",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "final static ShortSerializer instance = new ShortSerializer();",
        "begin_line": 175,
        "end_line": 175,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#193",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "public final static class IntegerSerializer extends Base<Integer>",
        "begin_line": 193,
        "end_line": 193,
        "comment": "    \n     * This is the special serializer for regular {@link java.lang.Integer}s\n     * (and primitive ints)\n     *<p>\n     * Since this is one of \"native\" types, no type information is ever\n     * included on serialization (unlike for most scalar types as of 1.5)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown#195",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializers.unknown(...)",
        "snippet": "public IntegerSerializer() { super(Integer.class, JsonParser.NumberType.INT ,\"integer\"); }",
        "begin_line": 195,
        "end_line": 195,
        "comment": "    \n     * This is the special serializer for regular {@link java.lang.Integer}s\n     * (and primitive ints)\n     *<p>\n     * Since this is one of \"native\" types, no type information is ever\n     * included on serialization (unlike for most scalar types as of 1.5)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "super(base, str, mixins);",
        "begin_line": 76,
        "end_line": 76,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#77",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "int PROBE_START_LINE_77 = 77;",
        "begin_line": 77,
        "end_line": 77,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#78",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "int deserialization_config1_expr2_line_77 = collectFeatureDefaults(DeserializationFeature.class);",
        "begin_line": 78,
        "end_line": 78,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#79",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "int PROBE_END_LINE_77 = 77;",
        "begin_line": 79,
        "end_line": 79,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#80",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "_deserFeatures = deserialization_config1_expr2_line_77;",
        "begin_line": 80,
        "end_line": 80,
        "comment": "    \n     * Constructor used by ObjectMapper to create default configuration object instance.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#450",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "@Override",
        "begin_line": 450,
        "end_line": 450,
        "comment": "    \n     * Method for getting {@link AnnotationIntrospector} configured\n     * to introspect annotation values used for configuration.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#451",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "public AnnotationIntrospector getAnnotationIntrospector()",
        "begin_line": 451,
        "end_line": 451,
        "comment": "    \n     * Method for getting {@link AnnotationIntrospector} configured\n     * to introspect annotation values used for configuration.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#459",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "*/",
        "begin_line": 459,
        "end_line": 459,
        "comment": "\t\t/* 29-Jul-2009, tatu: it's now possible to disable use of\n         *   annotations; can be done using \"no-op\" introspector\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#462",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.AnnotationIntrospector deserialization_config1_expr5_line_451 = super.getAnnotationIntrospector();",
        "begin_line": 462,
        "end_line": 462,
        "comment": "\t\t/* 29-Jul-2009, tatu: it's now possible to disable use of\n         *   annotations; can be done using \"no-op\" introspector\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#471",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "{",
        "begin_line": 471,
        "end_line": 471,
        "comment": "\t\t/* 29-Jul-2009, tatu: it's now possible to disable use of\n         *   annotations; can be done using \"no-op\" introspector\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#487",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "* Accessor for getting bean description that only contains class",
        "begin_line": 487,
        "end_line": 487,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#488",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "* annotations: useful if no getter/setter/creator information is needed.",
        "begin_line": 488,
        "end_line": 488,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#491",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "public BeanDescription introspectClassAnnotations(JavaType type) {",
        "begin_line": 491,
        "end_line": 491,
        "comment": "    \n     * Accessor for getting bean description that only contains class\n     * annotations: useful if no getter/setter/creator information is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#494",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.JavaType p_type_168_line_471 = type;",
        "begin_line": 494,
        "end_line": 494,
        "comment": "    \n     * Accessor for getting bean description that only contains class\n     * annotations: useful if no getter/setter/creator information is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#497",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "int PROBE_END_LINE_471 = 471;",
        "begin_line": 497,
        "end_line": 497,
        "comment": "    \n     * Accessor for getting bean description that only contains class\n     * annotations: useful if no getter/setter/creator information is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#501",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "/**",
        "begin_line": 501,
        "end_line": 501,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#515",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "VisibilityChecker<?> deserialization_config1_expr12_line_487 = super.getDefaultVisibilityChecker();",
        "begin_line": 515,
        "end_line": 515,
        "comment": "    \n     * Accessor for getting bean description that only contains immediate class\n     * annotations: ones from the class, and its direct mix-in, if any, but\n     * not from super types.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationConfig.unknown#550",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationConfig",
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig.unknown(...)",
        "snippet": "int f__deser_features_108_line_501 = _deserFeatures;",
        "begin_line": 550,
        "end_line": 550,
        "comment": "    \n     * Accessor for getting bean description that only contains immediate class\n     * annotations: ones from the class, and its direct mix-in, if any, but\n     * not from super types.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#17",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "public enum MapperFeature implements ConfigFeature",
        "begin_line": 17,
        "end_line": 17,
        "comment": "\n * Enumeration that defines simple on/off features to set\n * for {@link ObjectMapper}, and accessible (but not changeable)\n * via {@link ObjectReader} and {@link ObjectWriter} (as well as\n * through various convenience methods through context objects).\n *<p>\n * Note that in addition to being only mutable via {@link ObjectMapper},\n * changes only take effect when done <b>before any serialization or\n * deserialization</b> calls -- that is, caller must follow\n * \"configure-then-use\" pattern.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#33",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "USE_ANNOTATIONS(true),",
        "begin_line": 33,
        "end_line": 33,
        "comment": "    \n     * Feature that determines whether annotation introspection\n     * is used for configuration; if enabled, configured\n     * {@link AnnotationIntrospector} will be used: if disabled,\n     * no annotations are considered.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#49",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "AUTO_DETECT_CREATORS(true),",
        "begin_line": 49,
        "end_line": 49,
        "comment": "    \n     * Feature that determines whether \"creator\" methods are\n     * automatically detected by consider public constructors,\n     * and static single argument methods with name \"valueOf\".\n     * If disabled, only methods explicitly annotated are considered\n     * creator methods (except for the no-arg default constructor which\n     * is always considered a factory method).\n     *<p>\n     * Note that this feature has lower precedence than per-class\n     * annotations, and is only used if there isn't more granular\n     * configuration available.\n     *<P>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#64",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "AUTO_DETECT_FIELDS(true),",
        "begin_line": 64,
        "end_line": 64,
        "comment": "    \n     * Feature that determines whether non-static fields are recognized as\n     * properties.\n     * If yes, then all public member fields\n     * are considered as properties. If disabled, only fields explicitly\n     * annotated are considered property fields.\n     *<p>\n     * Note that this feature has lower precedence than per-class\n     * annotations, and is only used if there isn't more granular\n     * configuration available.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#83",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "AUTO_DETECT_GETTERS(true),",
        "begin_line": 83,
        "end_line": 83,
        "comment": "    \n     * Feature that determines whether regualr \"getter\" methods are\n     * automatically detected based on standard Bean naming convention\n     * or not. If yes, then all public zero-argument methods that\n     * start with prefix \"get\" \n     * are considered as getters.\n     * If disabled, only methods explicitly  annotated are considered getters.\n     *<p>\n     * Note that since version 1.3, this does <b>NOT</b> include\n     * \"is getters\" (see {@link #AUTO_DETECT_IS_GETTERS} for details)\n     *<p>\n     * Note that this feature has lower precedence than per-class\n     * annotations, and is only used if there isn't more granular\n     * configuration available.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#99",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "AUTO_DETECT_IS_GETTERS(true),",
        "begin_line": 99,
        "end_line": 99,
        "comment": "    \n     * Feature that determines whether \"is getter\" methods are\n     * automatically detected based on standard Bean naming convention\n     * or not. If yes, then all public zero-argument methods that\n     * start with prefix \"is\", and whose return type is boolean\n     * are considered as \"is getters\".\n     * If disabled, only methods explicitly annotated are considered getters.\n     *<p>\n     * Note that this feature has lower precedence than per-class\n     * annotations, and is only used if there isn't more granular\n     * configuration available.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#115",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "AUTO_DETECT_SETTERS(true),",
        "begin_line": 115,
        "end_line": 115,
        "comment": "     \n      * Feature that determines whether \"setter\" methods are\n      * automatically detected based on standard Bean naming convention\n      * or not. If yes, then all public one-argument methods that\n      * start with prefix \"set\"\n      * are considered setters. If disabled, only methods explicitly\n      * annotated are considered setters.\n      *<p>\n      * Note that this feature has lower precedence than per-class\n      * annotations, and is only used if there isn't more granular\n      * configuration available.\n      *<P>\n      * Feature is enabled by default.\n      ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#126",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "REQUIRE_SETTERS_FOR_GETTERS(false),",
        "begin_line": 126,
        "end_line": 126,
        "comment": "    \n     * Feature that determines whether getters (getter methods)\n     * can be auto-detected if there is no matching mutator (setter,\n     * constructor parameter or field) or not: if set to true,\n     * only getters that match a mutator are auto-discovered; if\n     * false, all auto-detectable getters can be discovered.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#144",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "USE_GETTERS_AS_SETTERS(true),",
        "begin_line": 144,
        "end_line": 144,
        "comment": "    \n     * Feature that determines whether otherwise regular \"getter\"\n     * methods (but only ones that handle Collections and Maps,\n     * not getters of other type)\n     * can be used for purpose of getting a reference to a Collection\n     * and Map to modify the property, without requiring a setter\n     * method.\n     * This is similar to how JAXB framework sets Collections and\n     * Maps: no setter is involved, just setter.\n     *<p>\n     * Note that such getters-as-setters methods have lower\n     * precedence than setters, so they are only used if no\n     * setter is found for the Map/Collection property.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#156",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "CAN_OVERRIDE_ACCESS_MODIFIERS(true),",
        "begin_line": 156,
        "end_line": 156,
        "comment": "    \n     * Feature that determines whether method and field access\n     * modifier settings can be overridden when accessing\n     * properties. If enabled, method\n     * {@link java.lang.reflect.AccessibleObject#setAccessible}\n     * may be called to enable access to otherwise unaccessible\n     * objects.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#174",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "INFER_PROPERTY_MUTATORS(true),",
        "begin_line": 174,
        "end_line": 174,
        "comment": "    \n     * Feature that determines whether member mutators (fields and\n     * setters) may be \"pulled in\" even if they are not visible,\n     * as long as there is a visible accessor (getter or field) with same name.\n     * For example: field \"value\" may be inferred as mutator,\n     * if there is visible or explicitly marked getter \"getValue()\".\n     * If enabled, inferring is enabled; otherwise (disabled) only visible and\n     * explicitly annotated accessors are ever used.\n     *<p>\n     * Note that 'getters' are never inferred and need to be either visible (including\n     * bean-style naming) or explicitly annotated.\n     *<p>\n     * Feature is enabled by default.\n     * \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#186",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "ALLOW_FINAL_FIELDS_AS_MUTATORS(true),",
        "begin_line": 186,
        "end_line": 186,
        "comment": "    \n     * Feature that determines whether member fields declared as 'final' may\n     * be auto-detected to be used mutators (used to change value of the logical\n     * property) or not. If enabled, 'final' access modifier has no effect, and\n     * such fields may be detected according to usual visibility and inference\n     * rules; if disabled, such fields are NOT used as mutators except if\n     * explicitly annotated for such use.\n     *<p>\n     * Feature is enabled by default, for backwards compatibility reasons.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#209",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "USE_STATIC_TYPING(false),",
        "begin_line": 209,
        "end_line": 209,
        "comment": "    \n     * Feature that determines whether the type detection for\n     * serialization should be using actual dynamic runtime type,\n     * or declared static type.\n     * Note that deserialization always uses declared static types\n     * since no runtime types are available (as we are creating\n     * instances after using type information).\n     *<p>\n     * This global default value can be overridden at class, method\n     * or field level by using {@link JsonSerialize#typing} annotation\n     * property.\n     *<p>\n     * Feature is disabled by default which means that dynamic runtime types\n     * are used (instead of declared static types) for serialization.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#233",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "DEFAULT_VIEW_INCLUSION(true),",
        "begin_line": 233,
        "end_line": 233,
        "comment": "    \n     * Feature that determines whether properties that have no view\n     * annotations are included in JSON serialization views (see\n     * {@link com.fasterxml.jackson.annotation.JsonView} for more\n     * details on JSON Views).\n     * If enabled, non-annotated properties will be included;\n     * when disabled, they will be excluded. So this feature\n     * changes between \"opt-in\" (feature disabled) and\n     * \"opt-out\" (feature enabled) modes.\n     *<p>\n     * Default value is enabled, meaning that non-annotated\n     * properties are included in all views if there is no\n     * {@link com.fasterxml.jackson.annotation.JsonView} annotation.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#255",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "SORT_PROPERTIES_ALPHABETICALLY(false),",
        "begin_line": 255,
        "end_line": 255,
        "comment": "    \n     * Feature that defines default property serialization order used\n     * for POJO fields (note: does <b>not</b> apply to {@link java.util.Map}\n     * serialization!):\n     * if enabled, default ordering is alphabetic (similar to\n     * how {@link com.fasterxml.jackson.annotation.JsonPropertyOrder#alphabetic()}\n     * works); if disabled, order is unspecified (based on what JDK gives\n     * us, which may be declaration order, but is not guaranteed).\n     *<p>\n     * Note that this is just the default behavior, and can be overridden by\n     * explicit overrides in classes.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#275",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "USE_WRAPPER_NAME_AS_PROPERTY_NAME(false)",
        "begin_line": 275,
        "end_line": 275,
        "comment": "    \n     * Feature that can be enabled to make property names be\n     * overridden by wrapper name (usually detected with annotations\n     * as defined by {@link AnnotationIntrospector#findWrapperName}.\n     * If enabled, all properties that have associated non-empty Wrapper\n     * name will use that wrapper name instead of property name.\n     * If disabled, wrapper name is only used for wrapping (if anything).\n     *<p>\n     * Feature is disabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#280",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "private MapperFeature(boolean defaultState) {",
        "begin_line": 280,
        "end_line": 280,
        "comment": "    \n     * Feature that can be enabled to make property names be\n     * overridden by wrapper name (usually detected with annotations\n     * as defined by {@link AnnotationIntrospector#findWrapperName}.\n     * If enabled, all properties that have associated non-empty Wrapper\n     * name will use that wrapper name instead of property name.\n     * If disabled, wrapper name is only used for wrapping (if anything).\n     *<p>\n     * Feature is disabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#281",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "int PROBE_START_LINE_281 = 281;",
        "begin_line": 281,
        "end_line": 281,
        "comment": "    \n     * Feature that can be enabled to make property names be\n     * overridden by wrapper name (usually detected with annotations\n     * as defined by {@link AnnotationIntrospector#findWrapperName}.\n     * If enabled, all properties that have associated non-empty Wrapper\n     * name will use that wrapper name instead of property name.\n     * If disabled, wrapper name is only used for wrapping (if anything).\n     *<p>\n     * Feature is disabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#282",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "boolean p_default_state_337_line_281 = defaultState;",
        "begin_line": 282,
        "end_line": 282,
        "comment": "    \n     * Feature that can be enabled to make property names be\n     * overridden by wrapper name (usually detected with annotations\n     * as defined by {@link AnnotationIntrospector#findWrapperName}.\n     * If enabled, all properties that have associated non-empty Wrapper\n     * name will use that wrapper name instead of property name.\n     * If disabled, wrapper name is only used for wrapping (if anything).\n     *<p>\n     * Feature is disabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#285",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "}",
        "begin_line": 285,
        "end_line": 285,
        "comment": "    \n     * Feature that can be enabled to make property names be\n     * overridden by wrapper name (usually detected with annotations\n     * as defined by {@link AnnotationIntrospector#findWrapperName}.\n     * If enabled, all properties that have associated non-empty Wrapper\n     * name will use that wrapper name instead of property name.\n     * If disabled, wrapper name is only used for wrapping (if anything).\n     *<p>\n     * Feature is disabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.MapperFeature.unknown#288",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/MapperFeature.java",
        "class_name": "com.fasterxml.jackson.databind.MapperFeature",
        "signature": "com.fasterxml.jackson.databind.MapperFeature.unknown(...)",
        "snippet": "public boolean enabledByDefault() { int PROBE_START_LINE_285 = 285;",
        "begin_line": 288,
        "end_line": 288,
        "comment": "    \n     * Feature that can be enabled to make property names be\n     * overridden by wrapper name (usually detected with annotations\n     * as defined by {@link AnnotationIntrospector#findWrapperName}.\n     * If enabled, all properties that have associated non-empty Wrapper\n     * name will use that wrapper name instead of property name.\n     * If disabled, wrapper name is only used for wrapping (if anything).\n     *<p>\n     * Feature is disabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.SerializerCache.unknown#31",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/SerializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.ser.SerializerCache",
        "signature": "com.fasterxml.jackson.databind.ser.SerializerCache.unknown(...)",
        "snippet": "private HashMap<TypeKey, JsonSerializer<Object>> _sharedMap = new HashMap<TypeKey, JsonSerializer<Object>>(64);",
        "begin_line": 31,
        "end_line": 31,
        "comment": "    \n     * Shared, modifiable map; all access needs to be through synchronized blocks.\n     *<p>\n     * NOTE: keys are of various types (see below for key types), in addition to\n     * basic {@link JavaType} used for \"untyped\" serializers.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.SerializerCache.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/SerializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.ser.SerializerCache",
        "signature": "com.fasterxml.jackson.databind.ser.SerializerCache.unknown(...)",
        "snippet": "private volatile ReadOnlyClassToSerializerMap _readOnlyMap = null;",
        "begin_line": 36,
        "end_line": 36,
        "comment": "    \n     * Most recent read-only instance, created from _sharedMap, if any.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.SerializerCache.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/SerializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.ser.SerializerCache",
        "signature": "com.fasterxml.jackson.databind.ser.SerializerCache.unknown(...)",
        "snippet": "public SerializerCache() { }",
        "begin_line": 38,
        "end_line": 38,
        "comment": "    \n     * Most recent read-only instance, created from _sharedMap, if any.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#43",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "{",
        "begin_line": 43,
        "end_line": 43,
        "comment": "    \n     * Let's cache hash code straight away, since we are\n     * almost certain to need it.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#44",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "int PROBE_START_LINE_44 = 44;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "    \n     * Let's cache hash code straight away, since we are\n     * almost certain to need it.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#45",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "Class<?> p_clz_2424_line_44 = clz;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "    \n     * Let's cache hash code straight away, since we are\n     * almost certain to need it.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#46",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "int PROBE_END_LINE_44 = 44;",
        "begin_line": 46,
        "end_line": 46,
        "comment": "    \n     * Let's cache hash code straight away, since we are\n     * almost certain to need it.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#47",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "_class = p_clz_2424_line_44;",
        "begin_line": 47,
        "end_line": 47,
        "comment": "    \n     * Let's cache hash code straight away, since we are\n     * almost certain to need it.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#78",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "}",
        "begin_line": 78,
        "end_line": 78,
        "comment": "         Just need to sort by name, ok to collide (unless used in TreeMap/Set!)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#79",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "",
        "begin_line": 79,
        "end_line": 79,
        "comment": "         Just need to sort by name, ok to collide (unless used in TreeMap/Set!)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#80",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "/*",
        "begin_line": 80,
        "end_line": 80,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#81",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 81,
        "end_line": 81,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#90",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "Object p_o_2430_line_78 = o;",
        "begin_line": 90,
        "end_line": 90,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.type.ClassKey.unknown#93",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/type/ClassKey.java",
        "class_name": "com.fasterxml.jackson.databind.type.ClassKey",
        "signature": "com.fasterxml.jackson.databind.type.ClassKey.unknown(...)",
        "snippet": "if (class_key1_expr3_line_78) return true;",
        "begin_line": 93,
        "end_line": 93,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#29",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "*/",
        "begin_line": 29,
        "end_line": 29,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#33",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "Class<?> p_end_before_2588_line_29 = endBefore;",
        "begin_line": 33,
        "end_line": 33,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#34",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "List<Class<?>> class_util1_expr1_line_29 = findSuperTypes(p_cls_2587_line_29, p_end_before_2588_line_29,",
        "begin_line": 34,
        "end_line": 34,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "}",
        "begin_line": 38,
        "end_line": 38,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#39",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "",
        "begin_line": 39,
        "end_line": 39,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#40",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "public static List<Class<?>> findSuperTypes(Class<?> cls, Class<?> endBefore, List<Class<?>> result) {",
        "begin_line": 40,
        "end_line": 40,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#43",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "Class<?> p_end_before_2590_line_33 = endBefore;",
        "begin_line": 43,
        "end_line": 43,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#45",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "int PROBE_END_LINE_33 = 33;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#46",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "_addSuperTypes(p_cls_2589_line_33, p_end_before_2590_line_33, p_result_2591_line_33, false);",
        "begin_line": 46,
        "end_line": 46,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#48",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "List<Class<?>> p_result_2591_line_34 = result;",
        "begin_line": 48,
        "end_line": 48,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#49",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "int PROBE_END_LINE_34 = 34;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "    \n     * Method that will find all sub-classes and implemented interfaces\n     * of a given class or interface. Classes are listed in order of\n     * precedence, starting with the immediate super-class, followed by\n     * interfaces class directly declares to implemented, and then recursively\n     * followed by parent of super-class and so forth.\n     * Note that <code>Object.class</code> is not included in the list\n     * regardless of whether <code>endBefore</code> argument is defined or not.\n     *\n     * @param endBefore Super-type to NOT include in results, if any; when\n     *    encountered, will be ignored (and no super types are checked).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#595",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "* Code is needed to work around design flaw in JDK.",
        "begin_line": 595,
        "end_line": 595,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.ClassUtil.unknown#599",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "class_name": "com.fasterxml.jackson.databind.util.ClassUtil",
        "signature": "com.fasterxml.jackson.databind.util.ClassUtil.unknown(...)",
        "snippet": "if (!m.isEmpty()) {",
        "begin_line": 599,
        "end_line": 599,
        "comment": "    \n     * Helper method that can be used to dynamically figure out\n     * enumeration type of given {@link EnumSet}, without having\n     * access to its declaration.\n     * Code is needed to work around design flaw in JDK.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StringSerializer.unknown#25",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StringSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StringSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.StringSerializer.unknown(...)",
        "snippet": "public StringSerializer() { super(String.class); }",
        "begin_line": 25,
        "end_line": 25,
        "comment": "\n * This is the special serializer for regular {@link java.lang.String}s.\n *<p>\n * Since this is one of \"native\" types, no type information is ever\n * included on serialization (unlike for most scalar types as of 1.5)\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#75",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "{",
        "begin_line": 75,
        "end_line": 75,
        "comment": "    \n     * @param raw \"Raw\" (type-erased) class for this type\n     * @param additionalHash Additional hash code to use, in addition\n     *   to hash code of the class name \n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "int PROBE_START_LINE_76 = 76;",
        "begin_line": 76,
        "end_line": 76,
        "comment": "    \n     * @param raw \"Raw\" (type-erased) class for this type\n     * @param additionalHash Additional hash code to use, in addition\n     *   to hash code of the class name \n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#77",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "Class<?> p_raw_285_line_76 = raw;",
        "begin_line": 77,
        "end_line": 77,
        "comment": "    \n     * @param raw \"Raw\" (type-erased) class for this type\n     * @param additionalHash Additional hash code to use, in addition\n     *   to hash code of the class name \n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#78",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "int PROBE_END_LINE_76 = 76;",
        "begin_line": 78,
        "end_line": 78,
        "comment": "    \n     * @param raw \"Raw\" (type-erased) class for this type\n     * @param additionalHash Additional hash code to use, in addition\n     *   to hash code of the class name \n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#79",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "_class = p_raw_285_line_76;",
        "begin_line": 79,
        "end_line": 79,
        "comment": "    \n     * @param raw \"Raw\" (type-erased) class for this type\n     * @param additionalHash Additional hash code to use, in addition\n     *   to hash code of the class name \n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#80",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "int PROBE_START_LINE_77 = 77;",
        "begin_line": 80,
        "end_line": 80,
        "comment": "    \n     * @param raw \"Raw\" (type-erased) class for this type\n     * @param additionalHash Additional hash code to use, in addition\n     *   to hash code of the class name \n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#81",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "Class<?> p_raw_285_line_77 = raw;",
        "begin_line": 81,
        "end_line": 81,
        "comment": "    \n     * @param raw \"Raw\" (type-erased) class for this type\n     * @param additionalHash Additional hash code to use, in addition\n     *   to hash code of the class name \n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#219",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "",
        "begin_line": 219,
        "end_line": 219,
        "comment": "         Otherwise, ensure compatibility",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#231",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "/*",
        "begin_line": 231,
        "end_line": 231,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#252",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "public boolean isAbstract() {",
        "begin_line": 252,
        "end_line": 252,
        "comment": "    \n     * Method that can be used to check whether this type has\n     * specified Class as its type erasure. Put another way, returns\n     * true if instantiation of this Type is given (type-erased) Class.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#258",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "return java_type1_expr4_line_231;",
        "begin_line": 258,
        "end_line": 258,
        "comment": "    \n     * Method that can be used to check whether this type has\n     * specified Class as its type erasure. Put another way, returns\n     * true if instantiation of this Type is given (type-erased) Class.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#264",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "* are not.",
        "begin_line": 264,
        "end_line": 264,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#282",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "int PROBE_END_LINE_252 = 252;",
        "begin_line": 282,
        "end_line": 282,
        "comment": "        /* 19-Feb-2010, tatus: Holy mackarel; primitive types\n         *    have 'abstract' flag set...\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#290",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "Class<?> f__class_290_line_258 = _class;",
        "begin_line": 290,
        "end_line": 290,
        "comment": "        /* 19-Feb-2010, tatus: Holy mackarel; primitive types\n         *    have 'abstract' flag set...\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#312",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "@Override",
        "begin_line": 312,
        "end_line": 312,
        "comment": "    \n     * @return True if type represented is a container type; this includes\n     *    array, Map and Collection types.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.JavaType.unknown#425",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/JavaType.java",
        "class_name": "com.fasterxml.jackson.databind.JavaType",
        "signature": "com.fasterxml.jackson.databind.JavaType.unknown(...)",
        "snippet": "",
        "begin_line": 425,
        "end_line": 425,
        "comment": "    \n     * Method for accessing signature without generic\n     * type information, in form compatible with all versions\n     * of JVM, and specifically used for type descriptions\n     * when generating byte code.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#41",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "",
        "begin_line": 41,
        "end_line": 41,
        "comment": "\n * Class that defines API used by {@link ObjectMapper} and\n * {@link JsonSerializer}s to obtain serializers capable of serializing\n * instances of specific types; as well as the default implementation\n * of the functionality.\n *<p>\n * Provider handles caching aspects of serializer handling; all construction\n * details are delegated to {@link SerializerFactory} instance.\n *<p>\n * Object life-cycle is such that an initial instance (\"blueprint\") is created\n * and referenced by {@link ObjectMapper} and {@link ObjectWriter} intances;\n * but for actual usage, a configured instance is created by using\n * a create method in sub-class\n * {@link com.fasterxml.jackson.databind.ser.DefaultSerializerProvider}.\n * Only this instance can be used for actual serialization calls; blueprint\n * object is only to be used for creating instances.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#50",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "@Deprecated // since 2.3, not used by anything it seems",
        "begin_line": 50,
        "end_line": 50,
        "comment": "\n * Class that defines API used by {@link ObjectMapper} and\n * {@link JsonSerializer}s to obtain serializers capable of serializing\n * instances of specific types; as well as the default implementation\n * of the functionality.\n *<p>\n * Provider handles caching aspects of serializer handling; all construction\n * details are delegated to {@link SerializerFactory} instance.\n *<p>\n * Object life-cycle is such that an initial instance (\"blueprint\") is created\n * and referenced by {@link ObjectMapper} and {@link ObjectWriter} intances;\n * but for actual usage, a configured instance is created by using\n * a create method in sub-class\n * {@link com.fasterxml.jackson.databind.ser.DefaultSerializerProvider}.\n * Only this instance can be used for actual serialization calls; blueprint\n * object is only to be used for creating instances.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#56",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "* is in some cases?",
        "begin_line": 56,
        "end_line": 56,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#120",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "/* Configuration, specialized serializers",
        "begin_line": 120,
        "end_line": 120,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#133",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "*<p>",
        "begin_line": 133,
        "end_line": 133,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#142",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "*/",
        "begin_line": 142,
        "end_line": 142,
        "comment": "    \n     * Serializer used to output non-null keys of Maps (which will get\n     * output as JSON Objects), if not null; if null, us the standard\n     * default key serializer.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#182",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "protected final ReadOnlyClassToSerializerMap _knownSerializers;",
        "begin_line": 182,
        "end_line": 182,
        "comment": "    \n     * For fast lookups, we will have a local non-shared read-only\n     * map that contains serializers previously fetched.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#183",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "",
        "begin_line": 183,
        "end_line": 183,
        "comment": "    \n     * For fast lookups, we will have a local non-shared read-only\n     * map that contains serializers previously fetched.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#184",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "/**",
        "begin_line": 184,
        "end_line": 184,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#185",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "* Lazily acquired and instantiated formatter object: initialized",
        "begin_line": 185,
        "end_line": 185,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#187",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "* (not blueprints), so that access need not be thread-safe.",
        "begin_line": 187,
        "end_line": 187,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#188",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "*/",
        "begin_line": 188,
        "end_line": 188,
        "comment": "    \n     * Lazily acquired and instantiated formatter object: initialized\n     * first time it is needed, reused afterwards. Used via instances\n     * (not blueprints), so that access need not be thread-safe.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#190",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "",
        "begin_line": 190,
        "end_line": 190,
        "comment": "    \n     * Lazily acquired and instantiated formatter object: initialized\n     * first time it is needed, reused afterwards. Used via instances\n     * (not blueprints), so that access need not be thread-safe.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#191",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "/**",
        "begin_line": 191,
        "end_line": 191,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#194",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "* @since 2.3",
        "begin_line": 194,
        "end_line": 194,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializerProvider.unknown#195",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializerProvider.java",
        "class_name": "com.fasterxml.jackson.databind.SerializerProvider",
        "signature": "com.fasterxml.jackson.databind.SerializerProvider.unknown(...)",
        "snippet": "*/",
        "begin_line": 195,
        "end_line": 195,
        "comment": "    \n     * Flag set to indicate that we are using vanilla null value serialization\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#21",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "*/",
        "begin_line": 21,
        "end_line": 21,
        "comment": "\n * Helper class used for storing and accessing per-call attributes.\n * Storage is two-layered: at higher precedence, we have actual per-call\n * attributes; and at lower precedence, default attributes that may be\n * defined for Object readers and writers.\n *<p>\n * Note that the way mutability is implemented differs between kinds\n * of attributes, to account for thread-safety: per-call attributes\n * are handled assuming that instances are never shared, whereas\n * changes to per-reader/per-writer attributes are made assuming\n * sharing, by creating new copies instead of modifying state.\n * This allows sharing of default values without per-call copying, but\n * requires two-level lookup on access.\n * \n * @since 2.3\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#24",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "public static ContextAttributes getEmpty() {",
        "begin_line": 24,
        "end_line": 24,
        "comment": "\n * Helper class used for storing and accessing per-call attributes.\n * Storage is two-layered: at higher precedence, we have actual per-call\n * attributes; and at lower precedence, default attributes that may be\n * defined for Object readers and writers.\n *<p>\n * Note that the way mutability is implemented differs between kinds\n * of attributes, to account for thread-safety: per-call attributes\n * are handled assuming that instances are never shared, whereas\n * changes to per-reader/per-writer attributes are made assuming\n * sharing, by creating new copies instead of modifying state.\n * This allows sharing of default values without per-call copying, but\n * requires two-level lookup on access.\n * \n * @since 2.3\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#62",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "/* Default implementation",
        "begin_line": 62,
        "end_line": 62,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#67",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "implements java.io.Serializable // just so ObjectReader/ObjectWriter can retain configs",
        "begin_line": 67,
        "end_line": 67,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#69",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "private static final long serialVersionUID = 1L;",
        "begin_line": 69,
        "end_line": 69,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#88",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "* shared between threads.",
        "begin_line": 88,
        "end_line": 88,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#89",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "*/",
        "begin_line": 89,
        "end_line": 89,
        "comment": "        \n         * Per-call attributes that we can directly modify, since they are not\n         * shared between threads.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#90",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "protected transient Map<Object,Object> _nonShared;",
        "begin_line": 90,
        "end_line": 90,
        "comment": "        \n         * Per-call attributes that we can directly modify, since they are not\n         * shared between threads.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#91",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "",
        "begin_line": 91,
        "end_line": 91,
        "comment": "        \n         * Per-call attributes that we can directly modify, since they are not\n         * shared between threads.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown#99",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/ContextAttributes.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.ContextAttributes",
        "signature": "com.fasterxml.jackson.databind.cfg.ContextAttributes.unknown(...)",
        "snippet": "int PROBE_START_LINE_89 = 89;",
        "begin_line": 99,
        "end_line": 99,
        "comment": "        ********************************************************\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#44",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "private static final long serialVersionUID = 1;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n * Concrete deserializer factory class that adds full Bean deserializer\n * construction logic using class introspection.\n * Note that factories specifically do not implement any form of caching:\n * aside from configuration they are stateless; caching is implemented\n * by other components.\n *<p>\n * Instances of this class are fully immutable as all configuration is\n * done by using \"fluent factories\" (methods that construct new factory\n * instances with different configuration, instead of modifying instance).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#46",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "/**",
        "begin_line": 46,
        "end_line": 46,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "",
        "begin_line": 58,
        "end_line": 58,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#62",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "*/",
        "begin_line": 62,
        "end_line": 62,
        "comment": "    \n     * Globally shareable thread-safe instance which has no additional custom deserializers\n     * registered\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#63",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(",
        "begin_line": 63,
        "end_line": 63,
        "comment": "    \n     * Globally shareable thread-safe instance which has no additional custom deserializers\n     * registered\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#103",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "@SuppressWarnings(\"unchecked\")",
        "begin_line": 103,
        "end_line": 103,
        "comment": "     Note: NOT overriding, superclass has no matching method",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#109",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig f__factory_config_988_line_103 = _factoryConfig;",
        "begin_line": 109,
        "end_line": 109,
        "comment": "     Note: NOT overriding, superclass has no matching method",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#128",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "/**",
        "begin_line": 128,
        "end_line": 128,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#130",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "* deserializer for types other than Collections, Maps, arrays and",
        "begin_line": 130,
        "end_line": 130,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#131",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "* enums.",
        "begin_line": 131,
        "end_line": 131,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#138",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_128 = 128;",
        "begin_line": 138,
        "end_line": 138,
        "comment": "    \n     * Method that {@link DeserializerCache}s call to create a new\n     * deserializer for types other than Collections, Maps, arrays and\n     * enums.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#144",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.JavaType p_type_1152_line_130 = type;",
        "begin_line": 144,
        "end_line": 144,
        "comment": "    \n     * Method that {@link DeserializerCache}s call to create a new\n     * deserializer for types other than Collections, Maps, arrays and\n     * enums.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#158",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "}",
        "begin_line": 158,
        "end_line": 158,
        "comment": "\t\t We may also have custom overrides:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#159",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "int PROBE_START_LINE_138 = 140;",
        "begin_line": 159,
        "end_line": 159,
        "comment": "\t\t We may also have custom overrides:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#160",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.JavaType p_type_1152_line_138 = type;",
        "begin_line": 160,
        "end_line": 160,
        "comment": "\t\t We may also have custom overrides:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#193",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "JsonDeserializer<?> bean_deserializer_factory1_expr13_line_158 = findStdDeserializer(p_ctxt_1151_line_158,",
        "begin_line": 193,
        "end_line": 193,
        "comment": "                /* important: introspect actual implementation (abstract class or\n                 * interface doesn't have constructors, for one)\n                 ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#194",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "p_type_1152_line_158, p_bean_desc_1153_line_158);",
        "begin_line": 194,
        "end_line": 194,
        "comment": "                /* important: introspect actual implementation (abstract class or\n                 * interface doesn't have constructors, for one)\n                 ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown#195",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
        "signature": "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.unknown(...)",
        "snippet": "int PROBE_END_LINE_157 = 158;",
        "begin_line": 195,
        "end_line": 195,
        "comment": "                /* important: introspect actual implementation (abstract class or\n                 * interface doesn't have constructors, for one)\n                 ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdSerializer.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdSerializer.unknown(...)",
        "snippet": "protected StdSerializer(Class<T> t) {",
        "begin_line": 42,
        "end_line": 42,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdSerializer.unknown#43",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdSerializer.unknown(...)",
        "snippet": "int PROBE_START_LINE_43 = 43;",
        "begin_line": 43,
        "end_line": 43,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.StdSerializer.unknown#44",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.StdSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.StdSerializer.unknown(...)",
        "snippet": "Class<T> p_t_2333_line_43 = (Class<T>) t;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.unknown#62",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.unknown(...)",
        "snippet": "public final static BeanSerializerFactory instance = new BeanSerializerFactory(null);",
        "begin_line": 62,
        "end_line": 62,
        "comment": "    \n     * Like {@link BasicSerializerFactory}, this factory is stateless, and\n     * thus a single shared global (== singleton) instance can be used\n     * without thread-safety issues.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.unknown#75",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.unknown(...)",
        "snippet": "super(config);",
        "begin_line": 75,
        "end_line": 75,
        "comment": "    \n     * Constructor for creating instances with specified configuration.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
        "class_name": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
        "signature": "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.unknown(...)",
        "snippet": "}",
        "begin_line": 76,
        "end_line": 76,
        "comment": "    \n     * Constructor for creating instances with specified configuration.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#144",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "DeserializerCache cache)",
        "begin_line": 144,
        "end_line": 144,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#145",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "{",
        "begin_line": 145,
        "end_line": 145,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#148",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "boolean deserialization_context1_expr1_line_145 = p_df_181_line_145 == null;",
        "begin_line": 148,
        "end_line": 148,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#149",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "int PROBE_END_LINE_145 = 147;",
        "begin_line": 149,
        "end_line": 149,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#151",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "throw new IllegalArgumentException(\"Can not pass null DeserializerFactory\");",
        "begin_line": 151,
        "end_line": 151,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#152",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "}",
        "begin_line": 152,
        "end_line": 152,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#153",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "int PROBE_START_LINE_148 = 148;",
        "begin_line": 153,
        "end_line": 153,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#154",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.deser.DeserializerFactory p_df_181_line_148 = df;",
        "begin_line": 154,
        "end_line": 154,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#155",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "int PROBE_END_LINE_148 = 148;",
        "begin_line": 155,
        "end_line": 155,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#156",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "_factory = p_df_181_line_148;",
        "begin_line": 156,
        "end_line": 156,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#178",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "_factory = factory;",
        "begin_line": 178,
        "end_line": 178,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#179",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "",
        "begin_line": 179,
        "end_line": 179,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#180",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "_config = src._config;",
        "begin_line": 180,
        "end_line": 180,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#182",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "_view = src._view;",
        "begin_line": 182,
        "end_line": 182,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#183",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "_parser = src._parser;",
        "begin_line": 183,
        "end_line": 183,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#184",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "_injectableValues = src._injectableValues;",
        "begin_line": 184,
        "end_line": 184,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#185",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "_attributes = src._attributes;",
        "begin_line": 185,
        "end_line": 185,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#186",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "}",
        "begin_line": 186,
        "end_line": 186,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#187",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "",
        "begin_line": 187,
        "end_line": 187,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#188",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "/**",
        "begin_line": 188,
        "end_line": 188,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#197",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.deser.DeserializerCache f__cache_184_line_179 = p_src_192_line_179._cache;",
        "begin_line": 197,
        "end_line": 197,
        "comment": "    \n     * Constructor used for creating actual per-call instances.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#204",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "_factory = f__factory_183_line_180;",
        "begin_line": 204,
        "end_line": 204,
        "comment": "    \n     * Constructor used for creating actual per-call instances.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#367",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "}",
        "begin_line": 367,
        "end_line": 367,
        "comment": "    \n     * Method for accessing default Locale to use: convenience method for\n     *<pre>\n     *   getConfig().getLocale();\n     *</pre>\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#368",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "",
        "begin_line": 368,
        "end_line": 368,
        "comment": "    \n     * Method for accessing default Locale to use: convenience method for\n     *<pre>\n     *   getConfig().getLocale();\n     *</pre>\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#369",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "/**",
        "begin_line": 369,
        "end_line": 369,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#371",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "*<pre>",
        "begin_line": 371,
        "end_line": 371,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#381",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "/* Public API, pass-through to DeserializerCache",
        "begin_line": 381,
        "end_line": 381,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#383",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "*/",
        "begin_line": 383,
        "end_line": 383,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#386",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "public boolean hasValueDeserializerFor(JavaType type) {",
        "begin_line": 386,
        "end_line": 386,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#387",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "return hasValueDeserializerFor(type, null);",
        "begin_line": 387,
        "end_line": 387,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#388",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "}",
        "begin_line": 388,
        "end_line": 388,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#393",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "*",
        "begin_line": 393,
        "end_line": 393,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#450",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "*/",
        "begin_line": 450,
        "end_line": 450,
        "comment": "    \n     * Method for finding a deserializer for root-level value.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#479",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": ".findTypeDeserializer(f__config_186_line_387, p_type_211_line_387);",
        "begin_line": 479,
        "end_line": 479,
        "comment": "    \n     * Method for finding a deserializer for root-level value.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#480",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "int PROBE_END_LINE_387 = 387;",
        "begin_line": 480,
        "end_line": 480,
        "comment": "    \n     * Method for finding a deserializer for root-level value.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#481",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "TypeDeserializer typeDeser = deserialization_context1_expr21_line_387;",
        "begin_line": 481,
        "end_line": 481,
        "comment": "    \n     * Method for finding a deserializer for root-level value.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#485",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "int PROBE_END_LINE_388 = 392;",
        "begin_line": 485,
        "end_line": 485,
        "comment": "    \n     * Method for finding a deserializer for root-level value.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#499",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "*<pre>",
        "begin_line": 499,
        "end_line": 499,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#501",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "*</pre>",
        "begin_line": 501,
        "end_line": 501,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#503",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "public final KeyDeserializer findKeyDeserializer(JavaType keyType,",
        "begin_line": 503,
        "end_line": 503,
        "comment": "    \n     * Convenience method, functionally same as:\n     *<pre>\n     *  getDeserializerProvider().findKeyDeserializer(getConfig(), prop.getType(), prop);\n     *</pre>\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#580",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "* useful for efficiently constructing Object arrays and Lists.",
        "begin_line": 580,
        "end_line": 580,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#581",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "* Note that leased buffers should be returned once deserializer",
        "begin_line": 581,
        "end_line": 581,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationContext.unknown#583",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/DeserializationContext.java",
        "class_name": "com.fasterxml.jackson.databind.DeserializationContext",
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.unknown(...)",
        "snippet": "*/",
        "begin_line": 583,
        "end_line": 583,
        "comment": "    \n     * Method that can be used to get access to a reusable ObjectBuffer,\n     * useful for efficiently constructing Object arrays and Lists.\n     * Note that leased buffers should be returned once deserializer\n     * is done, to allow for reuse during same round of deserialization.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#172",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "",
        "begin_line": 172,
        "end_line": 172,
        "comment": "        \n         * By default, all matching single-arg constructed are found,\n         * regardless of visibility. Does not apply to factory methods,\n         * they can not be auto-detected; ditto for multiple-argument\n         * constructors.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#180",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "",
        "begin_line": 180,
        "end_line": 180,
        "comment": "\t\t\n         * This is the canonical base instance, configured with default\n         * visibility values\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#189",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "int PROBE_END_LINE_180 = 180;",
        "begin_line": 189,
        "end_line": 189,
        "comment": "\t\t\n         * This is the canonical base instance, configured with default\n         * visibility values\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#191",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "",
        "begin_line": 191,
        "end_line": 191,
        "comment": "\t\t\n         * This is the canonical base instance, configured with default\n         * visibility values\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#192",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "/**",
        "begin_line": 192,
        "end_line": 192,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#193",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "* Constructor used for building instance that has minumum visibility",
        "begin_line": 193,
        "end_line": 193,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#194",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "* levels as indicated by given annotation instance",
        "begin_line": 194,
        "end_line": 194,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#195",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "*",
        "begin_line": 195,
        "end_line": 195,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown#196",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/VisibilityChecker.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
        "signature": "com.fasterxml.jackson.databind.introspect.VisibilityChecker.unknown(...)",
        "snippet": "* @param ann Annotations to use for determining minimum visibility levels",
        "begin_line": 196,
        "end_line": 196,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "TypeResolverBuilder<?> typer, DateFormat dateFormat, HandlerInstantiator hi,",
        "begin_line": 140,
        "end_line": 140,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#141",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "Locale locale, TimeZone tz, Base64Variant defaultBase64)",
        "begin_line": 141,
        "end_line": 141,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#142",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "{",
        "begin_line": 142,
        "end_line": 142,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#143",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "int PROBE_START_LINE_141 = 141;",
        "begin_line": 143,
        "end_line": 143,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#144",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.introspect.ClassIntrospector p_ci_808_line_141 = ci;",
        "begin_line": 144,
        "end_line": 144,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#145",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "int PROBE_END_LINE_141 = 141;",
        "begin_line": 145,
        "end_line": 145,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#146",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "_classIntrospector = p_ci_808_line_141;",
        "begin_line": 146,
        "end_line": 146,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#147",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "int PROBE_START_LINE_142 = 142;",
        "begin_line": 147,
        "end_line": 147,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#148",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.AnnotationIntrospector p_ai_809_line_142 = ai;",
        "begin_line": 148,
        "end_line": 148,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#149",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "int PROBE_END_LINE_142 = 142;",
        "begin_line": 149,
        "end_line": 149,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#150",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "_annotationIntrospector = p_ai_809_line_142;",
        "begin_line": 150,
        "end_line": 150,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#151",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "int PROBE_START_LINE_143 = 143;",
        "begin_line": 151,
        "end_line": 151,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#152",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "VisibilityChecker<?> p_vc_810_line_143 = vc;",
        "begin_line": 152,
        "end_line": 152,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#301",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "}",
        "begin_line": 301,
        "end_line": 301,
        "comment": "    \n     * Fluent factory for constructing a new instance that uses specified TimeZone.\n     * Note that timezone used with also be assigned to configured {@link DateFormat},\n     * changing time formatting defaults.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#305",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "} else {",
        "begin_line": 305,
        "end_line": 305,
        "comment": "    \n     * Fluent factory for constructing a new instance that uses specified TimeZone.\n     * Note that timezone used with also be assigned to configured {@link DateFormat},\n     * changing time formatting defaults.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#309",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "}",
        "begin_line": 309,
        "end_line": 309,
        "comment": "             we don't know if original format might be shared; better create a clone:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#313",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "tz, _defaultBase64);",
        "begin_line": 313,
        "end_line": 313,
        "comment": "             we don't know if original format might be shared; better create a clone:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#317",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "* @since 2.1",
        "begin_line": 317,
        "end_line": 317,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown#321",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/cfg/BaseSettings.java",
        "class_name": "com.fasterxml.jackson.databind.cfg.BaseSettings",
        "signature": "com.fasterxml.jackson.databind.cfg.BaseSettings.unknown(...)",
        "snippet": "return this;",
        "begin_line": 321,
        "end_line": 321,
        "comment": "    \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#199",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 199,
        "end_line": 199,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#204",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "private static final com.fasterxml.jackson.databind.type.SimpleType object_mapper1_expr1_line_199 = SimpleType",
        "begin_line": 204,
        "end_line": 204,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#207",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "int PROBE_END_LINE_199 = 199;",
        "begin_line": 207,
        "end_line": 207,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#209",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "// Quick little shortcut, to avoid having to use global TypeFactory instance...",
        "begin_line": 209,
        "end_line": 209,
        "comment": "\t Quick little shortcut, to avoid having to use global TypeFactory instance...",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#211",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "",
        "begin_line": 211,
        "end_line": 211,
        "comment": "\t Quick little shortcut, to avoid having to use global TypeFactory instance...",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#217",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "",
        "begin_line": 217,
        "end_line": 217,
        "comment": "\t Quick little shortcut, to avoid having to use global TypeFactory instance...",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#356",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "protected DefaultDeserializationContext _deserializationContext;",
        "begin_line": 356,
        "end_line": 356,
        "comment": "    \n     * Blueprint context object; stored here to allow custom\n     * sub-classes. Contains references to objects needed for\n     * deserialization construction (cache, factory).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#379",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* (should very quickly converge to zero after startup), let's",
        "begin_line": 379,
        "end_line": 379,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#380",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* explicitly define a low concurrency setting.",
        "begin_line": 380,
        "end_line": 380,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#430",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "_jsonFactory.setCodec(this);",
        "begin_line": 430,
        "end_line": 430,
        "comment": "    \n     * Copy-constructor, mostly used to support {@link #copy}.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#437",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "_serializationConfig = new SerializationConfig(src._serializationConfig, mixins);",
        "begin_line": 437,
        "end_line": 437,
        "comment": "    \n     * Copy-constructor, mostly used to support {@link #copy}.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#438",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "_deserializationConfig = new DeserializationConfig(src._deserializationConfig, mixins);",
        "begin_line": 438,
        "end_line": 438,
        "comment": "    \n     * Copy-constructor, mostly used to support {@link #copy}.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#445",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "",
        "begin_line": 445,
        "end_line": 445,
        "comment": "         Default serializer factory is stateless, can just assign",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#446",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "/**",
        "begin_line": 446,
        "end_line": 446,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#448",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* for constructing necessary {@link JsonParser}s and/or",
        "begin_line": 448,
        "end_line": 448,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#450",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* serializers and deserializers.",
        "begin_line": 450,
        "end_line": 450,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#451",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "*",
        "begin_line": 451,
        "end_line": 451,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#452",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* @param jf JsonFactory to use: if null, a new {@link MappingJsonFactory} will be constructed",
        "begin_line": 452,
        "end_line": 452,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#454",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* @param dc Blueprint deserialization context instance to use for creating",
        "begin_line": 454,
        "end_line": 454,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#458",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "public ObjectMapper(JsonFactory jf,",
        "begin_line": 458,
        "end_line": 458,
        "comment": "    \n     * Constructs instance that uses specified {@link JsonFactory}\n     * for constructing necessary {@link JsonParser}s and/or\n     * {@link JsonGenerator}s, and uses given providers for accessing\n     * serializers and deserializers.\n     * \n     * @param jf JsonFactory to use: if null, a new {@link MappingJsonFactory} will be constructed\n     * @param sp SerializerProvider to use: if null, a {@link SerializerProvider} will be constructed\n     * @param dc Blueprint deserialization context instance to use for creating\n     *    actual context objects; if null, will construct standard\n     *    {@link DeserializationContext}\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#459",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "DefaultSerializerProvider sp, DefaultDeserializationContext dc)",
        "begin_line": 459,
        "end_line": 459,
        "comment": "    \n     * Constructs instance that uses specified {@link JsonFactory}\n     * for constructing necessary {@link JsonParser}s and/or\n     * {@link JsonGenerator}s, and uses given providers for accessing\n     * serializers and deserializers.\n     * \n     * @param jf JsonFactory to use: if null, a new {@link MappingJsonFactory} will be constructed\n     * @param sp SerializerProvider to use: if null, a {@link SerializerProvider} will be constructed\n     * @param dc Blueprint deserialization context instance to use for creating\n     *    actual context objects; if null, will construct standard\n     *    {@link DeserializationContext}\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#463",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "boolean object_mapper1_expr13_line_437 = p_jf_360_line_437 == null;",
        "begin_line": 463,
        "end_line": 463,
        "comment": "    \n     * Constructs instance that uses specified {@link JsonFactory}\n     * for constructing necessary {@link JsonParser}s and/or\n     * {@link JsonGenerator}s, and uses given providers for accessing\n     * serializers and deserializers.\n     * \n     * @param jf JsonFactory to use: if null, a new {@link MappingJsonFactory} will be constructed\n     * @param sp SerializerProvider to use: if null, a {@link SerializerProvider} will be constructed\n     * @param dc Blueprint deserialization context instance to use for creating\n     *    actual context objects; if null, will construct standard\n     *    {@link DeserializationContext}\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#464",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "int PROBE_END_LINE_437 = 444;",
        "begin_line": 464,
        "end_line": 464,
        "comment": "    \n     * Constructs instance that uses specified {@link JsonFactory}\n     * for constructing necessary {@link JsonParser}s and/or\n     * {@link JsonGenerator}s, and uses given providers for accessing\n     * serializers and deserializers.\n     * \n     * @param jf JsonFactory to use: if null, a new {@link MappingJsonFactory} will be constructed\n     * @param sp SerializerProvider to use: if null, a {@link SerializerProvider} will be constructed\n     * @param dc Blueprint deserialization context instance to use for creating\n     *    actual context objects; if null, will construct standard\n     *    {@link DeserializationContext}\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#468",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* 03-Jan-2010, tatu: and obviously we also must pass 'this',",
        "begin_line": 468,
        "end_line": 468,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#469",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "*    to create actual linking.",
        "begin_line": 469,
        "end_line": 469,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#820",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* Method for locating available methods, using JDK {@link ServiceLoader}",
        "begin_line": 820,
        "end_line": 820,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#1314",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "*",
        "begin_line": 1314,
        "end_line": 1314,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#2146",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* by checking whether a deserializer can be found for the type.",
        "begin_line": 2146,
        "end_line": 2146,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#2994",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "return;",
        "begin_line": 2994,
        "end_line": 2994,
        "comment": "         [JACKSON-282]: consider Closeable",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3036",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "jgen.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);",
        "begin_line": 3036,
        "end_line": 3036,
        "comment": "                    structures, which typically causes more damage.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3037",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "try {",
        "begin_line": 3037,
        "end_line": 3037,
        "comment": "                    structures, which typically causes more damage.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3042",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "try {",
        "begin_line": 3042,
        "end_line": 3042,
        "comment": "                    structures, which typically causes more damage.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3045",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "}",
        "begin_line": 3045,
        "end_line": 3045,
        "comment": "                    structures, which typically causes more damage.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3046",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "}",
        "begin_line": 3046,
        "end_line": 3046,
        "comment": "                    structures, which typically causes more damage.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3047",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "}",
        "begin_line": 3047,
        "end_line": 3047,
        "comment": "                    structures, which typically causes more damage.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3048",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "",
        "begin_line": 3048,
        "end_line": 3048,
        "comment": "                    structures, which typically causes more damage.",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3051",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* method is to be called right after serialization has been called",
        "begin_line": 3051,
        "end_line": 3051,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3053",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "private final void _writeCloseableValue(JsonGenerator jgen, Object value, SerializationConfig cfg)",
        "begin_line": 3053,
        "end_line": 3053,
        "comment": "    \n     * Helper method used when value to serialize is {@link Closeable} and its <code>close()</code>\n     * method is to be called right after serialization has been called\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3056",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "Closeable toClose = (Closeable) value;",
        "begin_line": 3056,
        "end_line": 3056,
        "comment": "    \n     * Helper method used when value to serialize is {@link Closeable} and its <code>close()</code>\n     * method is to be called right after serialization has been called\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3057",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "try {",
        "begin_line": 3057,
        "end_line": 3057,
        "comment": "    \n     * Helper method used when value to serialize is {@link Closeable} and its <code>close()</code>\n     * method is to be called right after serialization has been called\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3060",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "jgen.flush();",
        "begin_line": 3060,
        "end_line": 3060,
        "comment": "    \n     * Helper method used when value to serialize is {@link Closeable} and its <code>close()</code>\n     * method is to be called right after serialization has been called\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3061",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "}",
        "begin_line": 3061,
        "end_line": 3061,
        "comment": "    \n     * Helper method used when value to serialize is {@link Closeable} and its <code>close()</code>\n     * method is to be called right after serialization has been called\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3087",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "{",
        "begin_line": 3087,
        "end_line": 3087,
        "comment": "    \n     * Internal helper method called to create an instance of {@link DeserializationContext}\n     * for deserializing a single root value.\n     * Can be overridden if a custom context is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3088",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "int PROBE_START_LINE_2994 = 2995;",
        "begin_line": 3088,
        "end_line": 3088,
        "comment": "    \n     * Internal helper method called to create an instance of {@link DeserializationContext}\n     * for deserializing a single root value.\n     * Can be overridden if a custom context is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3090",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.DeserializationConfig p_cfg_620_line_2994 = cfg;",
        "begin_line": 3090,
        "end_line": 3090,
        "comment": "    \n     * Internal helper method called to create an instance of {@link DeserializationContext}\n     * for deserializing a single root value.\n     * Can be overridden if a custom context is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3091",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext object_mapper1_expr37_line_2994 = f__deserialization_context_374_line_2994",
        "begin_line": 3091,
        "end_line": 3091,
        "comment": "    \n     * Internal helper method called to create an instance of {@link DeserializationContext}\n     * for deserializing a single root value.\n     * Can be overridden if a custom context is needed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3098",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "* Actual implementation of value reading+binding operation.",
        "begin_line": 3098,
        "end_line": 3098,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3149",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "result = _findRootDeserializer(ctxt, valueType).getNullValue();",
        "begin_line": 3149,
        "end_line": 3149,
        "comment": "                 [JACKSON-643]: Ask JsonDeserializer what 'null value' to use:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3150",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "} else {",
        "begin_line": 3150,
        "end_line": 3150,
        "comment": "                 [JACKSON-643]: Ask JsonDeserializer what 'null value' to use:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3151",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "int PROBE_START_LINE_3042 = 3054;",
        "begin_line": 3151,
        "end_line": 3151,
        "comment": "                 [JACKSON-643]: Ask JsonDeserializer what 'null value' to use:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3154",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "boolean object_mapper1_expr41_line_3042 = v_t_627_line_3042 == f_end_array_629_line_3042;",
        "begin_line": 3154,
        "end_line": 3154,
        "comment": "                 [JACKSON-643]: Ask JsonDeserializer what 'null value' to use:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3155",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "boolean object_mapper1_expr42_line_3042 = false;",
        "begin_line": 3155,
        "end_line": 3155,
        "comment": "                 [JACKSON-643]: Ask JsonDeserializer what 'null value' to use:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3158",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "object_mapper1_expr42_line_3042 = t == f_end_object_630_line_3042;",
        "begin_line": 3158,
        "end_line": 3158,
        "comment": "                 [JACKSON-643]: Ask JsonDeserializer what 'null value' to use:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper.unknown#3159",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ObjectMapper.java",
        "class_name": "com.fasterxml.jackson.databind.ObjectMapper",
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.unknown(...)",
        "snippet": "}",
        "begin_line": 3159,
        "end_line": 3159,
        "comment": "                 [JACKSON-643]: Ask JsonDeserializer what 'null value' to use:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.unknown#21",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/CalendarSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.unknown(...)",
        "snippet": "public static final CalendarSerializer instance = new CalendarSerializer();",
        "begin_line": 21,
        "end_line": 21,
        "comment": "\n * Standard serializer for {@link java.util.Calendar}.\n * As with other time/date types, is configurable to produce timestamps\n * (standard Java 64-bit timestamp) or textual formats (usually ISO-8601).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.unknown#23",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/CalendarSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.unknown(...)",
        "snippet": "public CalendarSerializer() { this(null, null); }",
        "begin_line": 23,
        "end_line": 23,
        "comment": "\n * Standard serializer for {@link java.util.Calendar}.\n * As with other time/date types, is configurable to produce timestamps\n * (standard Java 64-bit timestamp) or textual formats (usually ISO-8601).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.unknown#26",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/CalendarSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.unknown(...)",
        "snippet": "super(Calendar.class, useTimestamp, customFormat);",
        "begin_line": 26,
        "end_line": 26,
        "comment": "\n * Standard serializer for {@link java.util.Calendar}.\n * As with other time/date types, is configurable to produce timestamps\n * (standard Java 64-bit timestamp) or textual formats (usually ISO-8601).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.unknown#27",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/CalendarSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.CalendarSerializer.unknown(...)",
        "snippet": "}",
        "begin_line": 27,
        "end_line": 27,
        "comment": "\n * Standard serializer for {@link java.util.Calendar}.\n * As with other time/date types, is configurable to produce timestamps\n * (standard Java 64-bit timestamp) or textual formats (usually ISO-8601).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "* This currently means bean and Enum deserializers; array, List and Map",
        "begin_line": 42,
        "end_line": 42,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#50",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "= new ConcurrentHashMap<JavaType, JsonDeserializer<Object>>(64, 0.75f, 2);",
        "begin_line": 50,
        "end_line": 50,
        "comment": "    \n     * We will also cache some dynamically constructed deserializers;\n     * specifically, ones that are expensive to construct.\n     * This currently means bean and Enum deserializers; array, List and Map\n     * deserializers will not be cached.\n     *<p>\n     * Given that we don't expect much concurrency for additions\n     * (should very quickly converge to zero after startup), let's\n     * explicitly define a low concurrency setting.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#59",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "",
        "begin_line": 59,
        "end_line": 59,
        "comment": "    \n     * During deserializer construction process we may need to keep track of partially\n     * completed deserializers, to resolve cyclic dependencies. This is the\n     * map used for storing deserializers before they are fully complete.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#139",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "*   accessing suitable deserializer; including that of not",
        "begin_line": 139,
        "end_line": 139,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "*   finding any serializer",
        "begin_line": 140,
        "end_line": 140,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#142",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "public JsonDeserializer<Object> findValueDeserializer(DeserializationContext ctxt,",
        "begin_line": 142,
        "end_line": 142,
        "comment": "    \n     * Method called to get hold of a deserializer for a value of given type;\n     * or if no such deserializer can be found, a default handler (which\n     * may do a best-effort generic serialization or just simply\n     * throw an exception when invoked).\n     *<p>\n     * Note: this method is only called for value types; not for keys.\n     * Key deserializers can be accessed using {@link #findKeyDeserializer}.\n     *<p>\n     * Note also that deserializer returned is guaranteed to be resolved\n     * (if it is of type {@link ResolvableDeserializer}), but\n     * not contextualized (wrt {@link ContextualDeserializer}): caller\n     * has to handle latter if necessary.\n     *\n     * @param ctxt Deserialization context\n     * @param propertyType Declared type of the value to deserializer (obtained using\n     *   'setter' method signature and/or type annotations\n     *\n     * @throws JsonMappingException if there are fatal problems with\n     *   accessing suitable deserializer; including that of not\n     *   finding any serializer\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#143",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "DeserializerFactory factory, JavaType propertyType)",
        "begin_line": 143,
        "end_line": 143,
        "comment": "    \n     * Method called to get hold of a deserializer for a value of given type;\n     * or if no such deserializer can be found, a default handler (which\n     * may do a best-effort generic serialization or just simply\n     * throw an exception when invoked).\n     *<p>\n     * Note: this method is only called for value types; not for keys.\n     * Key deserializers can be accessed using {@link #findKeyDeserializer}.\n     *<p>\n     * Note also that deserializer returned is guaranteed to be resolved\n     * (if it is of type {@link ResolvableDeserializer}), but\n     * not contextualized (wrt {@link ContextualDeserializer}): caller\n     * has to handle latter if necessary.\n     *\n     * @param ctxt Deserialization context\n     * @param propertyType Declared type of the value to deserializer (obtained using\n     *   'setter' method signature and/or type annotations\n     *\n     * @throws JsonMappingException if there are fatal problems with\n     *   accessing suitable deserializer; including that of not\n     *   finding any serializer\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#151",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "JsonDeserializer<Object> deser = deserializer_cache1_expr3_line_139;",
        "begin_line": 151,
        "end_line": 151,
        "comment": "    \n     * Method called to get hold of a deserializer for a value of given type;\n     * or if no such deserializer can be found, a default handler (which\n     * may do a best-effort generic serialization or just simply\n     * throw an exception when invoked).\n     *<p>\n     * Note: this method is only called for value types; not for keys.\n     * Key deserializers can be accessed using {@link #findKeyDeserializer}.\n     *<p>\n     * Note also that deserializer returned is guaranteed to be resolved\n     * (if it is of type {@link ResolvableDeserializer}), but\n     * not contextualized (wrt {@link ContextualDeserializer}): caller\n     * has to handle latter if necessary.\n     *\n     * @param ctxt Deserialization context\n     * @param propertyType Declared type of the value to deserializer (obtained using\n     *   'setter' method signature and/or type annotations\n     *\n     * @throws JsonMappingException if there are fatal problems with\n     *   accessing suitable deserializer; including that of not\n     *   finding any serializer\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#204",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "return kd;",
        "begin_line": 204,
        "end_line": 204,
        "comment": "         First: need to resolve?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#207",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "/**",
        "begin_line": 207,
        "end_line": 207,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#225",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "",
        "begin_line": 225,
        "end_line": 225,
        "comment": "        /* Note: mostly copied from findValueDeserializer, except for\n         * handling of unknown types\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#227",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 227,
        "end_line": 227,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#228",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "/* Helper methods that handle cache lookups",
        "begin_line": 228,
        "end_line": 228,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#231",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "",
        "begin_line": 231,
        "end_line": 231,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#233",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "{",
        "begin_line": 233,
        "end_line": 233,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#241",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_START_LINE_207 = 207;",
        "begin_line": 241,
        "end_line": 241,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#244",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "JsonDeserializer<Object> deserializer_cache1_expr8_line_207 = f__cached_deserializers_1247_line_207",
        "begin_line": 244,
        "end_line": 244,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#245",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": ".get(p_type_1259_line_207);",
        "begin_line": 245,
        "end_line": 245,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#261",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_START_LINE_225 = 248;",
        "begin_line": 261,
        "end_line": 261,
        "comment": "    \n     * Method that will try to create a deserializer for given type,\n     * and resolve and cache it if necessary\n     * \n     * @param ctxt Currently active deserialization context\n     * @param type Type of property to deserialize\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#267",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "*/",
        "begin_line": 267,
        "end_line": 267,
        "comment": "\t\t/* Only one thread to construct deserializers at any given point in time;\n         * limitations necessary to ensure that only completely initialized ones\n         * are visible and used.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#268",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "synchronized (f__incomplete_deserializers_1248_line_225) {",
        "begin_line": 268,
        "end_line": 268,
        "comment": "\t\t/* Only one thread to construct deserializers at any given point in time;\n         * limitations necessary to ensure that only completely initialized ones\n         * are visible and used.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#275",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_START_LINE_228 = 230;",
        "begin_line": 275,
        "end_line": 275,
        "comment": "\t\t\t Ok, then: could it be that due to a race condition, deserializer can now be found?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#276",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "JsonDeserializer<Object> v_deser_1263_line_228 = deser;",
        "begin_line": 276,
        "end_line": 276,
        "comment": "\t\t\t Ok, then: could it be that due to a race condition, deserializer can now be found?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#290",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_END_LINE_233 = 238;",
        "begin_line": 290,
        "end_line": 290,
        "comment": "\t\t\t Ok, then: could it be that due to a race condition, deserializer can now be found?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#295",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "return deser;",
        "begin_line": 295,
        "end_line": 295,
        "comment": "\t\t\t Or perhaps being resolved right now?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#298",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "// Nope: need to create and possibly cache",
        "begin_line": 298,
        "end_line": 298,
        "comment": "             Nope: need to create and possibly cache",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#317",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "}",
        "begin_line": 317,
        "end_line": 317,
        "comment": "             Nope: need to create and possibly cache",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#320",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_END_LINE_244 = 246;",
        "begin_line": 320,
        "end_line": 320,
        "comment": "             Nope: need to create and possibly cache",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#323",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_START_LINE_245 = 245;",
        "begin_line": 323,
        "end_line": 323,
        "comment": "\t\t\t\t also: any deserializers that have been created are complete by now",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#325",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_END_LINE_245 = 245;",
        "begin_line": 325,
        "end_line": 325,
        "comment": "\t\t\t\t also: any deserializers that have been created are complete by now",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#327",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "}",
        "begin_line": 327,
        "end_line": 327,
        "comment": "\t\t\t\t also: any deserializers that have been created are complete by now",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#332",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "/**",
        "begin_line": 332,
        "end_line": 332,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#333",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "* Method that handles actual construction (via factory) and caching (both",
        "begin_line": 333,
        "end_line": 333,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#339",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "{",
        "begin_line": 339,
        "end_line": 339,
        "comment": "    \n     * Method that handles actual construction (via factory) and caching (both\n     * intermediate and eventual)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#340",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "JsonDeserializer<Object> deser;",
        "begin_line": 340,
        "end_line": 340,
        "comment": "    \n     * Method that handles actual construction (via factory) and caching (both\n     * intermediate and eventual)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#346",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "JsonDeserializer<Object> deserializer_cache1_expr19_line_261 = _createDeserializer(p_ctxt_1265_line_261,",
        "begin_line": 346,
        "end_line": 346,
        "comment": "    \n     * Method that handles actual construction (via factory) and caching (both\n     * intermediate and eventual)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#347",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "p_factory_1266_line_261, p_type_1267_line_261);",
        "begin_line": 347,
        "end_line": 347,
        "comment": "    \n     * Method that handles actual construction (via factory) and caching (both\n     * intermediate and eventual)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#348",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_END_LINE_261 = 261;",
        "begin_line": 348,
        "end_line": 348,
        "comment": "    \n     * Method that handles actual construction (via factory) and caching (both\n     * intermediate and eventual)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#364",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "JsonDeserializer<Object> v_deser_1268_line_275 = deser;",
        "begin_line": 364,
        "end_line": 364,
        "comment": "            /* We better only expose checked exceptions, since those\n             * are what caller is expected to handle\n             ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#366",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "boolean deserializer_cache1_expr21_line_275 = (deserializer_cache1_expr22_line_275);",
        "begin_line": 366,
        "end_line": 366,
        "comment": "            /* We better only expose checked exceptions, since those\n             * are what caller is expected to handle\n             ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#369",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "* (but can be re-defined for sub-classes by using @JsonCachable!)",
        "begin_line": 369,
        "end_line": 369,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#370",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "*/",
        "begin_line": 370,
        "end_line": 370,
        "comment": "\t\t/* cache resulting deserializer? always true for \"plain\" BeanDeserializer\n         * (but can be re-defined for sub-classes by using @JsonCachable!)\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#371",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "// 08-Jun-2010, tatu: Related to [JACKSON-296], need to avoid caching MapSerializers... so:",
        "begin_line": 371,
        "end_line": 371,
        "comment": "         08-Jun-2010, tatu: Related to [JACKSON-296], need to avoid caching MapSerializers... so:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#396",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "((ResolvableDeserializer)deser).resolve(ctxt);",
        "begin_line": 396,
        "end_line": 396,
        "comment": "        /* Need to resolve? Mostly done for bean deserializers; required for\n         * resolving cyclic references.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#399",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_START_LINE_295 = 297;",
        "begin_line": 399,
        "end_line": 399,
        "comment": "        /* Need to resolve? Mostly done for bean deserializers; required for\n         * resolving cyclic references.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#411",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "/*",
        "begin_line": 411,
        "end_line": 411,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#412",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "/**********************************************************",
        "begin_line": 412,
        "end_line": 412,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#413",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "/* Helper methods for actual construction of deserializers",
        "begin_line": 413,
        "end_line": 413,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#469",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "return deser;",
        "begin_line": 469,
        "end_line": 469,
        "comment": "\t\t Then: does type define explicit deserializer to use, with annotation(s)?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#470",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "}",
        "begin_line": 470,
        "end_line": 470,
        "comment": "\t\t Then: does type define explicit deserializer to use, with annotation(s)?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#471",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "",
        "begin_line": 471,
        "end_line": 471,
        "comment": "\t\t Then: does type define explicit deserializer to use, with annotation(s)?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#480",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_END_LINE_332 = 332;",
        "begin_line": 480,
        "end_line": 480,
        "comment": "\t\t Then: does type define explicit deserializer to use, with annotation(s)?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#481",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "// If not, may have further type-modification annotations to check:",
        "begin_line": 481,
        "end_line": 481,
        "comment": "\t\t If not, may have further type-modification annotations to check:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#482",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "JavaType newType = deserializer_cache1_expr33_line_332;",
        "begin_line": 482,
        "end_line": 482,
        "comment": "\t\t If not, may have further type-modification annotations to check:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#493",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_START_LINE_339 = 339;",
        "begin_line": 493,
        "end_line": 493,
        "comment": "\t\t If not, may have further type-modification annotations to check:",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#498",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "Class<?> builder = deserializer_cache1_expr36_line_339;",
        "begin_line": 498,
        "end_line": 498,
        "comment": "\t\t We may also have a Builder type to consider...",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#510",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "Converter<Object, Object> deserializer_cache1_expr38_line_346 = v_bean_desc_1275_line_346",
        "begin_line": 510,
        "end_line": 510,
        "comment": "\t\t We may also have a Builder type to consider...",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#511",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": ".findDeserializationConverter();",
        "begin_line": 511,
        "end_line": 511,
        "comment": "\t\t We may also have a Builder type to consider...",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#519",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "if (deserializer_cache1_expr39_line_347) { // nope, just construct in normal way",
        "begin_line": 519,
        "end_line": 519,
        "comment": "\t\t Or perhaps a Converter?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#520",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "int PROBE_START_LINE_348 = 348;",
        "begin_line": 520,
        "end_line": 520,
        "comment": "\t\t Or perhaps a Converter?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#521",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.DeserializationContext p_ctxt_1271_line_348 = ctxt;",
        "begin_line": 521,
        "end_line": 521,
        "comment": "\t\t Or perhaps a Converter?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#522",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.deser.DeserializerFactory p_factory_1272_line_348 = factory;",
        "begin_line": 522,
        "end_line": 522,
        "comment": "\t\t Or perhaps a Converter?",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown#538",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "class_name": "com.fasterxml.jackson.databind.deser.DeserializerCache",
        "signature": "com.fasterxml.jackson.databind.deser.DeserializerCache.unknown(...)",
        "snippet": "}",
        "begin_line": 538,
        "end_line": 538,
        "comment": "         One more twist, as per [Issue#288]; probably need to get new BeanDesc",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.Annotated.unknown#18",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/Annotated.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.Annotated",
        "signature": "com.fasterxml.jackson.databind.introspect.Annotated.unknown(...)",
        "snippet": "protected Annotated() { }",
        "begin_line": 18,
        "end_line": 18,
        "comment": "\n * Shared base class used for anything on which annotations (included\n * within a {@link AnnotationMap}).\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#26",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "int PROBE_START_LINE_26 = 26;",
        "begin_line": 26,
        "end_line": 26,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#27",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "AnnotatedClass basic_class_introspector1_expr1_line_26 = AnnotatedClass.constructWithoutSuperTypes(String.class,",
        "begin_line": 27,
        "end_line": 27,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#31",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "int PROBE_START_LINE_27 = 27;",
        "begin_line": 31,
        "end_line": 31,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#32",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.type.SimpleType basic_class_introspector1_expr4_line_27 = SimpleType",
        "begin_line": 32,
        "end_line": 32,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": ".forOtherUse(null, basic_class_introspector1_expr4_line_27, v_ac_1595_line_27);",
        "begin_line": 36,
        "end_line": 36,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#37",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "int PROBE_END_LINE_27 = 27;",
        "begin_line": 37,
        "end_line": 37,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#41",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "static {",
        "begin_line": 41,
        "end_line": 41,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "int PROBE_START_LINE_31 = 31;",
        "begin_line": 42,
        "end_line": 42,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#51",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": ".constructUnsafe(f_type_1598_line_32);",
        "begin_line": 51,
        "end_line": 51,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#53",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.introspect.BasicBeanDescription basic_class_introspector1_expr7_line_32 = BasicBeanDescription",
        "begin_line": 53,
        "end_line": 53,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#79",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "Class<Long> f_type_1604_line_41 = Long.TYPE;",
        "begin_line": 79,
        "end_line": 79,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#80",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "AnnotatedClass basic_class_introspector1_expr12_line_41 = AnnotatedClass",
        "begin_line": 80,
        "end_line": 80,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#81",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": ".constructWithoutSuperTypes(f_type_1604_line_41, null, null);",
        "begin_line": 81,
        "end_line": 81,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#84",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "int PROBE_START_LINE_42 = 42;",
        "begin_line": 84,
        "end_line": 84,
        "comment": "    /* We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#112",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "public BasicBeanDescription forSerialization(SerializationConfig cfg,",
        "begin_line": 112,
        "end_line": 112,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#113",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "JavaType type, MixInResolver r)",
        "begin_line": 113,
        "end_line": 113,
        "comment": "    ********************************************************\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#115",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "// minor optimization: for JDK types do minimal introspection",
        "begin_line": 115,
        "end_line": 115,
        "comment": "         minor optimization: for JDK types do minimal introspection",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#139",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "int PROBE_START_LINE_81 = 82;",
        "begin_line": 139,
        "end_line": 139,
        "comment": "\t\t minor optimization: for JDK types do minimal introspection",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.DeserializationConfig p_cfg_1609_line_81 = cfg;",
        "begin_line": 140,
        "end_line": 140,
        "comment": "\t\t minor optimization: for JDK types do minimal introspection",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#142",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "p_cfg_1609_line_81, type, r, false, \"set\");",
        "begin_line": 142,
        "end_line": 142,
        "comment": "\t\t minor optimization: for JDK types do minimal introspection",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#163",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "@Override",
        "begin_line": 163,
        "end_line": 163,
        "comment": "    \t no caching for Builders (no standard JDK builder types):",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#172",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "return desc;",
        "begin_line": 172,
        "end_line": 172,
        "comment": "    \t no caching for Builders (no standard JDK builder types):",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#173",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "}",
        "begin_line": 173,
        "end_line": 173,
        "comment": "    \t no caching for Builders (no standard JDK builder types):",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#174",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "",
        "begin_line": 174,
        "end_line": 174,
        "comment": "    \t no caching for Builders (no standard JDK builder types):",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#176",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "public BasicBeanDescription forClassAnnotations(MapperConfig<?> cfg,",
        "begin_line": 176,
        "end_line": 176,
        "comment": "    \t no caching for Builders (no standard JDK builder types):",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#179",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "int PROBE_START_LINE_112 = 112;",
        "begin_line": 179,
        "end_line": 179,
        "comment": "    \t no caching for Builders (no standard JDK builder types):",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#182",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "int PROBE_END_LINE_112 = 112;",
        "begin_line": 182,
        "end_line": 182,
        "comment": "    \t no caching for Builders (no standard JDK builder types):",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown#185",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java",
        "class_name": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
        "signature": "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.unknown(...)",
        "snippet": "com.fasterxml.jackson.databind.JavaType p_type_1620_line_113 = type;",
        "begin_line": 185,
        "end_line": 185,
        "comment": "    \t no caching for Builders (no standard JDK builder types):",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#16",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "public enum SerializationFeature implements ConfigFeature",
        "begin_line": 16,
        "end_line": 16,
        "comment": "\n * Enumeration that defines simple on/off features that affect\n * the way Java objects are serialized.\n *<p>\n * Note that features can be set both through\n * {@link ObjectMapper} (as sort of defaults) and through\n * {@link ObjectWriter}.\n * In first case these defaults must follow \"config-then-use\" patterns\n * (i.e. defined once, not changed afterwards); all per-call\n * changes must be done using {@link ObjectWriter}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#35",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRAP_ROOT_VALUE(false),",
        "begin_line": 35,
        "end_line": 35,
        "comment": "    \n     * Feature that can be enabled to make root value (usually JSON\n     * Object but can be any type) wrapped within a single property\n     * JSON object, where key as the \"root name\", as determined by\n     * annotation introspector (esp. for JAXB that uses\n     * <code>@XmlRootElement.name</code>) or fallback (non-qualified\n     * class name).\n     * Feature is mostly intended for JAXB compatibility.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#56",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "INDENT_OUTPUT(false),",
        "begin_line": 56,
        "end_line": 56,
        "comment": "    \n     * Feature that allows enabling (or disabling) indentation\n     * for the underlying generator, using the default pretty\n     * printer (see\n     * {@link com.fasterxml.jackson.core.JsonGenerator#useDefaultPrettyPrinter}\n     * for details).\n     *<p>\n     * Note that this only affects cases where\n     * {@link com.fasterxml.jackson.core.JsonGenerator}\n     * is constructed implicitly by ObjectMapper: if explicit\n     * generator is passed, its configuration is not changed.\n     *<p>\n     * Also note that if you want to configure details of indentation,\n     * you need to directly configure the generator: there is a\n     * method to use any <code>PrettyPrinter</code> instance.\n     * This feature will only allow using the default implementation.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#79",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "FAIL_ON_EMPTY_BEANS(true),",
        "begin_line": 79,
        "end_line": 79,
        "comment": "    \n     * Feature that determines what happens when no accessors are\n     * found for a type (and there are no annotations to indicate\n     * it is meant to be serialized). If enabled (default), an\n     * exception is thrown to indicate these as non-serializable\n     * types; if disabled, they are serialized as empty Objects,\n     * i.e. without any properties.\n     *<p>\n     * Note that empty types that this feature has only effect on\n     * those \"empty\" beans that do not have any recognized annotations\n     * (like <code>@JsonSerialize</code>): ones that do have annotations\n     * do not result in an exception being thrown.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#91",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "FAIL_ON_SELF_REFERENCES(true),",
        "begin_line": 91,
        "end_line": 91,
        "comment": "    \n     * Feature that determines what happens when a direct self-reference\n     * is detected by a POJO (and no Object Id handling is enabled for it):\n     * either a {@link JsonMappingException} is\n     * thrown (if true), or reference is normally processed (false).\n     *<p>\n     * Feature is enabled by default.\n     *\n     * @since 2.4\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#109",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRAP_EXCEPTIONS(true),",
        "begin_line": 109,
        "end_line": 109,
        "comment": "    \n     * Feature that determines whether Jackson code should catch\n     * and wrap {@link Exception}s (but never {@link Error}s!)\n     * to add additional information about\n     * location (within input) of problem or not. If enabled,\n     * most exceptions will be caught and re-thrown (exception\n     * specifically being that {@link java.io.IOException}s may be passed\n     * as is, since they are declared as throwable); this can be\n     * convenient both in that all exceptions will be checked and\n     * declared, and so there is more contextual information.\n     * However, sometimes calling application may just want \"raw\"\n     * unchecked exceptions passed as is.\n     *<p>\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#123",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS(true),",
        "begin_line": 123,
        "end_line": 123,
        "comment": "\t\n\t * Feature that determines what happens when an object which\n\t * normally has type information included by Jackson is used\n\t * in conjunction with {@link com.fasterxml.jackson.annotation.JsonUnwrapped}.\n\t * In the default (enabled) state, an error will be thrown when\n\t * an unwrapped object has type information. When disabled, the\n\t * object will be unwrapped and the type information discarded.\n\t *<p>\n\t * Feature is enabled by default.\n\t *\n\t * @since 2.4\n\t ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#148",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "CLOSE_CLOSEABLE(false),",
        "begin_line": 148,
        "end_line": 148,
        "comment": "     \n      * Feature that determines whether <code>close</code> method of\n      * serialized <b>root level</b> objects (ones for which <code>ObjectMapper</code>'s\n      * writeValue() (or equivalent) method is called)\n      * that implement {@link java.io.Closeable} \n      * is called after serialization or not. If enabled, <b>close()</b> will\n      * be called after serialization completes (whether succesfully, or\n      * due to an error manifested by an exception being thrown). You can\n      * think of this as sort of \"finally\" processing.\n      *<p>\n      * NOTE: only affects behavior with <b>root</b> objects, and not other\n      * objects reachable from the root object. Put another way, only one\n      * call will be made for each 'writeValue' call.\n     *<p>\n     * Feature is disabled by default.\n      ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#162",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "FLUSH_AFTER_WRITE_VALUE(true),",
        "begin_line": 162,
        "end_line": 162,
        "comment": "    \n     * Feature that determines whether <code>JsonGenerator.flush()</code> is\n     * called after <code>writeValue()</code> method <b>that takes JsonGenerator\n     * as an argument</b> completes (i.e. does NOT affect methods\n     * that use other destinations); same for methods in {@link ObjectWriter}.\n     * This usually makes sense; but there are cases where flushing\n     * should not be forced: for example when underlying stream is\n     * compressing and flush() causes compression state to be flushed\n     * (which occurs with some compression codecs).\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#191",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_DATES_AS_TIMESTAMPS(true),",
        "begin_line": 191,
        "end_line": 191,
        "comment": "    \n     * Feature that determines whether {@link java.util.Date} values\n     * (and Date-based things like {@link java.util.Calendar}s) are to be\n     * serialized as numeric timestamps (true; the default),\n     * or as something else (usually textual representation).\n     * If textual representation is used, the actual format is\n     * one returned by a call to\n     * {@link com.fasterxml.jackson.databind.SerializationConfig#getDateFormat}:\n     * the default setting being {@link com.fasterxml.jackson.databind.util.StdDateFormat},\n     * which corresponds to format String of \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"\n     * (see {@link java.text.DateFormat} for details of format Strings).\n     *<p>\n     * Note: whether this feature affects handling of other date-related\n     * types depend on handlers of those types, although ideally they\n     * should use this feature\n     *<p>\n     * Note: whether {@link java.util.Map} keys are serialized as Strings\n     * or not is controlled using {@link #WRITE_DATE_KEYS_AS_TIMESTAMPS}.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#204",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_DATE_KEYS_AS_TIMESTAMPS(false),",
        "begin_line": 204,
        "end_line": 204,
        "comment": "    \n     * Feature that determines whether {@link java.util.Date}s\n     * (and sub-types) used as {@link java.util.Map} keys are serialized\n     * as timestamps or not (if not, will be serialized as textual\n     * values).\n     *<p>\n     * Default value is 'false', meaning that Date-valued Map keys are serialized\n     * as textual (ISO-8601) values.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#214",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS(false),",
        "begin_line": 214,
        "end_line": 214,
        "comment": "    \n     * Feature that determines how type <code>char[]</code> is serialized:\n     * when enabled, will be serialized as an explict JSON array (with\n     * single-character Strings as values); when disabled, defaults to\n     * serializing them as Strings (which is more compact).\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#226",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_ENUMS_USING_TO_STRING(false),",
        "begin_line": 226,
        "end_line": 226,
        "comment": "    \n     * Feature that determines standard serialization mechanism used for\n     * Enum values: if enabled, return value of <code>Enum.toString()</code>\n     * is used; if disabled, return value of <code>Enum.name()</code> is used.\n     *<p>\n     * Note: this feature should usually have same value\n     * as {@link DeserializationFeature#READ_ENUMS_USING_TO_STRING}.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#241",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_ENUMS_USING_INDEX(false),",
        "begin_line": 241,
        "end_line": 241,
        "comment": "    \n     * Feature that determines whethere Java Enum values are serialized\n     * as numbers (true), or textual values (false). If textual values are\n     * used, other settings are also considered.\n     * If this feature is enabled,\n     *  return value of <code>Enum.ordinal()</code>\n     * (an integer) will be used as the serialization.\n     *<p>\n     * Note that this feature has precedence over {@link #WRITE_ENUMS_USING_TO_STRING},\n     * which is only considered if this feature is set to false.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#251",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_NULL_MAP_VALUES(true),",
        "begin_line": 251,
        "end_line": 251,
        "comment": "    \n     * Feature that determines whether Map entries with null values are\n     * to be serialized (true) or not (false).\n     *<p>\n     * For further details, check out [JACKSON-314]\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#264",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_EMPTY_JSON_ARRAYS(true),",
        "begin_line": 264,
        "end_line": 264,
        "comment": "    \n     * Feature that determines whether Container properties (POJO properties\n     * with declared value of Collection or array; i.e. things that produce JSON\n     * arrays) that are empty (have no elements)\n     * will be serialized as empty JSON arrays (true), or suppressed from output (false).\n     *<p>\n     * Note that this does not change behavior of {@link java.util.Map}s, or\n     * \"Collection-like\" types.\n     *<p>\n     * Feature is enabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#287",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED(false),",
        "begin_line": 287,
        "end_line": 287,
        "comment": "    \n     * Feature added for interoperability, to work with oddities of\n     * so-called \"BadgerFish\" convention.\n     * Feature determines handling of single element {@link java.util.Collection}s\n     * and arrays: if enabled, {@link java.util.Collection}s and arrays that contain exactly\n     * one element will be serialized as if that element itself was serialized.\n     *<p>\n     * When enabled, a POJO with array that normally looks like this:\n     *<pre>\n     *  { \"arrayProperty\" : [ 1 ] }\n     *</pre>\n     * will instead be serialized as\n     *<pre>\n     *  { \"arrayProperty\" : 1 }\n     *</pre>\n     *<p>\n     * Note that this feature is counterpart to {@link DeserializationFeature#ACCEPT_SINGLE_VALUE_AS_ARRAY}\n     * (that is, usually both are enabled, or neither is).\n     *<p>\n     * Feature is disabled by default, so that no special handling is done.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#302",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_BIGDECIMAL_AS_PLAIN(false),",
        "begin_line": 302,
        "end_line": 302,
        "comment": "    \n     * Feature that determines whether {@link java.math.BigDecimal} entries are\n     * serialized using {@link java.math.BigDecimal#toPlainString()} to prevent\n     * values to be written using scientific notation.\n     *<p>\n     * NOTE: since this feature typically requires use of\n     * {@link com.fasterxml.jackson.core.JsonGenerator#writeNumber(String)}\n     * ot may cause compatibility problems since not all {@link com.fasterxml.jackson.core.JsonGenerator}\n     * implementations support such mode of output: usually only text-based formats\n     * support it.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#319",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS(true),",
        "begin_line": 319,
        "end_line": 319,
        "comment": "    \n     * Feature that controls whether numeric timestamp values are\n     * to be written using nanosecond timestamps (enabled) or not (disabled);\n     * <b>if and only if</b> datatype supports such resolution.\n     * Only newer datatypes (such as Java8 Date/Time) support such resolution --\n     * older types (pre-Java8 <b>java.util.Date</b> etc) and Joda do not --\n     * and this setting <b>has no effect</b> on such types.\n     *<p>\n     * If disabled, standard millisecond timestamps are assumed.\n     * This is the counterpart to {@link SerializationFeature#WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS}.\n     *<p>\n     * Feature is enabled by default, to support most accurate time values possible.\n     * \n     * @since 2.2\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#329",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "ORDER_MAP_ENTRIES_BY_KEYS(false),",
        "begin_line": 329,
        "end_line": 329,
        "comment": "    \n     * Feature that determines whether {@link java.util.Map} entries are first\n     * sorted by key before serialization or not: if enabled, additional sorting\n     * step is performed if necessary (not necessary for {@link java.util.SortedMap}s),\n     * if disabled, no additional sorting is needed.\n     *<p>\n     * Feature is disabled by default.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#351",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "EAGER_SERIALIZER_FETCH(true),",
        "begin_line": 351,
        "end_line": 351,
        "comment": "    \n     * Feature that determines whether {@link ObjectWriter} should\n     * try to eagerly fetch necessary {@link JsonSerializer} when\n     * possible. This improves performance in cases where similarly\n     * configured {@link ObjectWriter} instance is used multiple\n     * times; and should not significantly affect single-use cases.\n     *<p>\n     * Note that there should not be any need to normally disable this\n     * feature: only consider that if there are actual perceived problems.\n     *<p>\n     * Feature is enabled by default.\n     * \n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#364",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "USE_EQUALITY_FOR_OBJECT_ID(false)",
        "begin_line": 364,
        "end_line": 364,
        "comment": "    \n     * Feature that determines whether Object Identity is compared using\n     * true JVM-level identity of Object (false); or, <code>equals()</code> method.\n     * Latter is sometimes useful when dealing with Database-bound objects with\n     * ORM libraries (like Hibernate).\n     *<p>\n     * Feature is disabled by default; meaning that strict identity is used, not\n     * <code>equals()</code>\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#369",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "private SerializationFeature(boolean defaultState) {",
        "begin_line": 369,
        "end_line": 369,
        "comment": "    \n     * Feature that determines whether Object Identity is compared using\n     * true JVM-level identity of Object (false); or, <code>equals()</code> method.\n     * Latter is sometimes useful when dealing with Database-bound objects with\n     * ORM libraries (like Hibernate).\n     *<p>\n     * Feature is disabled by default; meaning that strict identity is used, not\n     * <code>equals()</code>\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#370",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "int PROBE_START_LINE_370 = 370;",
        "begin_line": 370,
        "end_line": 370,
        "comment": "    \n     * Feature that determines whether Object Identity is compared using\n     * true JVM-level identity of Object (false); or, <code>equals()</code> method.\n     * Latter is sometimes useful when dealing with Database-bound objects with\n     * ORM libraries (like Hibernate).\n     *<p>\n     * Feature is disabled by default; meaning that strict identity is used, not\n     * <code>equals()</code>\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#371",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "boolean p_default_state_727_line_370 = defaultState;",
        "begin_line": 371,
        "end_line": 371,
        "comment": "    \n     * Feature that determines whether Object Identity is compared using\n     * true JVM-level identity of Object (false); or, <code>equals()</code> method.\n     * Latter is sometimes useful when dealing with Database-bound objects with\n     * ORM libraries (like Hibernate).\n     *<p>\n     * Feature is disabled by default; meaning that strict identity is used, not\n     * <code>equals()</code>\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#374",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "}",
        "begin_line": 374,
        "end_line": 374,
        "comment": "    \n     * Feature that determines whether Object Identity is compared using\n     * true JVM-level identity of Object (false); or, <code>equals()</code> method.\n     * Latter is sometimes useful when dealing with Database-bound objects with\n     * ORM libraries (like Hibernate).\n     *<p>\n     * Feature is disabled by default; meaning that strict identity is used, not\n     * <code>equals()</code>\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature.unknown#377",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/SerializationFeature.java",
        "class_name": "com.fasterxml.jackson.databind.SerializationFeature",
        "signature": "com.fasterxml.jackson.databind.SerializationFeature.unknown(...)",
        "snippet": "public boolean enabledByDefault() { int PROBE_START_LINE_374 = 374;",
        "begin_line": 377,
        "end_line": 377,
        "comment": "    \n     * Feature that determines whether Object Identity is compared using\n     * true JVM-level identity of Object (false); or, <code>equals()</code> method.\n     * Latter is sometimes useful when dealing with Database-bound objects with\n     * ORM libraries (like Hibernate).\n     *<p>\n     * Feature is disabled by default; meaning that strict identity is used, not\n     * <code>equals()</code>\n     * \n     * @since 2.3\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer.unknown#33",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer.unknown(...)",
        "snippet": "super(Boolean.class);",
        "begin_line": 33,
        "end_line": 33,
        "comment": "    \n     * Whether type serialized is primitive (boolean) or wrapper\n     * (java.lang.Boolean); if true, former, if false, latter.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer.unknown#34",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer.unknown(...)",
        "snippet": "int PROBE_START_LINE_34 = 34;",
        "begin_line": 34,
        "end_line": 34,
        "comment": "    \n     * Whether type serialized is primitive (boolean) or wrapper\n     * (java.lang.Boolean); if true, former, if false, latter.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer.unknown#35",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.BooleanSerializer.unknown(...)",
        "snippet": "boolean p_for_primitive_2173_line_34 = forPrimitive;",
        "begin_line": 35,
        "end_line": 35,
        "comment": "    \n     * Whether type serialized is primitive (boolean) or wrapper\n     * (java.lang.Boolean); if true, former, if false, latter.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#54",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "* For error messages we'll also need a list of all formats.",
        "begin_line": 54,
        "end_line": 54,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#66",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "private final static TimeZone DEFAULT_TIMEZONE;",
        "begin_line": 66,
        "end_line": 66,
        "comment": "    \n     * By default we use GMT for everything.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#69",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "java.util.TimeZone std_date_format1_expr2_line_66 = TimeZone.getTimeZone(\"GMT\");",
        "begin_line": 69,
        "end_line": 69,
        "comment": "    \n     * By default we use GMT for everything.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#87",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "protected final static DateFormat DATE_FORMAT_PLAIN;",
        "begin_line": 87,
        "end_line": 87,
        "comment": "    \n     * By default we use GMT for everything.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#88",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "",
        "begin_line": 88,
        "end_line": 88,
        "comment": "    \n     * By default we use GMT for everything.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#89",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "/* Let's construct \"blueprint\" date format instances: can not be used",
        "begin_line": 89,
        "end_line": 89,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#90",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "* as is, due to thread-safety issues, but can be used for constructing",
        "begin_line": 90,
        "end_line": 90,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#91",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "* actual instances more cheaply (avoids re-parsing).",
        "begin_line": 91,
        "end_line": 91,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#92",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "*/",
        "begin_line": 92,
        "end_line": 92,
        "comment": "    /* Let's construct \"blueprint\" date format instances: can not be used\n     * as is, due to thread-safety issues, but can be used for constructing\n     * actual instances more cheaply (avoids re-parsing).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#93",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "static {",
        "begin_line": 93,
        "end_line": 93,
        "comment": "    /* Let's construct \"blueprint\" date format instances: can not be used\n     * as is, due to thread-safety issues, but can be used for constructing\n     * actual instances more cheaply (avoids re-parsing).\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#94",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "/* Another important thing: let's force use of GMT for",
        "begin_line": 94,
        "end_line": 94,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#100",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "java.util.Locale f_default_locale_2678_line_87 = DEFAULT_LOCALE;",
        "begin_line": 100,
        "end_line": 100,
        "comment": "        /* Another important thing: let's force use of GMT for\n         * baseline DataFormat objects\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#121",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "int PROBE_END_LINE_91 = 91;",
        "begin_line": 121,
        "end_line": 121,
        "comment": "        /* Another important thing: let's force use of GMT for\n         * baseline DataFormat objects\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#122",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "DATE_FORMAT_ISO8601_Z = new SimpleDateFormat(f_date_format_str_iso8601_z_2685_line_91, f_default_locale_2678_line_91);",
        "begin_line": 122,
        "end_line": 122,
        "comment": "        /* Another important thing: let's force use of GMT for\n         * baseline DataFormat objects\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown#123",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/util/StdDateFormat.java",
        "class_name": "com.fasterxml.jackson.databind.util.StdDateFormat",
        "signature": "com.fasterxml.jackson.databind.util.StdDateFormat.unknown(...)",
        "snippet": "int PROBE_START_LINE_92 = 92;",
        "begin_line": 123,
        "end_line": 123,
        "comment": "        /* Another important thing: let's force use of GMT for\n         * baseline DataFormat objects\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializer.unknown#25",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializer.unknown(...)",
        "snippet": "public final static NumberSerializer instance = new NumberSerializer();",
        "begin_line": 25,
        "end_line": 25,
        "comment": "\n * As a fallback, we may need to use this serializer for other\n * types of {@link Number}s: both custom types and \"big\" numbers\n * like {@link BigInteger} and {@link BigDecimal}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.fasterxml.jackson.databind.ser.std.NumberSerializer.unknown#27",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/JacksonDatabind-3/result/src/com/fasterxml/jackson/databind/ser/std/NumberSerializer.java",
        "class_name": "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
        "signature": "com.fasterxml.jackson.databind.ser.std.NumberSerializer.unknown(...)",
        "snippet": "public NumberSerializer() { super(Number.class); }",
        "begin_line": 27,
        "end_line": 27,
        "comment": "\n * As a fallback, we may need to use this serializer for other\n * types of {@link Number}s: both custom types and \"big\" numbers\n * like {@link BigInteger} and {@link BigDecimal}.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    }
]