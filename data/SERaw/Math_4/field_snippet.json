[
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Line.java",
        "signature": "int PROBE_START_LINE_55",
        "snippet": "int PROBE_START_LINE_55 = 55;\norg.apache.commons.math3.geometry.euclidean.threed.Vector3D p_p_1_74_line_55 = p1;",
        "begin_line": 55,
        "end_line": 56,
        "comment": "     Build a line from two points.\n     * @param p1 first point belonging to the line (this can be any point)\n     * @param p2 second point belonging to the line (this can be any point, different from p1)\n     * @exception MathIllegalArgumentException if the points are equal\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Line.java",
        "signature": "int PROBE_START_LINE_74",
        "snippet": "int PROBE_START_LINE_74 = 74;\norg.apache.commons.math3.geometry.euclidean.threed.Vector3D p_p_2_78_line_74 = p2;",
        "begin_line": 78,
        "end_line": 79,
        "comment": "     Reset the instance as if built from two points.\n     * @param p1 first point belonging to the line (this can be any point)\n     * @param p2 second point belonging to the line (this can be any point, different from p1)\n     * @exception MathIllegalArgumentException if the points are equal\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Line.java",
        "signature": "Vector3D line1_expr2_line_74",
        "snippet": "Vector3D line1_expr2_line_74 = p_p_2_78_line_74.subtract(p_p_1_77_line_74);\nint PROBE_END_LINE_74 = 74;",
        "begin_line": 81,
        "end_line": 82,
        "comment": "     Reset the instance as if built from two points.\n     * @param p1 first point belonging to the line (this can be any point)\n     * @param p2 second point belonging to the line (this can be any point, different from p1)\n     * @exception MathIllegalArgumentException if the points are equal\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Line.java",
        "signature": "double line1_expr20_line_156",
        "snippet": "double line1_expr20_line_156 = distance(p_p_88_line_156);\nboolean line1_expr19_line_156 = line1_expr20_line_156 < 1.0e-10;",
        "begin_line": 201,
        "end_line": 202,
        "comment": "     Check if the instance contains a point.\n     * @param p point to check\n     * @return true if p belongs to the line\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Line.java",
        "signature": "int PROBE_END_LINE_156",
        "snippet": "int PROBE_END_LINE_156 = 156;\nreturn line1_expr19_line_156;",
        "begin_line": 203,
        "end_line": 204,
        "comment": "     Check if the instance contains a point.\n     * @param p point to check\n     * @return true if p belongs to the line\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Line.java",
        "signature": "Vector3D line1_expr21_line_164",
        "snippet": "Vector3D line1_expr21_line_164 = p_p_89_line_164.subtract(f_zero_82_line_164);\nint PROBE_END_LINE_164 = 164;",
        "begin_line": 215,
        "end_line": 216,
        "comment": "     Compute the distance between the instance and a point.\n     * @param p to check\n     * @return distance between the instance and the point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Line.java",
        "signature": "final Vector3D d",
        "snippet": "final Vector3D d = line1_expr21_line_164;\nint PROBE_START_LINE_165 = 165;",
        "begin_line": 217,
        "end_line": 218,
        "comment": "     Compute the distance between the instance and a point.\n     * @param p to check\n     * @return distance between the instance and the point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java",
        "signature": "int PROBE_START_LINE_45",
        "snippet": "int PROBE_START_LINE_45 = 45;\norg.apache.commons.math3.geometry.euclidean.threed.Line p_line_102_line_45 = line;",
        "begin_line": 45,
        "end_line": 46,
        "comment": "     Simple constructor.\n     * @param line underlying line\n     * @param remainingRegion remaining region of the line\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java",
        "signature": "int PROBE_END_LINE_45",
        "snippet": "int PROBE_END_LINE_45 = 45;\nthis.line            = p_line_102_line_45;",
        "begin_line": 47,
        "end_line": 48,
        "comment": "     Simple constructor.\n     * @param line underlying line\n     * @param remainingRegion remaining region of the line\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java",
        "signature": "Location loc1",
        "snippet": "Location loc1 = sub_line1_expr7_line_116;\n\n// check location of point with respect to second sub-line\nLocation loc2 = subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));",
        "begin_line": 135,
        "end_line": 138,
        "comment": "\t\t check location of point with respect to first sub-line"
    },
    {
        "class_name": "org.apache.commons.math3.util.Precision",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/Precision.java",
        "signature": "long precision1_expr2_line_70",
        "snippet": "long precision1_expr2_line_70 = precision1_expr3_line_70 << 52;\ndouble precision1_expr1_line_70 = Double.longBitsToDouble(precision1_expr2_line_70);",
        "begin_line": 69,
        "end_line": 70,
        "comment": "     Offset to order signed double numbers lexicographically. "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java",
        "signature": "int PROBE_START_LINE_68",
        "snippet": "int PROBE_START_LINE_68 = 68;\nBSPTree<S> p_tree_297_line_68 = tree;",
        "begin_line": 68,
        "end_line": 69,
        "comment": "     Build a region from an inside/outside BSP tree.\n     * <p>The leaf nodes of the BSP tree <em>must</em> have a\n     * {@code Boolean} attribute representing the inside status of\n     * the corresponding cell (true for inside cells, false for outside\n     * cells). In order to avoid building too many small objects, it is\n     * recommended to use the predefined constants\n     * {@code Boolean.TRUE} and {@code Boolean.FALSE}. The\n     * tree also <em>must</em> have either null internal nodes or\n     * internal nodes representing the boundary as specified in the\n     * {@link #getTree getTree} method).</p>\n     * @param tree inside/outside BSP tree representing the region\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java",
        "signature": "int PROBE_START_LINE_94",
        "snippet": "int PROBE_START_LINE_94 = 106;\ndouble p_lower_5_line_94 = lower;",
        "begin_line": 94,
        "end_line": 95,
        "comment": "     Build an inside/outside tree representing a single interval.\n     * @param lower lower bound of the interval, must be lesser or equal\n     * to {@code upper} (may be {@code Double.NEGATIVE_INFINITY})\n     * @param upper upper bound of the interval, must be greater or equal\n     * to {@code lower} (may be {@code Double.POSITIVE_INFINITY})\n     * @return the built tree\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java",
        "signature": "int PROBE_START_LINE_109",
        "snippet": "int PROBE_START_LINE_109 = 115;\ndouble p_upper_6_line_109 = upper;",
        "begin_line": 119,
        "end_line": 120,
        "comment": "             the tree must be open on the negative infinity side"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_START_LINE_896",
        "snippet": "int PROBE_START_LINE_896 = 896;\nint f_split_factor_601_line_896 = SPLIT_FACTOR;",
        "begin_line": 895,
        "end_line": 896,
        "comment": "         only at the end, after cancellation may have occurred on high order bits"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double p_a_1_596_line_896",
        "snippet": "double p_a_1_596_line_896 = a1;\ndouble math_arrays1_expr1_line_896 = f_split_factor_601_line_896\n* p_a_1_596_line_896;",
        "begin_line": 897,
        "end_line": 899,
        "comment": "         only at the end, after cancellation may have occurred on high order bits"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_END_LINE_896",
        "snippet": "int PROBE_END_LINE_896 = 896;\n// split a1 and b1 as two 26 bits numbers\nfinal double ca1        = math_arrays1_expr1_line_896;",
        "begin_line": 900,
        "end_line": 902,
        "comment": "         only at the end, after cancellation may have occurred on high order bits"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_START_LINE_897",
        "snippet": "int PROBE_START_LINE_897 = 897;\ndouble v_ca_1_600_line_897 = ca1;",
        "begin_line": 903,
        "end_line": 904,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double p_a_1_596_line_897",
        "snippet": "double p_a_1_596_line_897 = a1;\ndouble math_arrays1_expr4_line_897 = ca1 - p_a_1_596_line_897;",
        "begin_line": 905,
        "end_line": 906,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr3_line_897",
        "snippet": "double math_arrays1_expr3_line_897 = (math_arrays1_expr4_line_897);\ndouble math_arrays1_expr2_line_897 = v_ca_1_600_line_897 - math_arrays1_expr3_line_897;",
        "begin_line": 907,
        "end_line": 908,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_END_LINE_897",
        "snippet": "int PROBE_END_LINE_897 = 897;\nfinal double a1High     = math_arrays1_expr2_line_897;",
        "begin_line": 909,
        "end_line": 910,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_START_LINE_898",
        "snippet": "int PROBE_START_LINE_898 = 898;\ndouble p_a_1_596_line_898 = a1;",
        "begin_line": 911,
        "end_line": 912,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double v_a_1high_602_line_898",
        "snippet": "double v_a_1high_602_line_898 = a1High;\ndouble math_arrays1_expr5_line_898 = p_a_1_596_line_898 - v_a_1high_602_line_898;",
        "begin_line": 913,
        "end_line": 914,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_END_LINE_898",
        "snippet": "int PROBE_END_LINE_898 = 898;\nfinal double a1Low      = math_arrays1_expr5_line_898;",
        "begin_line": 915,
        "end_line": 916,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_START_LINE_899",
        "snippet": "int PROBE_START_LINE_899 = 899;\nint f_split_factor_601_line_899 = SPLIT_FACTOR;",
        "begin_line": 917,
        "end_line": 918,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double p_b_1_597_line_899",
        "snippet": "double p_b_1_597_line_899 = b1;\ndouble math_arrays1_expr6_line_899 = f_split_factor_601_line_899 * p_b_1_597_line_899;",
        "begin_line": 919,
        "end_line": 920,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_END_LINE_899",
        "snippet": "int PROBE_END_LINE_899 = 899;\nfinal double cb1        = math_arrays1_expr6_line_899;",
        "begin_line": 921,
        "end_line": 922,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double p_b_1_597_line_900",
        "snippet": "double p_b_1_597_line_900 = b1;\ndouble math_arrays1_expr9_line_900 = cb1 - p_b_1_597_line_900;",
        "begin_line": 925,
        "end_line": 926,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr8_line_900",
        "snippet": "double math_arrays1_expr8_line_900 = (math_arrays1_expr9_line_900);\ndouble math_arrays1_expr7_line_900 = v_cb_1_604_line_900 - math_arrays1_expr8_line_900;",
        "begin_line": 927,
        "end_line": 928,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double v_b_1high_605_line_901",
        "snippet": "double v_b_1high_605_line_901 = b1High;\ndouble math_arrays1_expr10_line_901 = p_b_1_597_line_901 - v_b_1high_605_line_901;",
        "begin_line": 933,
        "end_line": 934,
        "comment": "\t\t split a1 and b1 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr26_line_909",
        "snippet": "double math_arrays1_expr26_line_909 = ca2 - p_a_2_598_line_909;\ndouble math_arrays1_expr25_line_909 = (math_arrays1_expr26_line_909);",
        "begin_line": 975,
        "end_line": 976,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr24_line_909",
        "snippet": "double math_arrays1_expr24_line_909 = v_ca_2_609_line_909 - math_arrays1_expr25_line_909;\nint PROBE_END_LINE_909 = 909;",
        "begin_line": 977,
        "end_line": 978,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "final double a2High",
        "snippet": "final double a2High     = math_arrays1_expr24_line_909;\nint PROBE_START_LINE_910 = 910;",
        "begin_line": 979,
        "end_line": 980,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double p_a_2_598_line_910",
        "snippet": "double p_a_2_598_line_910 = a2;\ndouble v_a_2high_610_line_910 = a2High;",
        "begin_line": 981,
        "end_line": 982,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr27_line_910",
        "snippet": "double math_arrays1_expr27_line_910 = p_a_2_598_line_910 - v_a_2high_610_line_910;\nint PROBE_END_LINE_910 = 910;",
        "begin_line": 983,
        "end_line": 984,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "final double a2Low",
        "snippet": "final double a2Low      = math_arrays1_expr27_line_910;\nint PROBE_START_LINE_911 = 911;",
        "begin_line": 985,
        "end_line": 986,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int f_split_factor_601_line_911",
        "snippet": "int f_split_factor_601_line_911 = SPLIT_FACTOR;\ndouble p_b_2_599_line_911 = b2;",
        "begin_line": 987,
        "end_line": 988,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr28_line_911",
        "snippet": "double math_arrays1_expr28_line_911 = f_split_factor_601_line_911 * p_b_2_599_line_911;\nint PROBE_END_LINE_911 = 911;",
        "begin_line": 989,
        "end_line": 990,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "final double cb2",
        "snippet": "final double cb2        = math_arrays1_expr28_line_911;\nint PROBE_START_LINE_912 = 912;",
        "begin_line": 991,
        "end_line": 992,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double v_cb_2_612_line_912",
        "snippet": "double v_cb_2_612_line_912 = cb2;\ndouble p_b_2_599_line_912 = b2;",
        "begin_line": 993,
        "end_line": 994,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr31_line_912",
        "snippet": "double math_arrays1_expr31_line_912 = cb2 - p_b_2_599_line_912;\ndouble math_arrays1_expr30_line_912 = (math_arrays1_expr31_line_912);",
        "begin_line": 995,
        "end_line": 996,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr29_line_912",
        "snippet": "double math_arrays1_expr29_line_912 = v_cb_2_612_line_912 - math_arrays1_expr30_line_912;\nint PROBE_END_LINE_912 = 912;",
        "begin_line": 997,
        "end_line": 998,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "final double b2High",
        "snippet": "final double b2High     = math_arrays1_expr29_line_912;\nint PROBE_START_LINE_913 = 913;",
        "begin_line": 999,
        "end_line": 1000,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double p_b_2_599_line_913",
        "snippet": "double p_b_2_599_line_913 = b2;\ndouble v_b_2high_613_line_913 = b2High;",
        "begin_line": 1001,
        "end_line": 1002,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr32_line_913",
        "snippet": "double math_arrays1_expr32_line_913 = p_b_2_599_line_913 - v_b_2high_613_line_913;\nint PROBE_END_LINE_913 = 913;",
        "begin_line": 1003,
        "end_line": 1004,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "final double b2Low",
        "snippet": "final double b2Low      = math_arrays1_expr32_line_913;\n\nint PROBE_START_LINE_916 = 916;",
        "begin_line": 1005,
        "end_line": 1007,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double p_a_2_598_line_916",
        "snippet": "double p_a_2_598_line_916 = a2;\ndouble p_b_2_599_line_916 = b2;",
        "begin_line": 1008,
        "end_line": 1009,
        "comment": "\t\t split a2 and b2 as two 26 bits numbers"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "final double prod2High",
        "snippet": "final double prod2High  = math_arrays1_expr33_line_916;\nint PROBE_START_LINE_917 = 917;",
        "begin_line": 1013,
        "end_line": 1014,
        "comment": "\t\t accurate multiplication a2 * b2"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr35_line_917",
        "snippet": "double math_arrays1_expr35_line_917 = v_a_2low_611_line_917 * v_b_2low_614_line_917;\ndouble v_prod_2high_615_line_917 = prod2High;",
        "begin_line": 1017,
        "end_line": 1018,
        "comment": "\t\t accurate multiplication a2 * b2"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double v_a_2high_610_line_917",
        "snippet": "double v_a_2high_610_line_917 = a2High;\ndouble v_b_2high_613_line_917 = b2High;",
        "begin_line": 1019,
        "end_line": 1020,
        "comment": "\t\t accurate multiplication a2 * b2"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr40_line_917",
        "snippet": "double math_arrays1_expr40_line_917 = (math_arrays1_expr41_line_917);\ndouble math_arrays1_expr43_line_917 = a2Low * b2High;",
        "begin_line": 1023,
        "end_line": 1024,
        "comment": "\t\t accurate multiplication a2 * b2"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "double math_arrays1_expr39_line_917",
        "snippet": "double math_arrays1_expr39_line_917 = math_arrays1_expr40_line_917 - math_arrays1_expr43_line_917;\ndouble math_arrays1_expr38_line_917 = (math_arrays1_expr39_line_917);",
        "begin_line": 1025,
        "end_line": 1026,
        "comment": "\t\t accurate multiplication a2 * b2"
    },
    {
        "class_name": "org.apache.commons.math3.util.MathArrays",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/MathArrays.java",
        "signature": "int PROBE_END_LINE_917",
        "snippet": "int PROBE_END_LINE_917 = 917;\nfinal double prod2Low   = math_arrays1_expr34_line_917;",
        "begin_line": 1031,
        "end_line": 1032,
        "comment": "\t\t accurate multiplication a2 * b2"
    },
    {
        "class_name": "org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java",
        "signature": "int PROBE_START_LINE_51",
        "snippet": "int PROBE_START_LINE_51 = 51;\nHyperplane<S> p_hyperplane_333_line_51 = hyperplane;",
        "begin_line": 51,
        "end_line": 52,
        "comment": "     Build a sub-hyperplane from an hyperplane and a region.\n     * @param hyperplane underlying hyperplane\n     * @param remainingRegion remaining region of the hyperplane\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java",
        "signature": "int PROBE_END_LINE_51",
        "snippet": "int PROBE_END_LINE_51 = 51;\nthis.hyperplane      = p_hyperplane_333_line_51;",
        "begin_line": 53,
        "end_line": 54,
        "comment": "     Build a sub-hyperplane from an hyperplane and a region.\n     * @param hyperplane underlying hyperplane\n     * @param remainingRegion remaining region of the hyperplane\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_96",
        "snippet": "int PROBE_START_LINE_96 = 97;\n\nprivate static final double f_max_value_378_line_97 = Double.MAX_VALUE;",
        "begin_line": 96,
        "end_line": 98,
        "comment": "     Exponential fractions table length. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1683",
        "snippet": "int PROBE_START_LINE_1683 = 1683;\ndouble v_p_423_line_1683 = p;",
        "begin_line": 1699,
        "end_line": 1700,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double v_x_2_422_line_1683",
        "snippet": "double v_x_2_422_line_1683 = x2;\ndouble fast_math1_expr18_line_1683 = v_p_423_line_1683 * v_x_2_422_line_1683;",
        "begin_line": 1701,
        "end_line": 1702,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double fast_math1_expr19_line_1683",
        "snippet": "double fast_math1_expr19_line_1683 = -1.9841269659586505E-4;\ndouble fast_math1_expr17_line_1683 = fast_math1_expr18_line_1683 + fast_math1_expr19_line_1683;",
        "begin_line": 1703,
        "end_line": 1704,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_END_LINE_1683",
        "snippet": "int PROBE_END_LINE_1683 = 1683;\np = fast_math1_expr17_line_1683;",
        "begin_line": 1705,
        "end_line": 1706,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1684",
        "snippet": "int PROBE_START_LINE_1684 = 1684;\ndouble v_p_423_line_1684 = p;",
        "begin_line": 1707,
        "end_line": 1708,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double fast_math1_expr24_line_1685",
        "snippet": "double fast_math1_expr24_line_1685 = -0.16666666666666666;\ndouble fast_math1_expr22_line_1685 = fast_math1_expr23_line_1685 + fast_math1_expr24_line_1685;",
        "begin_line": 1718,
        "end_line": 1719,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_END_LINE_1685",
        "snippet": "int PROBE_END_LINE_1685 = 1685;\np = fast_math1_expr22_line_1685;",
        "begin_line": 1720,
        "end_line": 1721,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1688",
        "snippet": "int PROBE_START_LINE_1688 = 1688;\ndouble v_p_423_line_1688 = p;",
        "begin_line": 1722,
        "end_line": 1723,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double v_x_2_422_line_1688",
        "snippet": "double v_x_2_422_line_1688 = x2;\ndouble p_x_421_line_1688 = x;",
        "begin_line": 1724,
        "end_line": 1725,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double fast_math1_expr25_line_1688",
        "snippet": "double fast_math1_expr25_line_1688 = v_p_423_line_1688 * v_x_2_422_line_1688 * p_x_421_line_1688;\nint PROBE_END_LINE_1688 = 1688;",
        "begin_line": 1726,
        "end_line": 1727,
        "comment": "    \n     *  Computes sin(x) - x, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return sin(x) - x\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1690",
        "snippet": "int PROBE_START_LINE_1690 = 1690;\ndouble v_p_423_line_1690 = p;",
        "begin_line": 1732,
        "end_line": 1733,
        "comment": "        p *= x;"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_END_LINE_1690",
        "snippet": "int PROBE_END_LINE_1690 = 1690;\nreturn v_p_423_line_1690;",
        "begin_line": 1734,
        "end_line": 1735,
        "comment": "        p *= x;"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double fast_math1_expr31_line_1704",
        "snippet": "double fast_math1_expr31_line_1704 = fast_math1_expr32_line_1704 + 0.041666666666621166;\nint PROBE_END_LINE_1704 = 1704;",
        "begin_line": 1764,
        "end_line": 1765,
        "comment": "    \n     *  Computes cos(x) - 1, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return cos(x) - 1\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1705",
        "snippet": "int PROBE_START_LINE_1705 = 1705;\ndouble v_p_426_line_1705 = p;",
        "begin_line": 1767,
        "end_line": 1768,
        "comment": "    \n     *  Computes cos(x) - 1, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return cos(x) - 1\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double v_x_2_425_line_1705",
        "snippet": "double v_x_2_425_line_1705 = x2;\ndouble fast_math1_expr34_line_1705 = v_p_426_line_1705 * v_x_2_425_line_1705;",
        "begin_line": 1769,
        "end_line": 1770,
        "comment": "    \n     *  Computes cos(x) - 1, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return cos(x) - 1\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double fast_math1_expr35_line_1705",
        "snippet": "double fast_math1_expr35_line_1705 = -0.49999999999999994;\ndouble fast_math1_expr33_line_1705 = fast_math1_expr34_line_1705 + fast_math1_expr35_line_1705;",
        "begin_line": 1771,
        "end_line": 1772,
        "comment": "    \n     *  Computes cos(x) - 1, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return cos(x) - 1\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_END_LINE_1705",
        "snippet": "int PROBE_END_LINE_1705 = 1705;\np = fast_math1_expr33_line_1705;",
        "begin_line": 1773,
        "end_line": 1774,
        "comment": "    \n     *  Computes cos(x) - 1, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return cos(x) - 1\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1706",
        "snippet": "int PROBE_START_LINE_1706 = 1706;\ndouble v_x_2_425_line_1706 = x2;",
        "begin_line": 1775,
        "end_line": 1776,
        "comment": "    \n     *  Computes cos(x) - 1, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return cos(x) - 1\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_END_LINE_1706",
        "snippet": "int PROBE_END_LINE_1706 = 1706;\np *= v_x_2_425_line_1706;",
        "begin_line": 1777,
        "end_line": 1778,
        "comment": "    \n     *  Computes cos(x) - 1, where |x| < 1/16.\n     *  Use a Remez polynomial approximation.\n     *  @param x a number smaller than 1/16\n     *  @return cos(x) - 1\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1719",
        "snippet": "int PROBE_START_LINE_1719 = 1719;\ndouble p_xa_427_line_1719 = xa;",
        "begin_line": 1794,
        "end_line": 1795,
        "comment": "    \n     *  Compute sine over the first quadrant (0 < x < pi/2).\n     *  Use combination of table lookup and rational polynomial expansion.\n     *  @param xa number from which sine is requested\n     *  @param xb extra bits for x (may be 0.0)\n     *  @return sin(xa + xb)\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int v_idx_429_line_1724",
        "snippet": "int v_idx_429_line_1724 = idx;\ndouble fast_math1_expr44_line_1724 = f_sine_table_b_382_line_1724[v_idx_429_line_1724];",
        "begin_line": 1820,
        "end_line": 1821,
        "comment": "\t\t Table lookups"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_END_LINE_1724",
        "snippet": "int PROBE_END_LINE_1724 = 1724;\nfinal double sintB = fast_math1_expr44_line_1724;",
        "begin_line": 1822,
        "end_line": 1823,
        "comment": "\t\t Table lookups"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1725",
        "snippet": "int PROBE_START_LINE_1725 = 1725;\ndouble[] f_cosine_table_a_383_line_1725 = COSINE_TABLE_A;",
        "begin_line": 1824,
        "end_line": 1825,
        "comment": "\t\t Table lookups"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int v_idx_429_line_1725",
        "snippet": "int v_idx_429_line_1725 = idx;\ndouble fast_math1_expr45_line_1725 = f_cosine_table_a_383_line_1725[v_idx_429_line_1725];",
        "begin_line": 1826,
        "end_line": 1827,
        "comment": "\t\t Table lookups"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1726",
        "snippet": "int PROBE_START_LINE_1726 = 1726;\ndouble[] f_cosine_table_b_384_line_1726 = COSINE_TABLE_B;",
        "begin_line": 1830,
        "end_line": 1831,
        "comment": "\t\t Table lookups"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int v_idx_429_line_1726",
        "snippet": "int v_idx_429_line_1726 = idx;\ndouble fast_math1_expr46_line_1726 = f_cosine_table_b_384_line_1726[v_idx_429_line_1726];",
        "begin_line": 1832,
        "end_line": 1833,
        "comment": "\t\t Table lookups"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1730",
        "snippet": "int PROBE_START_LINE_1730 = 1730;\ndouble v_epsilon_430_line_1730 = epsilon;",
        "begin_line": 1842,
        "end_line": 1843,
        "comment": "\t\t Polynomial eval of sin(epsilon), cos(epsilon)"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double fast_math1_expr47_line_1730",
        "snippet": "double fast_math1_expr47_line_1730 = polySine(v_epsilon_430_line_1730);\nint PROBE_END_LINE_1730 = 1730;",
        "begin_line": 1844,
        "end_line": 1845,
        "comment": "\t\t Polynomial eval of sin(epsilon), cos(epsilon)"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double sinEpsB",
        "snippet": "double sinEpsB = fast_math1_expr47_line_1730;\nfinal double cosEpsA = 1.0;",
        "begin_line": 1846,
        "end_line": 1847,
        "comment": "\t\t Polynomial eval of sin(epsilon), cos(epsilon)"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_1732",
        "snippet": "int PROBE_START_LINE_1732 = 1732;\ndouble v_epsilon_430_line_1732 = epsilon;",
        "begin_line": 1848,
        "end_line": 1849,
        "comment": "\t\t Polynomial eval of sin(epsilon), cos(epsilon)"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double fast_math1_expr49_line_1732",
        "snippet": "double fast_math1_expr49_line_1732 = polyCosine(v_epsilon_430_line_1732);\nint PROBE_END_LINE_1732 = 1732;",
        "begin_line": 1850,
        "end_line": 1851,
        "comment": "\t\t Polynomial eval of sin(epsilon), cos(epsilon)"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double cosa",
        "snippet": "double cosa = a + b;\ndouble cosb = -(cosa - a - b);",
        "begin_line": 2233,
        "end_line": 2234,
        "comment": "         Compute cosine"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double est",
        "snippet": "double est = sina/cosa;\n\n/* Split the estimate to get more accurate read on division rounding */\ntemp = est * HEX_40000000;",
        "begin_line": 2253,
        "end_line": 2256,
        "comment": "         f(x) = 1/x,   f'(x) = -1/x^2"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double err",
        "snippet": "double err = (sina - esta*cosaa - esta*cosab - estb*cosaa - estb*cosab)/cosa;  // Correction for division rounding\nerr += sinb/cosa;                     // Change in est due to sinb\nerr += -sina * cosb / cosa / cosa;    // Change in est due to cosb\n\nif (xb != 0.0) {\n// tan' = 1 + tan^2      cot' = -(1 + cot^2)\n// Approximate impact of xb\ndouble xbadj = xb + est*est*xb;",
        "begin_line": 2265,
        "end_line": 2272,
        "comment": "        double err = (sina - est*cosa)/cosa;   Correction for division rounding"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "long inbits",
        "snippet": "long inbits = Double.doubleToRawLongBits(x);\nint exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;",
        "begin_line": 2297,
        "end_line": 2298,
        "comment": "        /* Convert input double to bits "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "long a",
        "snippet": "long a = inbits >>> 32;\nlong b = inbits & 0xffffffffL;",
        "begin_line": 2327,
        "end_line": 2328,
        "comment": "        /* Multiply input by shpiA "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "long c",
        "snippet": "long c = shpiA >>> 32;\nlong d = shpiA & 0xffffffffL;",
        "begin_line": 2330,
        "end_line": 2331,
        "comment": "        /* Multiply input by shpiA "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_START_LINE_2270",
        "snippet": "int PROBE_START_LINE_2270 = 2272;\nboolean v_negative_460_line_2270 = negative;",
        "begin_line": 2586,
        "end_line": 2587,
        "comment": "             PayneHanek."
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int quadrant",
        "snippet": "int quadrant = 0;\n\nint PROBE_START_LINE_2298 = 2298;",
        "begin_line": 2622,
        "end_line": 2624,
        "comment": "    \n     * Cosine function.\n     *\n     * @param x Argument.\n     * @return cos(x)\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "boolean fast_math1_expr115_line_2303",
        "snippet": "boolean fast_math1_expr115_line_2303 = fast_math1_expr116_line_2303 || fast_math1_expr117_line_2303;\nint PROBE_END_LINE_2303 = 2305;",
        "begin_line": 2645,
        "end_line": 2646,
        "comment": "\t\t/* Take absolute value of the input "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "int PROBE_END_LINE_2309",
        "snippet": "int PROBE_END_LINE_2309 = 2323;\nif (fast_math1_expr119_line_2309) {\n// PI * (2**20)\n// Argument too big for CodyWaite reduction.  Must use\n// PayneHanek.\ndouble reduceResults[] = new double[3];",
        "begin_line": 2656,
        "end_line": 2661,
        "comment": "        /* Perform any argument reduction "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/util/FastMath.java",
        "signature": "double f_positive_infinity_464_line_2636",
        "snippet": "double f_positive_infinity_464_line_2636 = Double.POSITIVE_INFINITY;\nboolean fast_math1_expr128_line_2636 = p_x_475_line_2636 == f_positive_infinity_464_line_2636;",
        "begin_line": 3024,
        "end_line": 3025,
        "comment": "         y cannot now be zero"
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.oned.Vector1D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java",
        "signature": "int PROBE_START_LINE_42",
        "snippet": "int PROBE_START_LINE_42 = 43;\n\npublic static final double f_na_n_29_line_43 = Double.NaN;",
        "begin_line": 41,
        "end_line": 43,
        "comment": "     Unit (coordinates: 1). "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.oned.Vector1D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java",
        "signature": "int PROBE_END_LINE_42",
        "snippet": "int PROBE_END_LINE_42 = 43;\n\n// CHECKSTYLE: stop ConstantName\n/** A vector with all coordinates set to NaN. */\npublic static final Vector1D NaN = new Vector1D(f_na_n_29_line_43);",
        "begin_line": 45,
        "end_line": 49,
        "comment": "     Unit (coordinates: 1). "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Vector2D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java",
        "signature": "int PROBE_START_LINE_40",
        "snippet": "int PROBE_START_LINE_40 = 41;\n\npublic static final double f_na_n_29_line_41 = Double.NaN;",
        "begin_line": 39,
        "end_line": 41,
        "comment": "     Origin (coordinates: 0, 0). "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Vector2D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java",
        "signature": "int PROBE_END_LINE_40",
        "snippet": "int PROBE_END_LINE_40 = 41;\n\n// CHECKSTYLE: stop ConstantName\n/** A vector with all coordinates set to NaN. */\npublic static final Vector2D NaN = new Vector2D(f_na_n_29_line_41, Double.NaN);",
        "begin_line": 43,
        "end_line": 47,
        "comment": "     Origin (coordinates: 0, 0). "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java",
        "signature": "int PROBE_START_LINE_43",
        "snippet": "int PROBE_START_LINE_43 = 43;\norg.apache.commons.math3.geometry.euclidean.oned.Vector1D p_location_14_line_43 = location;",
        "begin_line": 43,
        "end_line": 44,
        "comment": "     Simple constructor.\n     * @param location location of the hyperplane\n     * @param direct if true, the plus side of the hyperplane is towards\n     * abscissas greater than {@code location}\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java",
        "signature": "int PROBE_END_LINE_43",
        "snippet": "int PROBE_END_LINE_43 = 43;\nthis.location = p_location_14_line_43;",
        "begin_line": 45,
        "end_line": 46,
        "comment": "     Simple constructor.\n     * @param location location of the hyperplane\n     * @param direct if true, the plus side of the hyperplane is towards\n     * abscissas greater than {@code location}\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.SubLine",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java",
        "signature": "int PROBE_START_LINE_113",
        "snippet": "int PROBE_START_LINE_113 = 113;\nHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> sub_line2_expr5_line_113 = getHyperplane();",
        "begin_line": 112,
        "end_line": 113,
        "comment": "     Get the intersection of the instance and another sub-line.\n     * <p>\n     * This method is related to the {@link Line#intersection(Line)\n     * intersection} method in the {@link Line Line} class, but in addition\n     * to compute the point along infinite lines, it also checks the point\n     * lies on both sub-line ranges.\n     * </p>\n     * @param subLine other sub-line which may intersect instance\n     * @param includeEndPoints if true, endpoints are considered to belong to\n     * instance (i.e. they are closed sets) and may be returned, otherwise endpoints\n     * are considered to not belong to instance (i.e. they are open sets) and intersection\n     * occurring on endpoints lead to null being returned\n     * @return the intersection point if there is one, null if the sub-lines don't intersect\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.SubLine",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java",
        "signature": "int PROBE_END_LINE_113",
        "snippet": "int PROBE_END_LINE_113 = 113;\n// retrieve the underlying lines\nLine line1 = (Line) sub_line2_expr5_line_113;",
        "begin_line": 114,
        "end_line": 116,
        "comment": "     Get the intersection of the instance and another sub-line.\n     * <p>\n     * This method is related to the {@link Line#intersection(Line)\n     * intersection} method in the {@link Line Line} class, but in addition\n     * to compute the point along infinite lines, it also checks the point\n     * lies on both sub-line ranges.\n     * </p>\n     * @param subLine other sub-line which may intersect instance\n     * @param includeEndPoints if true, endpoints are considered to belong to\n     * instance (i.e. they are closed sets) and may be returned, otherwise endpoints\n     * are considered to not belong to instance (i.e. they are open sets) and intersection\n     * occurring on endpoints lead to null being returned\n     * @return the intersection point if there is one, null if the sub-lines don't intersect\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.SubLine",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java",
        "signature": "int PROBE_START_LINE_114",
        "snippet": "int PROBE_START_LINE_114 = 114;\norg.apache.commons.math3.geometry.euclidean.twod.SubLine p_sub_line_235_line_114 = subLine;",
        "begin_line": 117,
        "end_line": 118,
        "comment": "\t\t retrieve the underlying lines"
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.SubLine",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java",
        "signature": "Location sub_line2_expr9_line_120",
        "snippet": "Location sub_line2_expr9_line_120 = sub_line2_expr11_line_120.checkPoint(sub_line2_expr10_line_120);\nint PROBE_END_LINE_120 = 120;",
        "begin_line": 138,
        "end_line": 139,
        "comment": "\t\t compute the intersection on infinite line"
    },
    {
        "class_name": "org.apache.commons.math3.geometry.partitioning.BSPTree",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/partitioning/BSPTree.java",
        "signature": "int PROBE_START_LINE_98",
        "snippet": "int PROBE_START_LINE_98 = 98;\nObject p_attribute_346_line_98 = attribute;",
        "begin_line": 98,
        "end_line": 99,
        "comment": "     Build a tree having only one root cell representing the whole space.\n     * @param attribute attribute of the tree (may be null)\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.partitioning.BSPTree",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/partitioning/BSPTree.java",
        "signature": "int PROBE_START_LINE_116",
        "snippet": "int PROBE_START_LINE_116 = 116;\nSubHyperplane<S> p_cut_352_line_116 = cut;",
        "begin_line": 119,
        "end_line": 120,
        "comment": "     Build a BSPTree from its underlying elements.\n     * <p>This method does <em>not</em> perform any verification on\n     * consistency of its arguments, it should therefore be used only\n     * when then caller knows what it is doing.</p>\n     * <p>This method is mainly useful kto build trees\n     * bottom-up. Building trees top-down is realized with the help of\n     * method {@link #insertCut insertCut}.</p>\n     * @param cut cut sub-hyperplane for the tree\n     * @param plus plus side sub-tree\n     * @param minus minus side sub-tree\n     * @param attribute attribute associated with the node (may be null)\n     * @see #insertCut\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.partitioning.BSPTree",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/partitioning/BSPTree.java",
        "signature": "int PROBE_END_LINE_116",
        "snippet": "int PROBE_END_LINE_116 = 116;\nthis.cut       = p_cut_352_line_116;",
        "begin_line": 121,
        "end_line": 122,
        "comment": "     Build a BSPTree from its underlying elements.\n     * <p>This method does <em>not</em> perform any verification on\n     * consistency of its arguments, it should therefore be used only\n     * when then caller knows what it is doing.</p>\n     * <p>This method is mainly useful kto build trees\n     * bottom-up. Building trees top-down is realized with the help of\n     * method {@link #insertCut insertCut}.</p>\n     * @param cut cut sub-hyperplane for the tree\n     * @param plus plus side sub-tree\n     * @param minus minus side sub-tree\n     * @param attribute attribute associated with the node (may be null)\n     * @see #insertCut\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.partitioning.BSPTree",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/partitioning/BSPTree.java",
        "signature": "int PROBE_START_LINE_117",
        "snippet": "int PROBE_START_LINE_117 = 117;\nBSPTree<S> p_plus_353_line_117 = plus;",
        "begin_line": 123,
        "end_line": 124,
        "comment": "     Build a BSPTree from its underlying elements.\n     * <p>This method does <em>not</em> perform any verification on\n     * consistency of its arguments, it should therefore be used only\n     * when then caller knows what it is doing.</p>\n     * <p>This method is mainly useful kto build trees\n     * bottom-up. Building trees top-down is realized with the help of\n     * method {@link #insertCut insertCut}.</p>\n     * @param cut cut sub-hyperplane for the tree\n     * @param plus plus side sub-tree\n     * @param minus minus side sub-tree\n     * @param attribute attribute associated with the node (may be null)\n     * @see #insertCut\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Line.java",
        "signature": "int PROBE_START_LINE_82",
        "snippet": "int PROBE_START_LINE_82 = 82;\norg.apache.commons.math3.geometry.euclidean.twod.Vector2D p_p_1_186_line_82 = p1;",
        "begin_line": 82,
        "end_line": 83,
        "comment": "     Build a line from two points.\n     * <p>The line is oriented from p1 to p2</p>\n     * @param p1 first point\n     * @param p2 second point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Line.java",
        "signature": "double line2_expr4_line_129",
        "snippet": "double line2_expr4_line_129 = p_p_1_195_line_129.getX();\ndouble line2_expr2_line_129 = line2_expr3_line_129 - line2_expr4_line_129;",
        "begin_line": 137,
        "end_line": 138,
        "comment": "     Reset the instance as if built from two points.\n     * <p>The line is oriented from p1 to p2</p>\n     * @param p1 first point\n     * @param p2 second point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Line.java",
        "signature": "int PROBE_END_LINE_129",
        "snippet": "int PROBE_END_LINE_129 = 129;\nfinal double dx = line2_expr2_line_129;",
        "begin_line": 139,
        "end_line": 140,
        "comment": "     Reset the instance as if built from two points.\n     * <p>The line is oriented from p1 to p2</p>\n     * @param p1 first point\n     * @param p2 second point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Line.java",
        "signature": "int PROBE_START_LINE_130",
        "snippet": "int PROBE_START_LINE_130 = 130;\norg.apache.commons.math3.geometry.euclidean.twod.Vector2D p_p_2_196_line_130 = p2;",
        "begin_line": 141,
        "end_line": 142,
        "comment": "     Reset the instance as if built from two points.\n     * <p>The line is oriented from p1 to p2</p>\n     * @param p1 first point\n     * @param p2 second point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Line.java",
        "signature": "double line2_expr6_line_130",
        "snippet": "double line2_expr6_line_130 = p_p_2_196_line_130.getY();\norg.apache.commons.math3.geometry.euclidean.twod.Vector2D p_p_1_195_line_130 = p1;",
        "begin_line": 143,
        "end_line": 144,
        "comment": "     Reset the instance as if built from two points.\n     * <p>The line is oriented from p1 to p2</p>\n     * @param p1 first point\n     * @param p2 second point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Line.java",
        "signature": "int PROBE_START_LINE_140",
        "snippet": "int PROBE_START_LINE_140 = 140;\ndouble f_angle_200_line_140 = angle;",
        "begin_line": 180,
        "end_line": 181,
        "comment": "     Reset the instance as if built from two points.\n     * <p>The line is oriented from p1 to p2</p>\n     * @param p1 first point\n     * @param p2 second point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Line.java",
        "signature": "double line2_expr15_line_140",
        "snippet": "double line2_expr15_line_140 = FastMath.sin(f_angle_200_line_140);\nint PROBE_END_LINE_140 = 140;",
        "begin_line": 182,
        "end_line": 183,
        "comment": "     Reset the instance as if built from two points.\n     * <p>The line is oriented from p1 to p2</p>\n     * @param p1 first point\n     * @param p2 second point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.twod.Line",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/twod/Line.java",
        "signature": "double line2_expr16_line_141",
        "snippet": "double line2_expr16_line_141 = line2_expr17_line_141 / v_d_199_line_141;\nint PROBE_END_LINE_141 = 141;",
        "begin_line": 197,
        "end_line": 198,
        "comment": "     Reset the instance as if built from two points.\n     * <p>The line is oriented from p1 to p2</p>\n     * @param p1 first point\n     * @param p2 second point\n     "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java",
        "signature": "int PROBE_START_LINE_46",
        "snippet": "int PROBE_START_LINE_46 = 47;\n\npublic static final int vector3_d1_expr10_line_47 = -1;",
        "begin_line": 46,
        "end_line": 48,
        "comment": "     First canonical vector (coordinates: 1, 0, 0). "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java",
        "signature": "int PROBE_END_LINE_46",
        "snippet": "int PROBE_END_LINE_46 = 47;\n\n/** Opposite of the first canonical vector (coordinates: -1, 0, 0). */\npublic static final Vector3D MINUS_I = new Vector3D(vector3_d1_expr10_line_47, 0, 0);",
        "begin_line": 50,
        "end_line": 53,
        "comment": "     First canonical vector (coordinates: 1, 0, 0). "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java",
        "signature": "int PROBE_START_LINE_52",
        "snippet": "int PROBE_START_LINE_52 = 53;\n\npublic static final int vector3_d1_expr19_line_53 = -1;",
        "begin_line": 58,
        "end_line": 60,
        "comment": "     Second canonical vector (coordinates: 0, 1, 0). "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java",
        "signature": "int PROBE_END_LINE_52",
        "snippet": "int PROBE_END_LINE_52 = 53;\n\n/** Opposite of the second canonical vector (coordinates: 0, -1, 0). */\npublic static final Vector3D MINUS_J = new Vector3D(0, vector3_d1_expr19_line_53, 0);",
        "begin_line": 62,
        "end_line": 65,
        "comment": "     Second canonical vector (coordinates: 0, 1, 0). "
    },
    {
        "class_name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
        "src_path": "/data/bug_db/subjects/defects4j/Math-4/result/src/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java",
        "signature": "int PROBE_START_LINE_58",
        "snippet": "int PROBE_START_LINE_58 = 59;\n\npublic static final int vector3_d1_expr28_line_59 = -1;",
        "begin_line": 70,
        "end_line": 72,
        "comment": "     Third canonical vector (coordinates: 0, 0, 1). "
    }
]