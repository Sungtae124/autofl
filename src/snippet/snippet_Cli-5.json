[
    {
        "name": "org.apache.commons.cli.OptionValidator.unknown#45",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/OptionValidator.java",
        "class_name": "org.apache.commons.cli.OptionValidator",
        "signature": "org.apache.commons.cli.OptionValidator.unknown(...)",
        "snippet": "String p_opt_50_line_45 = opt;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "    \n     * <p>Validates whether <code>opt</code> is a permissable Option\n     * shortOpt.  The rules that specify if the <code>opt</code>\n     * is valid are:</p>\n     * <ul>\n     *  <li><code>opt</code> is not NULL</li>\n     *  <li>a single character <code>opt</code> that is either\n     *  ' '(special case), '?', '@' or a letter</li>\n     *  <li>a multi character <code>opt</code> that only contains\n     *  letters.</li>\n     * </ul>\n     *\n     * @param opt The option string to validate\n     * @throws IllegalArgumentException if the Option is not valid.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.OptionValidator.unknown#51",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/OptionValidator.java",
        "class_name": "org.apache.commons.cli.OptionValidator",
        "signature": "org.apache.commons.cli.OptionValidator.unknown(...)",
        "snippet": "return;",
        "begin_line": 51,
        "end_line": 51,
        "comment": "\t\t check that opt is not NULL",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.OptionValidator.unknown#53",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/OptionValidator.java",
        "class_name": "org.apache.commons.cli.OptionValidator",
        "signature": "org.apache.commons.cli.OptionValidator.unknown(...)",
        "snippet": "int PROBE_START_LINE_51 = 76;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "\t\t check that opt is not NULL",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.OptionValidator.unknown#55",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/OptionValidator.java",
        "class_name": "org.apache.commons.cli.OptionValidator",
        "signature": "org.apache.commons.cli.OptionValidator.unknown(...)",
        "snippet": "int option_validator1_expr3_line_51 = p_opt_50_line_51.length();",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\t\t check that opt is not NULL",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.OptionValidator.unknown#60",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/OptionValidator.java",
        "class_name": "org.apache.commons.cli.OptionValidator",
        "signature": "org.apache.commons.cli.OptionValidator.unknown(...)",
        "snippet": "if (!isValidOpt(ch)) {",
        "begin_line": 60,
        "end_line": 60,
        "comment": "\t\t check that opt is not NULL",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.OptionValidator.unknown#77",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/OptionValidator.java",
        "class_name": "org.apache.commons.cli.OptionValidator",
        "signature": "org.apache.commons.cli.OptionValidator.unknown(...)",
        "snippet": "* @param c the option to validate",
        "begin_line": 77,
        "end_line": 77,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.OptionValidator.unknown#88",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/OptionValidator.java",
        "class_name": "org.apache.commons.cli.OptionValidator",
        "signature": "org.apache.commons.cli.OptionValidator.unknown(...)",
        "snippet": "boolean option_validator1_expr15_line_88 = false;",
        "begin_line": 88,
        "end_line": 88,
        "comment": "    \n     * <p>Returns whether the specified character is a valid Option.</p>\n     *\n     * @param c the option to validate\n     * @return true if <code>c</code> is a letter, ' ', '?' or '@', \n     * otherwise false.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.OptionValidator.unknown#99",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/OptionValidator.java",
        "class_name": "org.apache.commons.cli.OptionValidator",
        "signature": "org.apache.commons.cli.OptionValidator.unknown(...)",
        "snippet": "}",
        "begin_line": 99,
        "end_line": 99,
        "comment": "    \n     * <p>Returns whether the specified character is a valid Option.</p>\n     *\n     * @param c the option to validate\n     * @return true if <code>c</code> is a letter, ' ', '?' or '@', \n     * otherwise false.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#46",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "private Map shortOpts = new HashMap();",
        "begin_line": 46,
        "end_line": 46,
        "comment": "     a map of the options with the character key ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#49",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "private Map longOpts = new HashMap();",
        "begin_line": 49,
        "end_line": 49,
        "comment": "     a map of the options with the long key ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#52",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "private List requiredOpts = new ArrayList();",
        "begin_line": 52,
        "end_line": 52,
        "comment": "     a map of the required options ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#55",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "private Map optionGroups = new HashMap();",
        "begin_line": 55,
        "end_line": 55,
        "comment": "     a map of the option groups ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#60",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "{",
        "begin_line": 60,
        "end_line": 60,
        "comment": "     Construct a new Options descriptor\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#62",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "}",
        "begin_line": 62,
        "end_line": 62,
        "comment": "         nothing to do",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#146",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "int PROBE_START_LINE_146 = 146;",
        "begin_line": 146,
        "end_line": 146,
        "comment": "    \n     * Adds an option instance\n     *\n     * @param opt the option that is to be added \n     * @return the resulting Options instance\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#149",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "int PROBE_END_LINE_146 = 146;",
        "begin_line": 149,
        "end_line": 149,
        "comment": "    \n     * Adds an option instance\n     *\n     * @param opt the option that is to be added \n     * @return the resulting Options instance\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#155",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "int PROBE_END_LINE_149 = 152;",
        "begin_line": 155,
        "end_line": 155,
        "comment": "    \n     * Adds an option instance\n     *\n     * @param opt the option that is to be added \n     * @return the resulting Options instance\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#163",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "org.apache.commons.cli.Option p_opt_66_line_155 = opt;",
        "begin_line": 163,
        "end_line": 163,
        "comment": "\t\t add it to the long option list",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#165",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "int PROBE_END_LINE_155 = 161;",
        "begin_line": 165,
        "end_line": 165,
        "comment": "\t\t add it to the long option list",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#185",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "/**",
        "begin_line": 185,
        "end_line": 185,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#189",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "*/",
        "begin_line": 189,
        "end_line": 189,
        "comment": "     \n     * Retrieve a read-only list of options in this set\n     *\n     * @return read-only Collection of {@link Option} objects in this descriptor\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#191",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "{",
        "begin_line": 191,
        "end_line": 191,
        "comment": "     \n     * Retrieve a read-only list of options in this set\n     *\n     * @return read-only Collection of {@link Option} objects in this descriptor\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#201",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "{",
        "begin_line": 201,
        "end_line": 201,
        "comment": "    \n     * Returns the Options for use by the HelpFormatter.\n     *\n     * @return the List of Options\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Options.unknown#212",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Options.java",
        "class_name": "org.apache.commons.cli.Options",
        "signature": "org.apache.commons.cli.Options.unknown(...)",
        "snippet": "int PROBE_END_LINE_189 = 189;",
        "begin_line": 212,
        "end_line": 212,
        "comment": "    \n     * Returns the Options for use by the HelpFormatter.\n     *\n     * @return the List of Options\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.CommandLine.unknown#44",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/CommandLine.java",
        "class_name": "org.apache.commons.cli.CommandLine",
        "signature": "org.apache.commons.cli.CommandLine.unknown(...)",
        "snippet": "private List args = new LinkedList();",
        "begin_line": 44,
        "end_line": 44,
        "comment": "     the unrecognised options/arguments ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.CommandLine.unknown#47",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/CommandLine.java",
        "class_name": "org.apache.commons.cli.CommandLine",
        "signature": "org.apache.commons.cli.CommandLine.unknown(...)",
        "snippet": "private Set options = new HashSet();",
        "begin_line": 47,
        "end_line": 47,
        "comment": "     the processed options ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.CommandLine.unknown#56",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/CommandLine.java",
        "class_name": "org.apache.commons.cli.CommandLine",
        "signature": "org.apache.commons.cli.CommandLine.unknown(...)",
        "snippet": "{",
        "begin_line": 56,
        "end_line": 56,
        "comment": "    \n     * Creates a command line.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.CommandLine.unknown#58",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/CommandLine.java",
        "class_name": "org.apache.commons.cli.CommandLine",
        "signature": "org.apache.commons.cli.CommandLine.unknown(...)",
        "snippet": "}",
        "begin_line": 58,
        "end_line": 58,
        "comment": "         nothing to do",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.CommandLine.unknown#68",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/CommandLine.java",
        "class_name": "org.apache.commons.cli.CommandLine",
        "signature": "org.apache.commons.cli.CommandLine.unknown(...)",
        "snippet": "int PROBE_START_LINE_68 = 68;",
        "begin_line": 68,
        "end_line": 68,
        "comment": "     \n     * Query to see if an option has been set.\n     *\n     * @param opt Short name of the option\n     * @return true if set, false if not\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.CommandLine.unknown#166",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/CommandLine.java",
        "class_name": "org.apache.commons.cli.CommandLine",
        "signature": "org.apache.commons.cli.CommandLine.unknown(...)",
        "snippet": "* <p>Retrieves the option object given the long or short option as a String</p>",
        "begin_line": 166,
        "end_line": 166,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#33",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "public abstract class Parser implements CommandLineParser {",
        "begin_line": 33,
        "end_line": 33,
        "comment": "\n * <p><code>Parser</code> creates {@link CommandLine}s.</p>\n *\n * @author John Keyes (john at integralsource.com)\n * @see Parser\n * @version $Revision$\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#71",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "int PROBE_START_LINE_71 = 71;",
        "begin_line": 71,
        "end_line": 71,
        "comment": "    \n     * <p>Parses the specified <code>arguments</code> \n     * based on the specifed {@link Options}.</p>\n     *\n     * @param options the <code>Options</code>\n     * @param arguments the <code>arguments</code>\n     * @return the <code>CommandLine</code>\n     * @throws ParseException if an error occurs when parsing the\n     * arguments.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#135",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "*/",
        "begin_line": 135,
        "end_line": 135,
        "comment": "    \n     * Parse the arguments according to the specified options and\n     * properties.\n     *\n     * @param options the specified Options\n     * @param arguments the command line arguments\n     * @param properties command line option name-value pairs\n     * @param stopAtNonOption stop parsing the arguments when the first\n     * non option is encountered.\n     *\n     * @return the list of atomic option and value tokens\n     *\n     * @throws ParseException if there are any problems encountered\n     * while parsing the command line tokens.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#138",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "throws ParseException",
        "begin_line": 138,
        "end_line": 138,
        "comment": "    \n     * Parse the arguments according to the specified options and\n     * properties.\n     *\n     * @param options the specified Options\n     * @param arguments the command line arguments\n     * @param properties command line option name-value pairs\n     * @param stopAtNonOption stop parsing the arguments when the first\n     * non option is encountered.\n     *\n     * @return the list of atomic option and value tokens\n     *\n     * @throws ParseException if there are any problems encountered\n     * while parsing the command line tokens.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#139",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "{",
        "begin_line": 139,
        "end_line": 139,
        "comment": "    \n     * Parse the arguments according to the specified options and\n     * properties.\n     *\n     * @param options the specified Options\n     * @param arguments the command line arguments\n     * @param properties command line option name-value pairs\n     * @param stopAtNonOption stop parsing the arguments when the first\n     * non option is encountered.\n     *\n     * @return the list of atomic option and value tokens\n     *\n     * @throws ParseException if there are any problems encountered\n     * while parsing the command line tokens.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "int PROBE_START_LINE_135 = 135;",
        "begin_line": 140,
        "end_line": 140,
        "comment": "    \n     * Parse the arguments according to the specified options and\n     * properties.\n     *\n     * @param options the specified Options\n     * @param arguments the command line arguments\n     * @param properties command line option name-value pairs\n     * @param stopAtNonOption stop parsing the arguments when the first\n     * non option is encountered.\n     *\n     * @return the list of atomic option and value tokens\n     *\n     * @throws ParseException if there are any problems encountered\n     * while parsing the command line tokens.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#141",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "org.apache.commons.cli.Options p_options_84_line_135 = options;",
        "begin_line": 141,
        "end_line": 141,
        "comment": "    \n     * Parse the arguments according to the specified options and\n     * properties.\n     *\n     * @param options the specified Options\n     * @param arguments the command line arguments\n     * @param properties command line option name-value pairs\n     * @param stopAtNonOption stop parsing the arguments when the first\n     * non option is encountered.\n     *\n     * @return the list of atomic option and value tokens\n     *\n     * @throws ParseException if there are any problems encountered\n     * while parsing the command line tokens.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#143",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "// initialise members",
        "begin_line": 143,
        "end_line": 143,
        "comment": "\t\t initialise members",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#144",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "this.options = p_options_84_line_135;",
        "begin_line": 144,
        "end_line": 144,
        "comment": "\t\t initialise members",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#146",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "// clear out the data in options in case it's been used before (CLI-71)",
        "begin_line": 146,
        "end_line": 146,
        "comment": "         clear out the data in options in case it's been used before (CLI-71)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#148",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "int PROBE_START_LINE_139 = 139;",
        "begin_line": 148,
        "end_line": 148,
        "comment": "         clear out the data in options in case it's been used before (CLI-71)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#150",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "Object parser1_expr8_line_139 = v_it_89_line_139.next();",
        "begin_line": 150,
        "end_line": 150,
        "comment": "         clear out the data in options in case it's been used before (CLI-71)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#153",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "int PROBE_START_LINE_140 = 140;",
        "begin_line": 153,
        "end_line": 153,
        "comment": "         clear out the data in options in case it's been used before (CLI-71)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#157",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "}",
        "begin_line": 157,
        "end_line": 157,
        "comment": "         clear out the data in options in case it's been used before (CLI-71)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#160",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "org.apache.commons.cli.Options p_options_84_line_143 = options;",
        "begin_line": 160,
        "end_line": 160,
        "comment": "         clear out the data in options in case it's been used before (CLI-71)",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#224",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "cmd.addArg(t);",
        "begin_line": 224,
        "end_line": 224,
        "comment": "             the value is an option",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#225",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "}",
        "begin_line": 225,
        "end_line": 225,
        "comment": "             the value is an option",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#227",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "{",
        "begin_line": 227,
        "end_line": 227,
        "comment": "             the value is an option",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#238",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "{",
        "begin_line": 238,
        "end_line": 238,
        "comment": "             the value is an argument",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#240",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "}",
        "begin_line": 240,
        "end_line": 240,
        "comment": "             the value is an argument",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#295",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "",
        "begin_line": 295,
        "end_line": 295,
        "comment": "    \n     * <p>Sets the values of Options using the values in \n     * <code>properties</code>.</p>\n     *\n     * @param properties The value properties to be processed.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Parser.unknown#311",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Parser.java",
        "class_name": "org.apache.commons.cli.Parser",
        "signature": "org.apache.commons.cli.Parser.unknown(...)",
        "snippet": "}",
        "begin_line": 311,
        "end_line": 311,
        "comment": "                 get the value from the properties instance",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#31",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "*/",
        "begin_line": 31,
        "end_line": 31,
        "comment": "\n * The class PosixParser provides an implementation of the \n * {@link Parser#flatten(Options,String[],boolean) flatten} method.\n *\n * @author John Keyes (john at integralsource.com)\n * @see Parser\n * @version $Revision$\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#34",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "/** holder for flattened tokens */",
        "begin_line": 34,
        "end_line": 34,
        "comment": "     holder for flattened tokens ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#52",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "{",
        "begin_line": 52,
        "end_line": 52,
        "comment": "    \n     * <p>Resets the members to their original state i.e. remove\n     * all of <code>tokens</code> entries, set <code>eatTheRest</code>\n     * to false and set <code>currentOption</code> to null.</p>\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#53",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "eatTheRest = false;",
        "begin_line": 53,
        "end_line": 53,
        "comment": "    \n     * <p>Resets the members to their original state i.e. remove\n     * all of <code>tokens</code> entries, set <code>eatTheRest</code>\n     * to false and set <code>currentOption</code> to null.</p>\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#54",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "int PROBE_START_LINE_53 = 53;",
        "begin_line": 54,
        "end_line": 54,
        "comment": "    \n     * <p>Resets the members to their original state i.e. remove\n     * all of <code>tokens</code> entries, set <code>eatTheRest</code>\n     * to false and set <code>currentOption</code> to null.</p>\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#55",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "java.util.ArrayList f_tokens_101_line_53 = tokens;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "    \n     * <p>Resets the members to their original state i.e. remove\n     * all of <code>tokens</code> entries, set <code>eatTheRest</code>\n     * to false and set <code>currentOption</code> to null.</p>\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#98",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "*/",
        "begin_line": 98,
        "end_line": 98,
        "comment": "    \n     * <p>An implementation of {@link Parser}'s abstract\n     * {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>\n     *\n     * <p>The following are the rules used by this flatten method.\n     * <ol>\n     *  <li>if <code>stopAtNonOption</code> is <b>true</b> then do not\n     *  burst anymore of <code>arguments</code> entries, just add each\n     *  successive entry without further processing.  Otherwise, ignore\n     *  <code>stopAtNonOption</code>.</li>\n     *  <li>if the current <code>arguments</code> entry is \"<b>--</b>\"\n     *  just add the entry to the list of processed tokens</li>\n     *  <li>if the current <code>arguments</code> entry is \"<b>-</b>\"\n     *  just add the entry to the list of processed tokens</li>\n     *  <li>if the current <code>arguments</code> entry is two characters\n     *  in length and the first character is \"<b>-</b>\" then check if this\n     *  is a valid {@link Option} id.  If it is a valid id, then add the\n     *  entry to the list of processed tokens and set the current {@link Option}\n     *  member.  If it is not a valid id and <code>stopAtNonOption</code>\n     *  is true, then the remaining entries are copied to the list of \n     *  processed tokens.  Otherwise, the current entry is ignored.</li>\n     *  <li>if the current <code>arguments</code> entry is more than two\n     *  characters in length and the first character is \"<b>-</b>\" then\n     *  we need to burst the entry to determine its constituents.  For more\n     *  information on the bursting algorithm see \n     *  {@link PosixParser#burstToken(String, boolean) burstToken}.</li>\n     *  <li>if the current <code>arguments</code> entry is not handled \n     *  by any of the previous rules, then the entry is added to the list\n     *  of processed tokens.</li>\n     * </ol>\n     * </p>\n     *\n     * @param options The command line {@link Options}\n     * @param arguments The command line arguments to be parsed\n     * @param stopAtNonOption Specifies whether to stop flattening\n     * when an non option is found.\n     * @return The flattened <code>arguments</code> String array.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#99",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "protected String[] flatten(Options options, String[] arguments,",
        "begin_line": 99,
        "end_line": 99,
        "comment": "    \n     * <p>An implementation of {@link Parser}'s abstract\n     * {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>\n     *\n     * <p>The following are the rules used by this flatten method.\n     * <ol>\n     *  <li>if <code>stopAtNonOption</code> is <b>true</b> then do not\n     *  burst anymore of <code>arguments</code> entries, just add each\n     *  successive entry without further processing.  Otherwise, ignore\n     *  <code>stopAtNonOption</code>.</li>\n     *  <li>if the current <code>arguments</code> entry is \"<b>--</b>\"\n     *  just add the entry to the list of processed tokens</li>\n     *  <li>if the current <code>arguments</code> entry is \"<b>-</b>\"\n     *  just add the entry to the list of processed tokens</li>\n     *  <li>if the current <code>arguments</code> entry is two characters\n     *  in length and the first character is \"<b>-</b>\" then check if this\n     *  is a valid {@link Option} id.  If it is a valid id, then add the\n     *  entry to the list of processed tokens and set the current {@link Option}\n     *  member.  If it is not a valid id and <code>stopAtNonOption</code>\n     *  is true, then the remaining entries are copied to the list of \n     *  processed tokens.  Otherwise, the current entry is ignored.</li>\n     *  <li>if the current <code>arguments</code> entry is more than two\n     *  characters in length and the first character is \"<b>-</b>\" then\n     *  we need to burst the entry to determine its constituents.  For more\n     *  information on the bursting algorithm see \n     *  {@link PosixParser#burstToken(String, boolean) burstToken}.</li>\n     *  <li>if the current <code>arguments</code> entry is not handled \n     *  by any of the previous rules, then the entry is added to the list\n     *  of processed tokens.</li>\n     * </ol>\n     * </p>\n     *\n     * @param options The command line {@link Options}\n     * @param arguments The command line arguments to be parsed\n     * @param stopAtNonOption Specifies whether to stop flattening\n     * when an non option is found.\n     * @return The flattened <code>arguments</code> String array.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#102",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "init();",
        "begin_line": 102,
        "end_line": 102,
        "comment": "    \n     * <p>An implementation of {@link Parser}'s abstract\n     * {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>\n     *\n     * <p>The following are the rules used by this flatten method.\n     * <ol>\n     *  <li>if <code>stopAtNonOption</code> is <b>true</b> then do not\n     *  burst anymore of <code>arguments</code> entries, just add each\n     *  successive entry without further processing.  Otherwise, ignore\n     *  <code>stopAtNonOption</code>.</li>\n     *  <li>if the current <code>arguments</code> entry is \"<b>--</b>\"\n     *  just add the entry to the list of processed tokens</li>\n     *  <li>if the current <code>arguments</code> entry is \"<b>-</b>\"\n     *  just add the entry to the list of processed tokens</li>\n     *  <li>if the current <code>arguments</code> entry is two characters\n     *  in length and the first character is \"<b>-</b>\" then check if this\n     *  is a valid {@link Option} id.  If it is a valid id, then add the\n     *  entry to the list of processed tokens and set the current {@link Option}\n     *  member.  If it is not a valid id and <code>stopAtNonOption</code>\n     *  is true, then the remaining entries are copied to the list of \n     *  processed tokens.  Otherwise, the current entry is ignored.</li>\n     *  <li>if the current <code>arguments</code> entry is more than two\n     *  characters in length and the first character is \"<b>-</b>\" then\n     *  we need to burst the entry to determine its constituents.  For more\n     *  information on the bursting algorithm see \n     *  {@link PosixParser#burstToken(String, boolean) burstToken}.</li>\n     *  <li>if the current <code>arguments</code> entry is not handled \n     *  by any of the previous rules, then the entry is added to the list\n     *  of processed tokens.</li>\n     * </ol>\n     * </p>\n     *\n     * @param options The command line {@link Options}\n     * @param arguments The command line arguments to be parsed\n     * @param stopAtNonOption Specifies whether to stop flattening\n     * when an non option is found.\n     * @return The flattened <code>arguments</code> String array.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#106",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "this.options = p_options_104_line_99;",
        "begin_line": 106,
        "end_line": 106,
        "comment": "    \n     * <p>An implementation of {@link Parser}'s abstract\n     * {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>\n     *\n     * <p>The following are the rules used by this flatten method.\n     * <ol>\n     *  <li>if <code>stopAtNonOption</code> is <b>true</b> then do not\n     *  burst anymore of <code>arguments</code> entries, just add each\n     *  successive entry without further processing.  Otherwise, ignore\n     *  <code>stopAtNonOption</code>.</li>\n     *  <li>if the current <code>arguments</code> entry is \"<b>--</b>\"\n     *  just add the entry to the list of processed tokens</li>\n     *  <li>if the current <code>arguments</code> entry is \"<b>-</b>\"\n     *  just add the entry to the list of processed tokens</li>\n     *  <li>if the current <code>arguments</code> entry is two characters\n     *  in length and the first character is \"<b>-</b>\" then check if this\n     *  is a valid {@link Option} id.  If it is a valid id, then add the\n     *  entry to the list of processed tokens and set the current {@link Option}\n     *  member.  If it is not a valid id and <code>stopAtNonOption</code>\n     *  is true, then the remaining entries are copied to the list of \n     *  processed tokens.  Otherwise, the current entry is ignored.</li>\n     *  <li>if the current <code>arguments</code> entry is more than two\n     *  characters in length and the first character is \"<b>-</b>\" then\n     *  we need to burst the entry to determine its constituents.  For more\n     *  information on the bursting algorithm see \n     *  {@link PosixParser#burstToken(String, boolean) burstToken}.</li>\n     *  <li>if the current <code>arguments</code> entry is not handled \n     *  by any of the previous rules, then the entry is added to the list\n     *  of processed tokens.</li>\n     * </ol>\n     * </p>\n     *\n     * @param options The command line {@link Options}\n     * @param arguments The command line arguments to be parsed\n     * @param stopAtNonOption Specifies whether to stop flattening\n     * when an non option is found.\n     * @return The flattened <code>arguments</code> String array.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.PosixParser.unknown#163",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/PosixParser.java",
        "class_name": "org.apache.commons.cli.PosixParser",
        "signature": "org.apache.commons.cli.PosixParser.unknown(...)",
        "snippet": "}",
        "begin_line": 163,
        "end_line": 163,
        "comment": "                 requires bursting",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#55",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "private String argName = \"arg\";",
        "begin_line": 55,
        "end_line": 55,
        "comment": "     argName specifies the name of the argument for this option ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#70",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "int PROBE_END_LINE_66 = 70;",
        "begin_line": 70,
        "end_line": 70,
        "comment": "     specifies whether the argument value of this Option is optional ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#76",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "private int numberOfArgs = f_uninitialized_20_line_70;",
        "begin_line": 76,
        "end_line": 76,
        "comment": "\t \n     * numberOfArgs specifies the number of argument values this option \n     * can have \n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#93",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "* @throws IllegalArgumentException if there are any non valid",
        "begin_line": 93,
        "end_line": 93,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#94",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "* Option characters in <code>opt</code>.",
        "begin_line": 94,
        "end_line": 94,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#126",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "* @throws IllegalArgumentException if there are any non valid",
        "begin_line": 126,
        "end_line": 126,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#128",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "*/",
        "begin_line": 128,
        "end_line": 128,
        "comment": "    \n     * Creates an Option using the specified parameters.\n     *\n     * @param opt short representation of the option\n     * @param longOpt the long representation of the option\n     * @param hasArg specifies whether the Option takes an argument or not\n     * @param description describes the function of the option\n     *\n     * @throws IllegalArgumentException if there are any non valid\n     * Option characters in <code>opt</code>.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#130",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "String description)",
        "begin_line": 130,
        "end_line": 130,
        "comment": "    \n     * Creates an Option using the specified parameters.\n     *\n     * @param opt short representation of the option\n     * @param longOpt the long representation of the option\n     * @param hasArg specifies whether the Option takes an argument or not\n     * @param description describes the function of the option\n     *\n     * @throws IllegalArgumentException if there are any non valid\n     * Option characters in <code>opt</code>.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#131",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "throws IllegalArgumentException",
        "begin_line": 131,
        "end_line": 131,
        "comment": "    \n     * Creates an Option using the specified parameters.\n     *\n     * @param opt short representation of the option\n     * @param longOpt the long representation of the option\n     * @param hasArg specifies whether the Option takes an argument or not\n     * @param description describes the function of the option\n     *\n     * @throws IllegalArgumentException if there are any non valid\n     * Option characters in <code>opt</code>.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#134",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "String p_opt_27_line_128 = opt;",
        "begin_line": 134,
        "end_line": 134,
        "comment": "    \n     * Creates an Option using the specified parameters.\n     *\n     * @param opt short representation of the option\n     * @param longOpt the long representation of the option\n     * @param hasArg specifies whether the Option takes an argument or not\n     * @param description describes the function of the option\n     *\n     * @throws IllegalArgumentException if there are any non valid\n     * Option characters in <code>opt</code>.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#139",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "int PROBE_START_LINE_130 = 130;",
        "begin_line": 139,
        "end_line": 139,
        "comment": "\t\t ensure that the option is valid",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#140",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "String p_opt_27_line_130 = opt;",
        "begin_line": 140,
        "end_line": 140,
        "comment": "\t\t ensure that the option is valid",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#141",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "int PROBE_END_LINE_130 = 130;",
        "begin_line": 141,
        "end_line": 141,
        "comment": "\t\t ensure that the option is valid",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#163",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "int PROBE_END_LINE_140 = 140;",
        "begin_line": 163,
        "end_line": 163,
        "comment": "\t\t if hasArg is set then the number of arguments is 1",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#168",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "* Returns the id of this Option.  This is only set when the",
        "begin_line": 168,
        "end_line": 168,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#252",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "public void setLongOpt(String longOpt)",
        "begin_line": 252,
        "end_line": 252,
        "comment": "    \n     * Sets the long name of this Option.\n     *\n     * @param longOpt the long name of this Option\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#292",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "* Query to see if this Option requires an argument",
        "begin_line": 292,
        "end_line": 292,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#643",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "{",
        "begin_line": 643,
        "end_line": 643,
        "comment": "    \n     * Returns whether this Option has any values.\n     *\n     * @return whether this Option has any values.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Option.unknown#644",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Option.java",
        "class_name": "org.apache.commons.cli.Option",
        "signature": "org.apache.commons.cli.Option.unknown(...)",
        "snippet": "return true;",
        "begin_line": 644,
        "end_line": 644,
        "comment": "    \n     * Returns whether this Option has any values.\n     *\n     * @return whether this Option has any values.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Util.unknown#36",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Util.java",
        "class_name": "org.apache.commons.cli.Util",
        "signature": "org.apache.commons.cli.Util.unknown(...)",
        "snippet": "int PROBE_START_LINE_36 = 43;",
        "begin_line": 36,
        "end_line": 36,
        "comment": "    \n     * <p>Remove the hyphens from the begining of <code>str</code> and\n     * return the new String.</p>\n     *\n     * @param str The string from which the hyphens should be removed.\n     *\n     * @return the new String.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Util.unknown#38",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Util.java",
        "class_name": "org.apache.commons.cli.Util",
        "signature": "org.apache.commons.cli.Util.unknown(...)",
        "snippet": "boolean util1_expr1_line_36 = p_str_116_line_36.startsWith(\"--\");",
        "begin_line": 38,
        "end_line": 38,
        "comment": "    \n     * <p>Remove the hyphens from the begining of <code>str</code> and\n     * return the new String.</p>\n     *\n     * @param str The string from which the hyphens should be removed.\n     *\n     * @return the new String.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Util.unknown#40",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Util.java",
        "class_name": "org.apache.commons.cli.Util",
        "signature": "org.apache.commons.cli.Util.unknown(...)",
        "snippet": "if (util1_expr1_line_36)",
        "begin_line": 40,
        "end_line": 40,
        "comment": "    \n     * <p>Remove the hyphens from the begining of <code>str</code> and\n     * return the new String.</p>\n     *\n     * @param str The string from which the hyphens should be removed.\n     *\n     * @return the new String.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.cli.Util.unknown#42",
        "is_bug": true,
        "src_path": "/data/bug_db/subjects/defects4j/Cli-5/result/src/org/apache/commons/cli/Util.java",
        "class_name": "org.apache.commons.cli.Util",
        "signature": "org.apache.commons.cli.Util.unknown(...)",
        "snippet": "int PROBE_START_LINE_38 = 38;",
        "begin_line": 42,
        "end_line": 42,
        "comment": "    \n     * <p>Remove the hyphens from the begining of <code>str</code> and\n     * return the new String.</p>\n     *\n     * @param str The string from which the hyphens should be removed.\n     *\n     * @return the new String.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    }
]