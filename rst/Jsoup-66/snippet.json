[
    {
        "name": "org.jsoup.helper.ChangeNotifyingArrayList.remove(Object o)#54",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/result/src/org/jsoup/helper/ChangeNotifyingArrayList.java",
        "class_name": "org.jsoup.helper.ChangeNotifyingArrayList",
        "signature": "org.jsoup.helper.ChangeNotifyingArrayList.remove(Object o)",
        "snippet": "public boolean remove(Object o) {\nonContentsChanged();\nreturn super.remove(o);\n}",
        "begin_line": 54,
        "end_line": 57,
        "comment": "\n * Implementation of ArrayList that watches out for changes to the contents.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.helper.ChangeNotifyingArrayList.clear()#60",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/result/src/org/jsoup/helper/ChangeNotifyingArrayList.java",
        "class_name": "org.jsoup.helper.ChangeNotifyingArrayList",
        "signature": "org.jsoup.helper.ChangeNotifyingArrayList.clear()",
        "snippet": "public void clear() {\nonContentsChanged();\nsuper.clear();\n}",
        "begin_line": 60,
        "end_line": 63,
        "comment": "\n * Implementation of ArrayList that watches out for changes to the contents.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.nodes.TextNode.TextNode(String text)#20",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/nodes/TextNode.java",
        "class_name": "org.jsoup.nodes.TextNode",
        "signature": "org.jsoup.nodes.TextNode.TextNode(String text)",
        "snippet": "public TextNode(String text) {\nvalue = text;\n}",
        "begin_line": 20,
        "end_line": 22,
        "comment": "    \n     Create a new TextNode representing the supplied (unencoded) text).\n\n     @param text raw text\n     @see #createFromEncoded(String)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.nodes.DocumentType.DocumentType(String name, String publicId, String systemId)#28",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/nodes/DocumentType.java",
        "class_name": "org.jsoup.nodes.DocumentType",
        "signature": "org.jsoup.nodes.DocumentType.DocumentType(String name, String publicId, String systemId)",
        "snippet": "public DocumentType(String name, String publicId, String systemId) {\nValidate.notNull(name);\nValidate.notNull(publicId);\nValidate.notNull(systemId);\nattr(NAME, name);\nattr(PUBLIC_ID, publicId);\nif (has(PUBLIC_ID)) {\nattr(PUB_SYS_KEY, PUBLIC_KEY);\n}",
        "begin_line": 28,
        "end_line": 36,
        "comment": "    \n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.nodes.Element.Element(Tag tag, String baseUri, Attributes attributes)#66",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/nodes/Element.java",
        "class_name": "org.jsoup.nodes.Element",
        "signature": "org.jsoup.nodes.Element.Element(Tag tag, String baseUri, Attributes attributes)",
        "snippet": "public Element(Tag tag, String baseUri, Attributes attributes) {\nValidate.notNull(tag);\nValidate.notNull(baseUri);\nchildNodes = EMPTY_NODES;\nthis.baseUri = baseUri;\nthis.attributes = attributes;\nthis.tag = tag;\n}",
        "begin_line": 66,
        "end_line": 73,
        "comment": "    \n     * Create a new, standalone Element. (Standalone in that is has no parent.)\n     * \n     * @param tag tag of this element\n     * @param baseUri the base URI\n     * @param attributes initial attributes\n     * @see #appendChild(Node)\n     * @see #appendElement(String)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.helper.StringUtil.isWhitespace(int c)#117",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/result/src/org/jsoup/helper/StringUtil.java",
        "class_name": "org.jsoup.helper.StringUtil",
        "signature": "org.jsoup.helper.StringUtil.isWhitespace(int c)",
        "snippet": "public static boolean isWhitespace(int c){\nint PROBE_START_LINE_108 = 108;\nint p_c_59_line_108 = c;\nboolean string_util1_expr11_line_108 = p_c_59_line_108 == ' ';\nboolean string_util1_expr12_line_108 = false;\nif (!string_util1_expr11_line_108) {\nstring_util1_expr12_line_108 = c == '\\t';\n}",
        "begin_line": 117,
        "end_line": 124,
        "comment": "    \n     * Tests if a code point is \"whitespace\" as defined in the HTML spec. Used for output HTML.\n     * @param c code point to test\n     * @return true if code point is whitespace, false otherwise\n     * @see #isActuallyWhitespace(int)\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.helper.StringUtil.isActuallyWhitespace(int c)#150",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/result/src/org/jsoup/helper/StringUtil.java",
        "class_name": "org.jsoup.helper.StringUtil",
        "signature": "org.jsoup.helper.StringUtil.isActuallyWhitespace(int c)",
        "snippet": "public static boolean isActuallyWhitespace(int c){\nint PROBE_START_LINE_117 = 117;\nint p_c_60_line_117 = c;\nboolean string_util1_expr21_line_117 = p_c_60_line_117 == ' ';\nboolean string_util1_expr22_line_117 = false;\nif (!string_util1_expr21_line_117) {\nstring_util1_expr22_line_117 = c == '\\t';\n}",
        "begin_line": 150,
        "end_line": 157,
        "comment": "    \n     * Tests if a code point is \"whitespace\" as defined by what it looks like. Used for Element.text etc.\n     * @param c code point to test\n     * @return true if code point is whitespace, false otherwise\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.helper.Validate.isTrue(boolean val, String msg)#55",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/result/src/org/jsoup/helper/Validate.java",
        "class_name": "org.jsoup.helper.Validate",
        "signature": "org.jsoup.helper.Validate.isTrue(boolean val, String msg)",
        "snippet": "public static void isTrue(boolean val, String msg) {\nint PROBE_START_LINE_44 = 45;\nboolean p_val_84_line_44 = val;\nboolean validate1_expr4_line_44 = !p_val_84_line_44;\nint PROBE_END_LINE_44 = 45;\nif (validate1_expr4_line_44)\nthrow new IllegalArgumentException(msg);\n}",
        "begin_line": 55,
        "end_line": 62,
        "comment": "    \n     * Validates that the value is true\n     * @param val object to test\n     * @param msg message to output if validation fails\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.helper.Validate.isFalse(boolean val, String msg)#81",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/result/src/org/jsoup/helper/Validate.java",
        "class_name": "org.jsoup.helper.Validate",
        "signature": "org.jsoup.helper.Validate.isFalse(boolean val, String msg)",
        "snippet": "public static void isFalse(boolean val, String msg) {\nint PROBE_START_LINE_63 = 64;\nboolean p_val_87_line_63 = val;\nint PROBE_END_LINE_63 = 64;\nif (p_val_87_line_63)\nthrow new IllegalArgumentException(msg);\n}",
        "begin_line": 81,
        "end_line": 87,
        "comment": "    \n     * Validates that the value is false\n     * @param val object to test\n     * @param msg message to output if validation fails\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.helper.Validate.noNullElements(Object[] objects)#93",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/result/src/org/jsoup/helper/Validate.java",
        "class_name": "org.jsoup.helper.Validate",
        "signature": "org.jsoup.helper.Validate.noNullElements(Object[] objects)",
        "snippet": "public static void noNullElements(Object[] objects) {\nint PROBE_START_LINE_72 = 72;\nObject[] p_objects_89_line_72 = objects;\nint PROBE_END_LINE_72 = 72;\nnoNullElements(p_objects_89_line_72, \"Array must not contain any null objects\");\n}",
        "begin_line": 93,
        "end_line": 98,
        "comment": "    \n     * Validates that the array contains no null elements\n     * @param objects the array to test\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.parser.ParseSettings.ParseSettings(boolean tag, boolean attribute)#33",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/parser/ParseSettings.java",
        "class_name": "org.jsoup.parser.ParseSettings",
        "signature": "org.jsoup.parser.ParseSettings.ParseSettings(boolean tag, boolean attribute)",
        "snippet": "public ParseSettings(boolean tag, boolean attribute) {\npreserveTagCase = tag;\npreserveAttributeCase = attribute;\n}",
        "begin_line": 33,
        "end_line": 36,
        "comment": "    \n     * Define parse settings.\n     * @param tag preserve tag case?\n     * @param attribute preserve attribute name case?\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.parser.Tag.Tag(String tagName)#26",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/parser/Tag.java",
        "class_name": "org.jsoup.parser.Tag",
        "signature": "org.jsoup.parser.Tag.Tag(String tagName)",
        "snippet": "private Tag(String tagName) {\nthis.tagName = tagName;\n}",
        "begin_line": 26,
        "end_line": 28,
        "comment": "\n * HTML Tag capabilities.\n *\n * @author Jonathan Hedley, jonathan@hedley.net\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.nodes.Node.Node()#26",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/nodes/Node.java",
        "class_name": "org.jsoup.nodes.Node",
        "signature": "org.jsoup.nodes.Node.Node()",
        "snippet": "protected Node() {\n}",
        "begin_line": 26,
        "end_line": 27,
        "comment": "    \n     * Default constructor. Doesn't setup base uri, children, or attributes; use with caution.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.parser.CharacterReader.CharacterReader(Reader input, int sz)#30",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "class_name": "org.jsoup.parser.CharacterReader",
        "signature": "org.jsoup.parser.CharacterReader.CharacterReader(Reader input, int sz)",
        "snippet": "public CharacterReader(Reader input, int sz) {\nValidate.notNull(input);\nValidate.isTrue(input.markSupported());\nreader = input;\ncharBuf = new char[sz > maxBufferLen ? maxBufferLen : sz];\nbufferUp();\n}",
        "begin_line": 30,
        "end_line": 36,
        "comment": "\n CharacterReader consumes tokens off a string. Used internally by jsoup. API subject to changes.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.nodes.Document.OutputSettings()#382",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/nodes/Document.java",
        "class_name": "org.jsoup.nodes.Document",
        "signature": "org.jsoup.nodes.Document.OutputSettings()",
        "snippet": "public OutputSettings() {\ncharset(Charset.forName(\"UTF8\"));\n}",
        "begin_line": 382,
        "end_line": 384,
        "comment": "        \n         * The output serialization syntax.\n         ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.jsoup.select.Elements.Elements()#23",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Jsoup-66/fixed/src/main/java/org/jsoup/select/Elements.java",
        "class_name": "org.jsoup.select.Elements",
        "signature": "org.jsoup.select.Elements.Elements()",
        "snippet": "public Elements() {\n}",
        "begin_line": 23,
        "end_line": 24,
        "comment": "\n A list of {@link Element}s, with methods that act on every element in the list.\n <p>\n To get an {@code Elements} object, use the {@link Element#select(String)} method.\n </p>\n\n @author Jonathan Hedley, jonathan@hedley.net ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    }
]