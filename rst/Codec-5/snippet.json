[
    {
        "name": "org.apache.commons.codec.binary.Base64.Base64(int lineLength, byte[] lineSeparator, boolean urlSafe)#332",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Codec-5/result/src/org/apache/commons/codec/binary/Base64.java",
        "class_name": "org.apache.commons.codec.binary.Base64",
        "signature": "org.apache.commons.codec.binary.Base64.Base64(int lineLength, byte[] lineSeparator, boolean urlSafe)",
        "snippet": "public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {\nint PROBE_START_LINE_333 = 336;\nbyte[] p_line_separator_11_line_333 = lineSeparator;\nboolean base641_expr6_line_333 = p_line_separator_11_line_333 == null;\nint PROBE_END_LINE_333 = 336;\nif (base641_expr6_line_333) {\nlineLength = 0;  // disable chunk-separating\nlineSeparator = CHUNK_SEPARATOR;  // this just gets ignored\n}",
        "begin_line": 332,
        "end_line": 340,
        "comment": "    \n     * Creates a Base64 codec used for decoding (all modes) and encoding in URL-unsafe mode.\n     * <p>\n     * When encoding the line length and line separator are given in the constructor, and the encoding table is\n     * STANDARD_ENCODE_TABLE.\n     * </p>\n     * <p>\n     * Line lengths that aren't multiples of 4 will still essentially end up being multiples of 4 in the encoded data.\n     * </p>\n     * <p>\n     * When decoding all variants are supported.\n     * </p>\n     * \n     * @param lineLength\n     *            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 4).\n     *            If lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when decoding.\n     * @param lineSeparator\n     *            Each line of encoded data will end with this sequence of bytes.\n     * @param urlSafe\n     *            Instead of emitting '+' and '/' we emit '-' and '_' respectively. urlSafe is only applied to encode\n     *            operations. Decoding seamlessly handles both modes.\n     * @throws IllegalArgumentException\n     *             The provided lineSeparator included some base64 characters. That's not going to work!\n     * @since 1.4\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "org.apache.commons.codec.binary.Base64.isUrlSafe()#413",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Codec-5/result/src/org/apache/commons/codec/binary/Base64.java",
        "class_name": "org.apache.commons.codec.binary.Base64",
        "signature": "org.apache.commons.codec.binary.Base64.isUrlSafe()",
        "snippet": "public boolean isUrlSafe() {\nreturn this.encodeTable == URL_SAFE_ENCODE_TABLE;\n}",
        "begin_line": 413,
        "end_line": 415,
        "comment": "    \n     * Returns our current encode mode. True if we're URL-SAFE, false otherwise.\n     * \n     * @return true if we're in URL-SAFE mode, false otherwise.\n     * @since 1.4\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    }
]