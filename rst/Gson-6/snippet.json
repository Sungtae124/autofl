[
    {
        "name": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor)#37",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Gson-6/result/src/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java",
        "class_name": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory",
        "signature": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor)",
        "snippet": "public JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor) {\nint PROBE_START_LINE_37 = 37;\ncom.google.gson.internal.ConstructorConstructor p_constructor_constructor_281_line_37 = constructorConstructor;\nint PROBE_END_LINE_37 = 37;\nthis.constructorConstructor = p_constructor_constructor_281_line_37;\n}",
        "begin_line": 37,
        "end_line": 42,
        "comment": "\n * Given a type T, looks for the annotation {@link JsonAdapter} and uses an instance of the\n * specified class as the default type adapter.\n *\n * @since 2.3\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?> subclass)#94",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Gson-6/result/src/com/google/gson/reflect/TypeToken.java",
        "class_name": "com.google.gson.reflect.TypeToken",
        "signature": "com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?> subclass)",
        "snippet": "static Type getSuperclassTypeParameter(Class<?> subclass) {\nType superclass = subclass.getGenericSuperclass();\nif (superclass instanceof Class) {\nthrow new RuntimeException(\"Missing type parameter.\");\n}",
        "begin_line": 94,
        "end_line": 98,
        "comment": "  \n   * Returns the type from super class's type parameter in {@link $Gson$Types#canonicalize\n   * canonical form}.\n   ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.google.gson.internal.ConstructorConstructor.ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators)#51",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Gson-6/result/src/com/google/gson/internal/ConstructorConstructor.java",
        "class_name": "com.google.gson.internal.ConstructorConstructor",
        "signature": "com.google.gson.internal.ConstructorConstructor.ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators)",
        "snippet": "public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) {\nint PROBE_START_LINE_52 = 52;\nMap<Type, InstanceCreator<?>> p_instance_creators_190_line_52 = instanceCreators;\nint PROBE_END_LINE_52 = 52;\nthis.instanceCreators = p_instance_creators_190_line_52;\n}",
        "begin_line": 51,
        "end_line": 56,
        "comment": "\n * Returns a function that can construct an instance of a requested type.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.google.gson.internal.bind.CollectionTypeAdapterFactory.CollectionTypeAdapterFactory(ConstructorConstructor constructorConstructor)#39",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Gson-6/result/src/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java",
        "class_name": "com.google.gson.internal.bind.CollectionTypeAdapterFactory",
        "signature": "com.google.gson.internal.bind.CollectionTypeAdapterFactory.CollectionTypeAdapterFactory(ConstructorConstructor constructorConstructor)",
        "snippet": "public CollectionTypeAdapterFactory(ConstructorConstructor constructorConstructor) {\nint PROBE_START_LINE_40 = 40;\ncom.google.gson.internal.ConstructorConstructor p_constructor_constructor_262_line_40 = constructorConstructor;\nint PROBE_END_LINE_40 = 40;\nthis.constructorConstructor = p_constructor_constructor_262_line_40;\n}",
        "begin_line": 39,
        "end_line": 44,
        "comment": "\n * Adapt a homogeneous collection of objects.\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()#116",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Gson-6/result/src/com/google/gson/internal/Excluder.java",
        "class_name": "com.google.gson.internal.Excluder",
        "signature": "com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()",
        "snippet": "public Excluder excludeFieldsWithoutExposeAnnotation() {\nExcluder result = clone();\nresult.requireExpose = true;\nreturn result;\n}",
        "begin_line": 116,
        "end_line": 120,
        "comment": "\n * This class selects which fields and types to omit. It is configurable,\n * supporting version attributes {@link Since} and {@link Until}, modifiers,\n * synthetic fields, anonymous and local classes, inner classes, and fields with\n * the {@link Expose} annotation.\n *\n * <p>This class is a type adapter factory; types that are excluded will be\n * adapted to null. It may delegate to another type adapter if only one\n * direction is excluded.\n *\n * @author Joel Leitch\n * @author Jesse Wilson\n ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.google.gson.internal.Excluder.excludeField(Field field, boolean serialize)#197",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Gson-6/result/src/com/google/gson/internal/Excluder.java",
        "class_name": "com.google.gson.internal.Excluder",
        "signature": "com.google.gson.internal.Excluder.excludeField(Field field, boolean serialize)",
        "snippet": "public boolean excludeField(Field field, boolean serialize) {\nif ((modifiers & field.getModifiers()) != 0) {\nreturn true;\n}",
        "begin_line": 197,
        "end_line": 200,
        "comment": "       The delegate is lazily created because it may not be needed, and creating it may fail. ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    },
    {
        "name": "com.google.gson.internal.bind.TypeAdapters.EnumTypeAdapter(Class<T> classOfT)#904",
        "is_bug": false,
        "src_path": "/data/bug_db/subjects/defects4j/Gson-6/result/src/com/google/gson/internal/bind/TypeAdapters.java",
        "class_name": "com.google.gson.internal.bind.TypeAdapters",
        "signature": "com.google.gson.internal.bind.TypeAdapters.EnumTypeAdapter(Class<T> classOfT)",
        "snippet": "public EnumTypeAdapter(Class<T> classOfT) {\ntry {\nfor (T constant : classOfT.getEnumConstants()) {\nString name = constant.name();\nSerializedName annotation = classOfT.getField(name).getAnnotation(SerializedName.class);\nif (annotation != null) {\nname = annotation.value();\nfor (String alternate : annotation.alternate()) {\nnameToConstant.put(alternate, constant);\n}",
        "begin_line": 904,
        "end_line": 913,
        "comment": "       regrettably, this should have included both the host name and the host address",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5
        },
        "num_failing_tests": 0
    }
]